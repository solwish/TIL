
<p>
  <strong>User:</strong>
  <%= @board.user.email %>
</p>

<p>
  <strong>Title:</strong>
  <%= @board.title %>
</p>

<p>
  <strong>Contents:</strong>
  <%= @board.contents %>
</p>

<% if @like.length > 0 %>
  <button type="button" class="btn btn-primary like" ><i class="far fa-thumbs-up fa-spin"></i>좋아요(<span id="like-count"><%= @board.likes.count %></span>)</button> |
<% else %>
  <button type="button" class="btn btn-outline-primary like" ><i class="far fa-thumbs-up fa-spin"></i>좋아요(<span id="like-count"><%= @board.likes.length %></span>)</button> |
<% end %>
<%= link_to '<i class="fas fa-home fa-spin"></i> 홈으로'.html_safe, boards_path, class: 'btn btn-success' %>
<% if user_signed_in? and @board.require_permission?(current_user) %>
   |<%= link_to '<i class="fas fa-pen-square fa-spin"></i> 수정'.html_safe, edit_board_path(@board), class: 'btn btn-warning' %> |
  <%= link_to '<i class="fas fa-trash-alt fa-spin"></i> 삭제'.html_safe, board_path(@board), class: 'btn btn-danger', data: {method: :delete, confirm: "삭제할거?"} %>
<% end %>
 | | | |<button class="btn btn-outline-danger delete"><i class="fas fa-trash-alt"></i>삭제 요청 js로 보내기</button>

<br><br>
<form class="form-inline my-2 my-lg-0" id="comment-form">
  <input class="form-control mr-sm-2" id="comment-input" type="text" placeholder="Comment">
  <button class="btn btn-outline-success my-2 my-sm-0" type="submit">댓글쓰기</button>
</form><br>

<table class="table">
  <thead>
    <tr>
      <th width="70%">내용</th>
      <th width="10%">작성자</th>
      <th colspan="2" width="20%"></th>
    </tr>
  </thead>
  <tbody class="comment-list">
  <% @board.comments.reverse.each do |comment| %>
  <tr id="comment-<%= comment.id %>">
    <td class="comment" data-id="<%= comment.id %>"><%= comment.contents %></td>
    <td><%= comment.user.email %></td>
    <td></td>
    <td><button class="btn btn-outline-danger delete-comment" data-id="<%= comment.id %>"><i class="fas fa-trash-alt"></i>삭제</button></td>
  </tr>
  <% end %>
  </tbody>
</table>

<% content_for :script do %>
<script>
  $(function(){
    // 1. 좋아요 버튼을 눌렀을때
    $('.like').on('click', function() {
    // 2. ajax를 이용해서 /board/:board_id/like 라는 url에 요청을 보냄
      $.ajax({
        url: '/boards/<%= @board.id %>/like',
        method: "GET"
      })
    })

    // 댓글기능
    // 1. form이 제출(submit)되면
    $('#comment-form').on('submit', function(e) {     // event의 e
    // 2. form의 기본 이벤트를 막아주고
      e.preventDefault();
    // 3. form 안의 input 태그에서 입력한 값을 가져온 다음
      var data = $('#comment-input').val();  //value랑 같은거야 val()
    // 4. 해당 값을 댓글을 등록하는 url로 보냄(ajax이용)
      $.ajax({
        url: '/boards/<%= @board.id %>/comments',
        method: "POST",
        data: {
          contents: data,
        }
      })
    })

    $('.delete').on('click', function() {
      $.ajax({
        url: "/boards/<%= @board.id %>.js",   //.js 해줘야해 json도 그럴듯
        method: "DELETE"
      })
    })

    //자바스크립트로 추가된 엘리먼트에 이벤트를 줄때는 파라메터에 3개를 주는
    //이벤트 리스너를 줘야한다. 감싸고 있는 부분의 돔트리를 리로드
    $('.comment-list').on('click', '.delete-comment', function() {
      var id = $(this).data('id');
      $.ajax({
        url: "/boards/<%= @board.id %>/comments/" + id,   //.js 해줘야해 json도 그럴듯
        method: "DELETE"
      })
    })

    // 댓글 수정하기
    $('.comment-list').on('click', '.comment', function() {
      // console.log($(this)); this는 td임
      // 3. 수정 완료 버튼을 삭제 버튼 옆에 추가한다. 밑 리플레이스 전에 해줘야해 바뀌고 나서는 못찾아줘
      // console.log($(this).siblings()[1]);
      // console.log($(this).parents('.comment-list').find('.comment-form'));

//____________________________선택지 1
      // if($(this).parents('.comment-list').find('.comment-form').length > 0){
      //   // 이미 열려있는 comment-form이 있다면
      //   alert('이미 수정중인 comment가 있습니다.');
      //   return false;
      // }

      $(this).siblings()[1].innerHTML = '<button class="btn btn-outline-warning update-comment"><i class="fas fa-pen-square"></i>완료</button>';
      var text = $(this).text();
      // 1. 댓글 내용이 들어있는 td태그 부분을 누르면
      // 2. 해당 부분을 댓글 내용이 들어있는 input 태그로 바꾸고
      var id = $(this).data('id');
      // console.log(id);
      $(this).replaceWith(`<td class="edit-comment"><input class="form-control comment-form" value="${text}"><input class="comment-id" type="hidden" value="${id}" /></td>`)
    })

    // 하나의 input 창이 열려있는 경우, 추가적인 input 창을 못열게  -> 선택지 1
    // 각 완료버튼에 따라서 어떤 input의 완료버튼인지 체크  ->  선택지 2

    // 완료 버튼을 누르면 작성했떤 내용이 서버로 가서 저장(update)
    $('.comment-list').on('click', '.update-comment', function() {
//____________________________선택지 2
      var id = $(this).data('id');
      console.log($('.comment-form').val());
      console.log($(this).parents("tr").find('.comment-form').val());

      // 1. input 태크에 있는 내용물을 뽑아서 서버로 보냄
      var text = $('.comment-form').val();//선택지 1
      var id = $('.comment-id').val();
      //선택지2
      var text = $(this).parents("tr").find('.comment-form').val()
      var id = $(this).parents("tr").find('.comment-id').val();

      $.ajax({
        url: '/boards/<%= @board.id %>/comments/' + id,
        method: 'PATCH',
        data: {
          contents: text
        }
      })
    })

  })
</script>
<% end %>
