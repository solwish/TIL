package swExpert;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class ProtectiveFilm {
	static int D, W, K;
	static int change;

	static void solve(int[][] A, boolean[] B) {
		int cnt;
		for (int i = 0; i < B.length; i++)
			B[i] = false;

		for (int j = 0; j < W; j++) {
			cnt = 0;
			for (int i = 0; i < D - 1; i++) {
				for (int k = 0; k < K; k++) {
					if (A[i][j] == A[i + 1][j]) {
						cnt++;
					} else {
						cnt = 0;
					}
					if (cnt == K) {
						B[i] = true;
						break;
					}
				}
				if (B[i] = true)
					break;
			}
		}

	}

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringTokenizer s;

		for (int t_case = 1; t_case <= T; t_case++) {
			s = new StringTokenizer(br.readLine());
			D = Integer.parseInt(s.nextToken());
			W = Integer.parseInt(s.nextToken());
			K = Integer.parseInt(s.nextToken());
			int[][] A = new int[D][W];
			change = 0;

			for (int i = 0; i < D; i++) {
				s = new StringTokenizer(br.readLine());
				for (int j = 0; j < W; j++) {
					A[i][j] = Integer.parseInt(s.nextToken());
				}
			}

		}
	}

}
