package swExpert;

import java.util.LinkedList;
import java.util.Scanner;

public class SumSubsequenc {
	static LinkedList<Integer> li;

	static void permutation()= new LinkedList<Integer>();

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		int N, K;
		for (int t_case = 1; t_case <= T; t_case++) {
			N = sc.nextInt();
			T = sc.nextInt();
			li.clear();

			for (int i = 1; i <= N; i++) {
				if (N % i == 0)
					li.add(i);
			}
			boolean[] check = new boolean[li.size()];
			permutation(check, li.size(), 0);

			System.out.println("#" + t_case + " ");
		}
	}

}
