package swExpert;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class LunchTime {
	static int answer = Integer.MAX_VALUE;
	static int[] match;

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		int N;

		for (int t_case = 1; t_case <= T; t_case++) {
			N = Integer.parseInt(br.readLine());
			int[][] A = new int[N][N];
			Queue<Integer> man = new LinkedList<Integer>();
			Queue<Integer> stair = new LinkedList<Integer>();
			StringTokenizer s;
			int M = 0;

			for (int i = 0; i < N; i++) {
				s = new StringTokenizer(br.readLine());
				for (int j = 0; j < N; j++) {
					A[i][j] = Integer.parseInt(s.nextToken());
					if (A[i][j] == 1) {
						man.offer(i);
						man.offer(j);
						M++;
					} else if (A[i][j] >= 2) {
						stair.offer(i);
						stair.offer(j);
					}
				}
			}
			answer = Integer.MAX_VALUE;
			match = new int[M];

			System.out.println("#" + t_case + " " + answer);
		}
	}

}
