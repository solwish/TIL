package swExpert;

import java.util.Scanner;

public class MaximumPathLength {
	static int T;
	static int N;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		T = sc.nextInt();
		N = sc.nextInt();
		int M = sc.nextInt();
		int[][] d = new int[N][N];
		int a, b;

		for (int i = 0; i < M; i++) {
			a = sc.nextInt();
			b = sc.nextInt();
			d[a][b] = 1;
			d[b][a] = 1;
		}

		int max = 1;
		for (int s = 0; s < N; s++) {
			int[] pie = new int[N];
			dfs(d, s, pie);
		}
	}

	private static int dfs(int[] d, int s, int[] pie) {
		for (int j = 0; j < N; j++)
			pie[j] = -1;
		pie[i] = 0;

		for (int k = 0; k < N; k++) {
			if (pie[k] == -1) {
				cnt++;
				dfs(max, k);
			}
		}
		return (max > cnt) ? max : cnt;
	}

}
