package swExpert;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class BFSPracticeEx03 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = 10;

		for (int test_case = 0; test_case < T; test_case++) {
			int[][] A = new int[101][101];
			int z = sc.nextInt();
			int s = sc.nextInt();
			Queue<Integer> Q = new LinkedList<Integer>();

			for (int i = 0; i < z; i++) {
				int n = sc.nextInt();
				int m = sc.nextInt();
				A[n][m] = 1;
			}

			int[] d = new int[101];
			int[] pie = new int[101];

			for (int i = 0; i < 101; i++) {
				d[i] = -1;
				pie[i] = -1;
			}

			d[s] = 0;
			Q.offer(s);
			while (!Q.isEmpty()) {
				int u = Q.poll();
				for (int v = 1; v <= 100; v++) {
					if (A[u][v] == 1) {
						
					}
				}
			}

		}
	}
}
