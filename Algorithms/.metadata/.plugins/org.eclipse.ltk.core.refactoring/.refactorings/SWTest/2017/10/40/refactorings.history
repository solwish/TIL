<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;PracticeSort&apos; to &apos;PracticeSort01&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Original element: &apos;PracticeSort&apos;&#x0D;&#x0A;- Renamed element: &apos;PracticeSort01&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;PracticeSort&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;{PracticeSort.java[PracticeSort" matchStrategy="1" name="PracticeSort01" qualified="false" references="true" similarDeclarations="false" stamp="1507015569613" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;SWexpert.Test01&apos; to &apos;JavaArraysSort&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Original element: &apos;SWexpert.Test01&apos;&#x0D;&#x0A;- Renamed element: &apos;SWexpert.JavaArraysSort&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Test01&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;SWexpert{Test01.java[Test01" matchStrategy="1" name="JavaArraysSort" qualified="false" references="true" similarDeclarations="false" stamp="1507112177024" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename package &apos;SWexpert&apos; to &apos;swExpert&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Original element: &apos;SWTest/src/SWexpert&apos;&#x0D;&#x0A;- Renamed element: &apos;SWTest/src/swExpert&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;SWexpert&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;SWexpert" name="swExpert" qualified="false" references="true" stamp="1507188991973" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static int compareBlock(int cnt, int [] [] A, int i, int j, int x)&apos; from &apos;swExpert.Sudoku.main()&apos; to &apos;swExpert.Sudoku&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Method name: &apos;compareBlock&apos;&#x0D;&#x0A;- Destination type: &apos;swExpert.Sudoku&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;compareBlock&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;swExpert{Sudoku.java" name="compareBlock" replace="true" selection="1474 673" stamp="1507214990979" version="1.0" visibility="2"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;SWTest&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Original element: &apos;swExpert.Test01.java&apos;" description="Delete element" element1="/src&lt;swExpert{Test01.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1507223547119" subPackages="false" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract method &apos;private static void solve(int [] code, int [] sol)&apos; from &apos;swExpert.BinaryCode.main()&apos; to &apos;swExpert.BinaryCode&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Method name: &apos;solve&apos;&#x0D;&#x0A;- Destination type: &apos;swExpert.BinaryCode&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;solve&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;swExpert{BinaryCode.java" name="solve" replace="false" selection="863 1693" stamp="1507278082962" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void makeBinary(int [] code, char [] c)&apos; from &apos;swExpert.Hexadecimalcode.main()&apos; to &apos;swExpert.Hexadecimalcode&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Method name: &apos;makeBinary&apos;&#x0D;&#x0A;- Destination type: &apos;swExpert.Hexadecimalcode&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;makeBinary&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;swExpert{Hexadecimalcode.java" name="makeBinary" replace="false" selection="700 1975" stamp="1507290913719" version="1.0" visibility="2"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;SWTest&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Original element: &apos;swExpert.HsProgramCheck.java&apos;" description="Delete element" element1="/src&lt;swExpert{HsProgramCheck.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1507303233578" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void printPath(int [] pie, int s, int v)&apos; from &apos;BFS.main()&apos; to &apos;BFS&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Method name: &apos;printPath&apos;&#x0D;&#x0A;- Destination type: &apos;BFS&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;printPath&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{BFS.java" name="printPath" replace="false" selection="1103 165" stamp="1507359127713" version="1.0" visibility="2"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private static void isPossible(int [] pie, int s, int v)&apos; from &apos;swExpert.BFSPracticeEx01.main()&apos; to &apos;swExpert.BFSPracticeEx01&apos;&#x0D;&#x0A;- Original project: &apos;SWTest&apos;&#x0D;&#x0A;- Method name: &apos;isPossible&apos;&#x0D;&#x0A;- Destination type: &apos;swExpert.BFSPracticeEx01&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;isPossible&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;swExpert{BFSPracticeEx01.java" name="isPossible" replace="false" selection="1028 213" stamp="1507362390205" version="1.0" visibility="2"/>
</session>