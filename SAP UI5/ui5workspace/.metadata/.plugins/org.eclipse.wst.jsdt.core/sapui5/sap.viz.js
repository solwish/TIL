
// ---- sap.viz --------------------------------------------------------------------------


// ---- sap.viz.ui5.api.env.Format --------------------------------------------------------------------------

/**
 * Customize the global numeric formatter. If you set a formatter, it will
 * replace the existing formatter. This function will take effect globally.
 * 
 * 
 * Example:
 * <pre>
 * var customerFormatter = {
 *     format : function(value, pattern) {
 *         // add your codes here to convert number value to formatted string
 *         // according to the pattern string
 *         return formattedString;
 *     }
 * };
 * sap.viz.ui5.api.env.Format.numericFormatter(customerFormatter);
 * </pre>
 * 
 * @param {function}
 *            formatter
 * @returns {sap.viz.ui5.api.env.Format}
 * @public
 * 
 * @memberof sap.viz.ui5.api.env.Format
 */
sap.viz.ui5.api.env.Format.numericFormatter = function(formatter) { return new sap.viz.ui5.api.env.Format(); };


// ---- sap.viz.ui5.Area --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Area
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Area</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Area
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Area = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area</code> itself
 * 
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area</code> itself
 * 
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area</code> itself
 * 
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area</code> itself
 * 
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area</code> itself
 * 
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyBackground = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyGeneral = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyInteraction = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyLegend = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyTitle = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyToolTip = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyXAxis = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Area(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.destroyYAxis = function() { return new sap.viz.ui5.Area(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Area</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Area(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Area with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Area.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Area.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Area(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Area(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Area.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Area(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Area.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Area(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Area(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Area.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Area.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.area
 * 
 * @returns {sap.viz.ui5.types.Area}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Area} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Area(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Area(); };


// ---- sap.viz.ui5.Area100 --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Area100
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Area</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Area100
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Area100 = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area100</code> itself
 * 
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area100</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area100</code> itself
 * 
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area100.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area100</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area100</code> itself
 * 
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area100</code> itself
 * 
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Area100</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Area100</code> itself
 * 
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area100.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyBackground = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyGeneral = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyInteraction = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyLegend = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyTitle = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyToolTip = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyXAxis = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Area100(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.destroyYAxis = function() { return new sap.viz.ui5.Area100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Area100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Area100(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Area100 with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Area100.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Area100.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Area100(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area100.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Area100(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Area100.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Area100(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Area100.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Area100(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Area100.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Area100(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Area100.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Area100.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.area
 * 
 * @returns {sap.viz.ui5.types.Area}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Area} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Area100(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Area100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Area100.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Area100(); };


// ---- sap.viz.ui5.Bar --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Bar
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Bar</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Bar
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'bar'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Bar = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bar</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bar</code> itself
 * 
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bar</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bar</code> itself
 * 
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bar.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bar</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bar</code> itself
 * 
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bar</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bar</code> itself
 * 
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bar</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bar</code> itself
 * 
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bar.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyBackground = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyGeneral = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyInteraction = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyLegend = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyTitle = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyToolTip = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyXAxis = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Bar(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.destroyYAxis = function() { return new sap.viz.ui5.Bar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Bar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Bar(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Bar with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Bar.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bar.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Bar(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bar.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Bar(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bar.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Bar(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bar.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Bar(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bar.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Bar(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Bar.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Bar.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.bar
 * 
 * @returns {sap.viz.ui5.types.Bar}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Bar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Bar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Bar(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bar.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Bar(); };


// ---- sap.viz.ui5.Bubble --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Bubble
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getSizeLegend sizeLegend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Bubble</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Bubble
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'bubble'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Bubble = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bubble</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bubble</code> itself
 * 
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bubble</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bubble</code> itself
 * 
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bubble.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bubble</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bubble</code> itself
 * 
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bubble</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bubble</code> itself
 * 
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bubble</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bubble</code> itself
 * 
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bubble.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyBackground = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyGeneral = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyInteraction = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyLegend = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the sizeLegend in the aggregation {@link #getSizeLegend sizeLegend}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroySizeLegend = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyTitle = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyToolTip = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyXAxis = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.destroyYAxis = function() { return new sap.viz.ui5.Bubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Bubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Bubble(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Bubble with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Bubble.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bubble.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Bubble(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bubble.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Bubble(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bubble.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Bubble(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bubble.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Bubble(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bubble.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Bubble(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Bubble.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Bubble.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.bubble
 * 
 * @returns {sap.viz.ui5.types.Bubble}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Bubble(); };

/**
 * Gets content of aggregation {@link #getSizeLegend sizeLegend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getSizeLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Bubble} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getSizeLegend sizeLegend}.
 * @param {sap.viz.ui5.types.legend.Common} oSizeLegend The sizeLegend to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setSizeLegend = function(oSizeLegend) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Bubble(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bubble.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Bubble(); };


// ---- sap.viz.ui5.Bullet --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Bullet
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Bullet</li>
 * <li>{@link #getXAxis2 xAxis2} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis2 yAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Bullet
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'vertical_bullet'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Bullet = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bullet</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bullet</code> itself
 * 
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bullet</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bullet</code> itself
 * 
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bullet.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bullet</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bullet</code> itself
 * 
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bullet</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bullet</code> itself
 * 
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Bullet</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Bullet</code> itself
 * 
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bullet.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyBackground = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyGeneral = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyInteraction = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyTitle = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyToolTip = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the xAxis2 in the aggregation {@link #getXAxis2 xAxis2}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyXAxis2 = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyYAxis = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.destroyYAxis2 = function() { return new sap.viz.ui5.Bullet(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Bullet</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Bullet(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Bullet with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Bullet.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bullet.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Bullet(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bullet.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Bullet(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bullet.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Bullet(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Bullet.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Bullet(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Bullet.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Bullet(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Bullet.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Bullet.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.bullet
 * 
 * @returns {sap.viz.ui5.types.Bullet}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Bullet(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis2 xAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getXAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getYAxis2 yAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.getYAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Bullet} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getXAxis2 xAxis2}.
 * @param {sap.viz.ui5.types.Axis} oXAxis2 The xAxis2 to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setXAxis2 = function(oXAxis2) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Bullet(); };

/**
 * Sets the aggregated {@link #getYAxis2 yAxis2}.
 * @param {sap.viz.ui5.types.Axis} oYAxis2 The yAxis2 to set
 * @returns {sap.viz.ui5.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Bullet.prototype.setYAxis2 = function(oYAxis2) { return new sap.viz.ui5.Bullet(); };


// ---- sap.viz.ui5.Column --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Column
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.VerticalBar</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Column
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'column'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Column = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Column</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Column</code> itself
 * 
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Column</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Column</code> itself
 * 
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Column.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Column</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Column</code> itself
 * 
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Column</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Column</code> itself
 * 
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Column</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Column</code> itself
 * 
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Column.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyBackground = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyGeneral = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyInteraction = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyLegend = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyTitle = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyToolTip = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyXAxis = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Column(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.destroyYAxis = function() { return new sap.viz.ui5.Column(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Column</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Column(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Column with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Column.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Column.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Column(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Column.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Column(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Column.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Column(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Column.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Column(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Column.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Column(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Column.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Column.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.verticalbar
 * 
 * @returns {sap.viz.ui5.types.VerticalBar}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getPlotArea = function() { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.VerticalBar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Column(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Column} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Column.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Column(); };


// ---- sap.viz.ui5.Combination --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Combination
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Combination</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Combination
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'combination'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Combination = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Combination</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Combination</code> itself
 * 
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Combination</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Combination</code> itself
 * 
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Combination.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Combination</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Combination</code> itself
 * 
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Combination</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Combination</code> itself
 * 
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Combination</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Combination</code> itself
 * 
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Combination.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyBackground = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyGeneral = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyInteraction = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyLegend = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyTitle = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyToolTip = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyXAxis = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Combination(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.destroyYAxis = function() { return new sap.viz.ui5.Combination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Combination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Combination(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Combination with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Combination.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Combination.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Combination(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Combination.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Combination(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Combination.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Combination(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Combination.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Combination(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Combination.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Combination(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Combination.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Combination.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.combination
 * 
 * @returns {sap.viz.ui5.types.Combination}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Combination} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Combination(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Combination.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Combination(); };


// ---- sap.viz.ui5.controls.common.BaseControl --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/controls/common/BaseControl.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getUiConfig uiConfig} : object</li>
 * <li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 640px)</li>
 * <li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 480px)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * An abstract base class for all VIZ controls
 * @extends sap.ui.core.Control
 * 
 * @constructor
 * @public
 * @since 1.22.0
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.common.BaseControl = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.controls.common.BaseControl with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.common.BaseControl.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getHeight height}.
 * 
 * Height of the VizControl as a CSS size.
 * 
 * Default value is <code>480px</code>.
 * @returns {sap.ui.core.CSSSize} Value of property <code>height</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.BaseControl.prototype.getHeight = function() { return new sap.ui.core.CSSSize(); };

/**
 * Returns a metadata object for class sap.viz.ui5.controls.common.BaseControl.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.common.BaseControl.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getUiConfig uiConfig}.
 * 
 * Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.
 * 
 * @returns {object} Value of property <code>uiConfig</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.BaseControl.prototype.getUiConfig = function() { return new Object(); };

/**
 * Gets current value of property {@link #getWidth width}.
 * 
 * Width of the VizControl as a CSS size.
 * 
 * Default value is <code>640px</code>.
 * @returns {sap.ui.core.CSSSize} Value of property <code>width</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.BaseControl.prototype.getWidth = function() { return new sap.ui.core.CSSSize(); };

/**
 * Sets a new value for property {@link #getHeight height}.
 * 
 * Height of the VizControl as a CSS size.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>480px</code>.
 * @param {sap.ui.core.CSSSize} sHeight New value for property <code>height</code>
 * @returns {sap.viz.ui5.controls.common.BaseControl} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.BaseControl.prototype.setHeight = function(sHeight) { return new sap.viz.ui5.controls.common.BaseControl(); };

/**
 * Sets a new value for property {@link #getUiConfig uiConfig}.
 * 
 * Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object} oUiConfig New value for property <code>uiConfig</code>
 * @returns {sap.viz.ui5.controls.common.BaseControl} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.BaseControl.prototype.setUiConfig = function(oUiConfig) { return new sap.viz.ui5.controls.common.BaseControl(); };

/**
 * Sets a new value for property {@link #getWidth width}.
 * 
 * Width of the VizControl as a CSS size.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>640px</code>.
 * @param {sap.ui.core.CSSSize} sWidth New value for property <code>width</code>
 * @returns {sap.viz.ui5.controls.common.BaseControl} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.BaseControl.prototype.setWidth = function(sWidth) { return new sap.viz.ui5.controls.common.BaseControl(); };


// ---- sap.viz.ui5.controls.common.feeds.AnalysisObject --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/controls/common/feeds/AnalysisObject.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getUid uid} : string</li>
 * <li>{@link #getName name} : string</li>
 * <li>{@link #getType type} : string</li>
 * <li>{@link #getDataType dataType} : string</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * AnalysisObject Class
 * @extends sap.ui.core.Element
 * 
 * @constructor
 * @public
 * @since 1.21.0
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.controls.common.feeds.AnalysisObject with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataType dataType}.
 * 
 * Data type of an analysis object. Enumeration: string, number, date
 * 
 * @returns {string} Value of property <code>dataType</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.getDataType = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.controls.common.feeds.AnalysisObject.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getName name}.
 * 
 * Name of an analysis object.
 * 
 * @returns {string} Value of property <code>name</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.getName = function() { return ""; };

/**
 * Gets current value of property {@link #getType type}.
 * 
 * Type of an analysis object. Enumeration: Measure, Dimension
 * 
 * @returns {string} Value of property <code>type</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.getType = function() { return ""; };

/**
 * Gets current value of property {@link #getUid uid}.
 * 
 * Uid of analysis object
 * 
 * @returns {string} Value of property <code>uid</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.getUid = function() { return ""; };

/**
 * Sets a new value for property {@link #getDataType dataType}.
 * 
 * Data type of an analysis object. Enumeration: string, number, date
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sDataType New value for property <code>dataType</code>
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.setDataType = function(sDataType) { return new sap.viz.ui5.controls.common.feeds.AnalysisObject(); };

/**
 * Sets a new value for property {@link #getName name}.
 * 
 * Name of an analysis object.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sName New value for property <code>name</code>
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.setName = function(sName) { return new sap.viz.ui5.controls.common.feeds.AnalysisObject(); };

/**
 * Sets a new value for property {@link #getType type}.
 * 
 * Type of an analysis object. Enumeration: Measure, Dimension
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sType New value for property <code>type</code>
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.setType = function(sType) { return new sap.viz.ui5.controls.common.feeds.AnalysisObject(); };

/**
 * Sets a new value for property {@link #getUid uid}.
 * 
 * Uid of analysis object
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sUid New value for property <code>uid</code>
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype.setUid = function(sUid) { return new sap.viz.ui5.controls.common.feeds.AnalysisObject(); };


// ---- sap.viz.ui5.controls.common.feeds.FeedItem --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/controls/common/feeds/FeedItem.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getUid uid} : string</li>
 * <li>{@link #getType type} : string</li>
 * <li>{@link #getValues values} : any[]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * FeedItem Class
 * @extends sap.ui.core.Element
 * 
 * @constructor
 * @public
 * @since 1.21.0
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.controls.common.feeds.FeedItem with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.controls.common.feeds.FeedItem.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getType type}.
 * 
 * Type of a feed item. Enumeration: Measure, Dimension
 * 
 * @returns {string} Value of property <code>type</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.prototype.getType = function() { return ""; };

/**
 * Gets current value of property {@link #getUid uid}.
 * 
 * Uid of a feed item.
 * Please reference to bindings section in VIZDOCS to get the exact sUid string for each chart type.
 * 
 * For example:
 * 	Bar chart > bindings > categoryAxis ; color ; valueAxis.
 * 	The 'categoryAxis' should be the sUid for x axis feeding for bar chart.
 * 
 * @returns {string} Value of property <code>uid</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.prototype.getUid = function() { return ""; };

/**
 * Gets current value of property {@link #getValues values}.
 * 
 * Value of a feed item.
 * 
 * @returns {any[]} Value of property <code>values</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.prototype.getValues = function() { return new Array(); };

/**
 * Sets a new value for property {@link #getType type}.
 * 
 * Type of a feed item. Enumeration: Measure, Dimension
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sType New value for property <code>type</code>
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.prototype.setType = function(sType) { return new sap.viz.ui5.controls.common.feeds.FeedItem(); };

/**
 * Sets a new value for property {@link #getUid uid}.
 * 
 * Uid of a feed item.
 * Please reference to bindings section in VIZDOCS to get the exact sUid string for each chart type.
 * 
 * For example:
 * 	Bar chart > bindings > categoryAxis ; color ; valueAxis.
 * 	The 'categoryAxis' should be the sUid for x axis feeding for bar chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sUid New value for property <code>uid</code>
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.prototype.setUid = function(sUid) { return new sap.viz.ui5.controls.common.feeds.FeedItem(); };

/**
 * Sets a new value for property {@link #getValues values}.
 * 
 * Value of a feed item.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any[]} sValues New value for property <code>values</code>
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.common.feeds.FeedItem.prototype.setValues = function(sValues) { return new sap.viz.ui5.controls.common.feeds.FeedItem(); };


// ---- sap.viz.ui5.controls.Popover --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/controls/Popover.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getCustomDataControl customDataControl} : any</li>
 * <li>{@link #getActionItems actionItems} : object[]</li>
 * <li>{@link #getFormatString formatString} : any</li>
 * <li>{@link #getShowLine showLine} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Viz Chart Popover
 * @extends sap.viz.ui5.controls.common.BaseControl
 * 
 * @constructor
 * @public
 * @since 1.22.0
 * @experimental Since version 1.22.0. 
 * API is not finished yet and might change completely
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.Popover = function(sId,mSettings) {};
/**
 * Close Chart's Popover.
 * @type void
 * @public
 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.Popover.prototype.close = function() { return null; };

/**
 * Connect chart Popover with VizFrame. Chart Popover is only supported for VizFrame with 'fiori' type. 
 * It must be called by application. 
 * 
 * Example:
 * <pre>
 * var vizFrame = new sap.viz.ui5.controls.VizFrame({
 * 	'vizType' : 'bar',
 *  'uiConfig' : {
 *     'applicationSet': 'fiori'
 *   }
 * });
 * var vizPopover = new sap.viz.ui5.controls.Popover({});
 * vizPopover.connect(vizFrame.getVizUid());
 * </pre>
 * 
 * @param 
 * 	 {string} uid
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.connect = function(uid) {  };

/**
 * Creates a new subclass of class sap.viz.ui5.controls.Popover with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.Popover.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getActionItems actionItems}.
 * 
 * The items of this list or rows of Action List in Home Page inside the Popover.
 * 
 * @returns {object[]} Value of property <code>actionItems</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.getActionItems = function() { return new Array(); };

/**
 * Gets current value of property {@link #getCustomDataControl customDataControl}.
 * 
 * A callback function let user customize Popover's content panel.
 * 
 * @returns {any} Value of property <code>customDataControl</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.getCustomDataControl = function() { return null; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * The pattern is used to format the measures displayed in Popover. 
 * If value type of format string is String, the format string will be used to format all measures. 
 * If value type is Object, each format string in the Object will be used to format the specified measure or time dimension.
 * 
 * @returns {any} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.getFormatString = function() { return null; };

/**
 * Returns a metadata object for class sap.viz.ui5.controls.Popover.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.Popover.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getShowLine showLine}.
 * 
 * Show line with popover marker in line/combination charts.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>showLine</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.getShowLine = function() { return false; };

/**
 * Sets a new value for property {@link #getActionItems actionItems}.
 * 
 * The items of this list or rows of Action List in Home Page inside the Popover.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sActionItems New value for property <code>actionItems</code>
 * @returns {sap.viz.ui5.controls.Popover} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.setActionItems = function(sActionItems) { return new sap.viz.ui5.controls.Popover(); };

/**
 * Sets a new value for property {@link #getCustomDataControl customDataControl}.
 * 
 * A callback function let user customize Popover's content panel.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oCustomDataControl New value for property <code>customDataControl</code>
 * @returns {sap.viz.ui5.controls.Popover} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.setCustomDataControl = function(oCustomDataControl) { return new sap.viz.ui5.controls.Popover(); };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * The pattern is used to format the measures displayed in Popover. 
 * If value type of format string is String, the format string will be used to format all measures. 
 * If value type is Object, each format string in the Object will be used to format the specified measure or time dimension.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.controls.Popover} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.setFormatString = function(oFormatString) { return new sap.viz.ui5.controls.Popover(); };

/**
 * Sets a new value for property {@link #getShowLine showLine}.
 * 
 * Show line with popover marker in line/combination charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bShowLine New value for property <code>showLine</code>
 * @returns {sap.viz.ui5.controls.Popover} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.Popover.prototype.setShowLine = function(bShowLine) { return new sap.viz.ui5.controls.Popover(); };


// ---- sap.viz.ui5.controls.VizFrame --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/controls/VizFrame. For more information on the available info chart types, see the following <a href="../../vizdocs/index.html" target="_blank">documentation</a>.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVizType vizType} : string (default: column)</li>
 * <li>{@link #getVizProperties vizProperties} : object</li>
 * <li>{@link #getVizScales vizScales} : object</li>
 * <li>{@link #getVizCustomizations vizCustomizations} : object</li>
 * <li>{@link #getLegendVisible legendVisible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getDataset dataset} : sap.viz.ui5.data.Dataset</li>
 * <li>{@link #getFeeds feeds} : sap.viz.ui5.controls.common.feeds.FeedItem[]</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:renderComplete renderComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * VizFrame is a viz control that manages a visualization’s initialization, layout, feeding, customization and interactions.
 * @extends sap.viz.ui5.controls.common.BaseControl
 * 
 * @constructor
 * @public
 * @since 1.22.0
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.VizFrame = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.deselectData = function(oControlEvent) {  };

/**
 * Event fires when the rendering ends.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.renderComplete = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.selectData = function(oControlEvent) {  };

/**
 * Adds some feed to the aggregation {@link #getFeeds feeds}.
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem}
 *            oFeed the feed to add; if empty, nothing is inserted
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.addFeed = function(oFeed) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.controls.VizFrame</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.controls.VizFrame</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.controls.VizFrame</code> itself
 * 
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:renderComplete renderComplete} event of this <code>sap.viz.ui5.controls.VizFrame</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.controls.VizFrame</code> itself.
 * 
 * Event fires when the rendering ends.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.controls.VizFrame</code> itself
 * 
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.attachRenderComplete = function(oData,fnFunction,oListener) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.controls.VizFrame</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.controls.VizFrame</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.controls.VizFrame</code> itself
 * 
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Destroys the dataset in the aggregation {@link #getDataset dataset}.
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.destroyDataset = function() { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Destroys all the feeds in the aggregation {@link #getFeeds feeds}.
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.destroyFeeds = function() { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.controls.VizFrame</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:renderComplete renderComplete} event of this <code>sap.viz.ui5.controls.VizFrame</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.detachRenderComplete = function(fnFunction,oListener) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.controls.VizFrame</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Export the current viz as SVG String.
 * The viz is ready to be exported to svg ONLY after the initialization is finished.
 * Any attempt to export to svg before that will result in an empty svg string.
 * @public
 * @param {Object} [option]
 * <pre>
 * {
 *     width: Number - the exported svg will be scaled to the specific width.
 *     height: Number - the exported svg will be scaled to the specific height.
 *     hideTitleLegend: Boolean - flag to indicate if the exported svg includes the original title and legend.
 *     hideAxis: Boolean - flag to indicate if the exported svg includes the original axis.
 * }
 * </pre>
 * @return {string} the SVG string of the current viz or empty svg if error occurs.
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.exportToSVGString = function(option) { return ""; };

/**
 * Creates a new subclass of class sap.viz.ui5.controls.VizFrame with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.VizFrame.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Fires event {@link #event:renderComplete renderComplete} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.fireRenderComplete = function(mParameters) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Gets content of aggregation {@link #getDataset dataset}.
 * 
 * Dataset for chart.
 * 
 * @returns {sap.viz.ui5.data.Dataset}
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getDataset = function() { return new sap.viz.ui5.data.Dataset(); };

/**
 * Gets content of aggregation {@link #getFeeds feeds}.
 * 
 * All feeds for chart.
 * 
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem[]}
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getFeeds = function() { return new Array(); };

/**
 * Return current legend group visibility.
 * @type boolean
 * @public
 * @since 1.28
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getLegendVisible = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.controls.VizFrame.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.VizFrame.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Get ResponsiveLegend Control. (For fiori application set only. It has been deprecated since 1.28.)
 * @type void
 * @public
 * @deprecated Since version 1.28.
 * This API has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getResponsiveLegend = function() { return null; };

/**
 * Gets current value of property {@link #getVizCustomizations vizCustomizations}.
 * 
 * Chart customizations property, aim to customize existing (build-in) charts
 * to meet specific LoB requirements.
 * Currently, supported chart type : column, dual_column, bar, dual_bar, stacked_column, stacked_bar, 100_stacked_bar, 100_stacked_column, 100_dual_stacked_bar, 100_dual_stacked_column, dual_stacked_bar, dual_stacked_column, line, horizontal_line, dual_line, dual_horizontal_line, combination, horizontal_combination, stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, scatter, bubble.
 * 
 * @returns {object} Value of property <code>vizCustomizations</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getVizCustomizations = function() { return new Object(); };

/**
 * Gets current value of property {@link #getVizProperties vizProperties}.
 * 
 * Chart properties, refer to chart property doc for more details.
 * 
 * @returns {object} Value of property <code>vizProperties</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getVizProperties = function() { return new Object(); };

/**
 * Gets current value of property {@link #getVizScales vizScales}.
 * 
 * Chart scales, refer to chart property doc for more details.
 * 
 * @returns {object} Value of property <code>vizScales</code>
 * @since 1.25
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getVizScales = function() { return new Object(); };

/**
 * Gets current value of property {@link #getVizType vizType}.
 * 
 * Type for viz frame. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar' will create a info bar chart.
 * Supported chart type: column, dual_column, bar, dual_bar, stacked_bar, stacked_column, line, dual_line, combination, bullet, time_bullet, bubble, time_bubble, pie, donut,
 * timeseries_column, timeseries_line, timeseries_scatter, timeseries_bubble, timeseries_stacked_column, timeseries_100_stacked_column, timeseries_bullet, timeseries_waterfall,
 * scatter, vertical_bullet, dual_stacked_bar, 100_stacked_bar, 100_dual_stacked_bar, dual_stacked_column, 100_stacked_column,
 * 100_dual_stacked_column, stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, heatmap,
 * waterfall, horizontal_waterfall
 * 
 * Default value is <code>column</code>.
 * @returns {string} Value of property <code>vizType</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getVizType = function() { return ""; };

/**
 * Uid for viz frame. It supports other controls to connect to a viz instance.
 * @type string
 * @public
 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.getVizUid = function() { return ""; };

/**
 * Checks for the provided <code>sap.viz.ui5.controls.common.feeds.FeedItem</code> in the aggregation {@link #getFeeds feeds}.
 * and returns its index if found or -1 otherwise.
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem}
 *           oFeed The feed whose index is looked for
 * @returns {int} The index of the provided control in the aggregation if found, or -1 otherwise
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.indexOfFeed = function(oFeed) { return 0; };

/**
 * Inserts a feed into the aggregation {@link #getFeeds feeds}.
 * 
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem}
 *            oFeed the feed to insert; if empty, nothing is inserted
 * @param {int}
 *              iIndex the <code>0</code>-based index the feed should be inserted at; for
 *              a negative value of <code>iIndex</code>, the feed is inserted at position 0; for a value
 *              greater than the current size of the aggregation, the feed is inserted at
 *              the last position
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.insertFeed = function(oFeed,iIndex) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Removes all the controls from the aggregation {@link #getFeeds feeds}.
 * 
 * Additionally, it unregisters them from the hosting UIArea.
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem[]} An array of the removed elements (might be empty)
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.removeAllFeeds = function() { return new Array(); };

/**
 * Removes a feed from the aggregation {@link #getFeeds feeds}.
 * 
 * @param {int | string | sap.viz.ui5.controls.common.feeds.FeedItem} vFeed The feed to remove or its index or id
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem} The removed feed or <code>null</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.removeFeed = function(vFeed) { return new sap.viz.ui5.controls.common.feeds.FeedItem(); };

/**
 * Sets the aggregated {@link #getDataset dataset}.
 * @param {sap.viz.ui5.data.Dataset} oDataset The dataset to set
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setDataset = function(oDataset) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Will respect the setting for all available legends.
 * @param {boolean} bLegendVisible
 *         Set legend visibility.
 * @type object
 * @public
 * @since 1.28
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setLegendVisible = function(bLegendVisible) { return new Object(); };

/**
 * Setter for property uiConfig. uiConfig could only set via settings parameter
 * of constructor.
 * 
 * uiConfig from base type could config the instance. Supported uiConfig
 * keyword: applicationSet, showErrorMessage
 * 
 * Example:
 * 
 * <pre>
 * var vizFrame = new sap.viz.ui5.controls.VizFrame({
 *  'vizType' : 'bar',
 *  'uiConfig' : {
 *      'applicationSet' : 'fiori',
 *      'showErrorMessage' : true
 *  }
 * });
 * </pre>
 * 
 * @returns {sap.viz.ui5.controls.VizFrame}
 * @public
 * @param {object} oUiConfig
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setUiConfig = function(oUiConfig) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Sets a new value for property {@link #getVizCustomizations vizCustomizations}.
 * 
 * Chart customizations property, aim to customize existing (build-in) charts
 * to meet specific LoB requirements.
 * Currently, supported chart type : column, dual_column, bar, dual_bar, stacked_column, stacked_bar, 100_stacked_bar, 100_stacked_column, 100_dual_stacked_bar, 100_dual_stacked_column, dual_stacked_bar, dual_stacked_column, line, horizontal_line, dual_line, dual_horizontal_line, combination, horizontal_combination, stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, scatter, bubble.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object} oVizCustomizations New value for property <code>vizCustomizations</code>
 * @returns {sap.viz.ui5.controls.VizFrame} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setVizCustomizations = function(oVizCustomizations) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Properties for viz frame.
 * 
 * Example:
 * 
 * <pre>
 *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
 *  var properties = {
 *      'legend' : { 'visible'; : true }
 * };
 * vizFrame.setVizProperties(properties);
 * </pre>
 * 
 * @param {object}
 *            oVizProperties
 * @returns {sap.viz.ui5.controls.VizFrame}
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setVizProperties = function(oVizProperties) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Scales for viz frame.
 * 
 * Example:
 * 
 * <pre>
 *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
 *  var scales = [{
 *      'feed': 'color',
 *      'palette': ['#ff0000']
 * }];
 * vizFrame.setVizScales(scales);
 * </pre>
 * 
 * @param {object}
 *            oVizScales
 * @returns {sap.viz.ui5.controls.VizFrame}
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setVizScales = function(oVizScales) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Setter for property vizType. vizType could only set via settings parameter in Constructor.
 * Do not set vizType at runtime.
 * 
 * vizType is a string of supported chart type or extension chart type.
 * 
 * Supported chart types: bubble, combination, column, bar, line, stacked_bar, stacked_column, bullet, vertical_bullet, timebubble.
 * User can pass 'chartType' or 'info/chartType' for these supported chart types.
 * 
 * Example:
 * <pre>
 * var vizFrame = new sap.viz.ui5.controls.VizFrame({
 *  'vizType' : 'bar'
 * });
 * </pre>
 * 
 * For extension chart type, user should load extension js file manually at first.
 * 
 * Example:
 * <pre>
 * var vizFrame = new sap.viz.ui5.controls.VizFrame({
 *  'vizType' : 'myextension'
 * });
 * </pre>
 * 
 * @param {string}
 *            sVizType
 * @returns {sap.viz.ui5.controls.VizFrame}
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.setVizType = function(sVizType) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Selections for viz frame. Example:
 * 
 * <pre>
 *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
 *  //vizSelection for set
 *  var points = [{
 *      data : {
 *          "Country" : "China",
 *          "Year" : "2001",
 *          "Product" : "Car",
 *          "Profit" : 25
 *      }}, {
 *      data : {
 *          "Country" : "China",
 *          "Year" : "2001",
 *          "Product" : "Trunk",
 *          "Profit" : 34
 *      }}];
 *  var action = {
 *      clearSelection : true
 *  };
 * vizFrame.vizSelection(points, action);
 * //vizSelection for get and return result
 * var result = vizFrame.vizSelection();
 * result = [{
 *          data : {
 *              "Country" : "China",
 *              "Year" : "2001",
 *              "Product" : "Car",
 *              "Profit" : 25
 *          },
 *          unit : {
 *              "Profit" : "$"
 *          }, 
 *          dataName : {
 *              "Profit" : "Actual"
 *          }
 *       }, {
 *          data : {
 *              "Country" : "China",
 *              "Year" : "2001",
 *              "Product" : "Trunk",
 *              "Profit" : 34
 *          },
 *          unit : {
 *              "Profit" : "$"
 *          }, 
 *          dataName : {
 *              "Profit" : "Actual"
 *          }
 *      }]
 * </pre>
 * 
 * @param {object[]}
 *            aPoints some data points of the chart
 * @param {object}
 *            oAction whether to clear previous selection, by default the
 *            selection will be incremental selection
 * @returns {sap.viz.ui5.controls.VizFrame}
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.vizSelection = function(aPoints,oAction) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Update viz frame according to a JSON object, it can update css, properties,
 * feeds and data model. 
 * 
 * VizFrame instance has to be placed at its corresponding parent at first to make this API work. 
 * 
 * Example:
 * 
 * <pre>
 * var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
 * var data = new  sap.viz.ui5.data.FlattenedDataset(...);
 * var properties = {
 *     'legend' : {'visible' : true},
 * };
 * var scales = [{
 *      'feed': 'color',
 *      'palette': ['#ff0000']
 * }];
 * var customizations = {id:"sap.viz.custom",customOverlayProperties: {}};
 * var FeedItem = sap.viz.ui5.controls.common.feeds.FeedItem;
 * var feeds = [
 *     new FeedItem({'uid' : 'primaryValues',
 *                   'type' : 'Measure',
 *                   'values' []}),
 *     new FeedItem({'uid' : 'regionColor',
 *                   'type' : 'Dimension',
 *                   'values' []})];
 * vizFrame.vizUpdate({
 *               'data' : data,
 *               'properties' : properties,
 *               'scales' : scales,
 *               'customizations' : customizations,
 *               'feeds' : feeds
 *           });
 * </pre>
 * 
 * @param {object}
 *            oOptions a JSON object contains combination of properties, feeds
 *            and data model.
 * @returns {sap.viz.ui5.controls.VizFrame}
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.vizUpdate = function(oOptions) { return new sap.viz.ui5.controls.VizFrame(); };

/**
 * Zoom the chart plot.
 * 
 * Example:
 * <pre>
 *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
 *  vizFrame.zoom({direction: "in"});
 * </pre>
 * 
 * @param {object}
 *            contains a "direction" attribute with value "in" or "out" indicating zoom to enlarge or shrink respectively
 * @public
 * 
 */
sap.viz.ui5.controls.VizFrame.prototype.zoom = function(contains) {  };


// ---- sap.viz.ui5.controls.VizTooltip --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/controls/VizTooltip.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getFormatString formatString} : any</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Viz Chart Tooltip
 * @extends sap.viz.ui5.controls.common.BaseControl
 * 
 * @constructor
 * @public
 * @since 1.44.0
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.controls.VizTooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.controls.VizTooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.VizTooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * The pattern is used to format the measures/timeDimensions displayed in Tooltip. 
 * If value type of format string is String or an object with 'formatPattern' and 'dataUnit' values defined, the value will be used to format all measures. The value of ‘formatPattern’ here is a string to define the format pattern of numbers, and value of ‘dataUnit’ is a postfix string to indicate the unit of measure.
 * If value type is Object whose key is measure/timeDimension name, the possible value type is string or an object with ‘formatPattern’ and ‘dataUnit’ values defined. And each string value will be used to format the specified measure or time dimension.
 * And TimeDimension does not support 'dataUnit'.
 * 
 * @returns {any} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizTooltip.prototype.getFormatString = function() { return null; };

/**
 * Returns a metadata object for class sap.viz.ui5.controls.VizTooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.controls.VizTooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * The pattern is used to format the measures/timeDimensions displayed in Tooltip. 
 * If value type of format string is String or an object with 'formatPattern' and 'dataUnit' values defined, the value will be used to format all measures. The value of ‘formatPattern’ here is a string to define the format pattern of numbers, and value of ‘dataUnit’ is a postfix string to indicate the unit of measure.
 * If value type is Object whose key is measure/timeDimension name, the possible value type is string or an object with ‘formatPattern’ and ‘dataUnit’ values defined. And each string value will be used to format the specified measure or time dimension.
 * And TimeDimension does not support 'dataUnit'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.controls.VizTooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.controls.VizTooltip.prototype.setFormatString = function(oFormatString) { return new sap.viz.ui5.controls.VizTooltip(); };


// ---- sap.viz.ui5.core.BaseChart --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/core/BaseChart.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 640px)</li>
 * <li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 480px)</li>
 * <li>{@link #getCss css} : string</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getDataset dataset} : sap.viz.ui5.data.Dataset</li>
 * <li>{@link #getNoData noData} : sap.ui.core.Control</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:beforeCreateViz beforeCreateViz} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * An abstract base class for all VIZ charts
 * @extends sap.ui.core.Control
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2.
 * Charting API is not finished yet and might change completely
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.core.BaseChart = function(sId,mSettings) {};
/**
 * Fired before a new VIZ instance is created. Event parameter "usrOptions" contains the intended value for the parameter with the same name of the createViz call.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @param {object} oControlEvent.getParameters.usrOptions Value for the parameter with the same name of the createViz call.
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.beforeCreateViz = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:beforeCreateViz beforeCreateViz} event of this <code>sap.viz.ui5.core.BaseChart</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.core.BaseChart</code> itself.
 * 
 * Fired before a new VIZ instance is created. Event parameter "usrOptions" contains the intended value for the parameter with the same name of the createViz call.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.core.BaseChart</code> itself
 * 
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.attachBeforeCreateViz = function(oData,fnFunction,oListener) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Destroys the dataset in the aggregation {@link #getDataset dataset}.
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.destroyDataset = function() { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Destroys the noData in the aggregation {@link #getNoData noData}.
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.destroyNoData = function() { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:beforeCreateViz beforeCreateViz} event of this <code>sap.viz.ui5.core.BaseChart</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.detachBeforeCreateViz = function(fnFunction,oListener) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Creates a new subclass of class sap.viz.ui5.core.BaseChart with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.core.BaseChart.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:beforeCreateViz beforeCreateViz} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @param {object} [mParameters.usrOptions] Value for the parameter with the same name of the createViz call.
 * 
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.fireBeforeCreateViz = function(mParameters) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Gets current value of property {@link #getCss css}.
 * 
 * CSS style of Chart.
 * 
 * @returns {string} Value of property <code>css</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.getCss = function() { return ""; };

/**
 * Gets content of aggregation {@link #getDataset dataset}.
 * 
 * Dataset for this chart
 * 
 * @returns {sap.viz.ui5.data.Dataset}
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.getDataset = function() { return new sap.viz.ui5.data.Dataset(); };

/**
 * Gets current value of property {@link #getHeight height}.
 * 
 * Height of the Chart as a CSS size.
 * 
 * Default value is <code>480px</code>.
 * @returns {sap.ui.core.CSSSize} Value of property <code>height</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.getHeight = function() { return new sap.ui.core.CSSSize(); };

/**
 * Returns a metadata object for class sap.viz.ui5.core.BaseChart.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.core.BaseChart.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getNoData noData}.
 * 
 * Control tree to display when there is no data available
 * 
 * @returns {sap.ui.core.Control}
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.getNoData = function() { return new sap.ui.core.Control(); };

/**
 * Gets current value of property {@link #getWidth width}.
 * 
 * Width of the Chart as a CSS size.
 * 
 * Default value is <code>640px</code>.
 * @returns {sap.ui.core.CSSSize} Value of property <code>width</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.getWidth = function() { return new sap.ui.core.CSSSize(); };

/**
 * Sets a new value for property {@link #getCss css}.
 * 
 * CSS style of Chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sCss New value for property <code>css</code>
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.setCss = function(sCss) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Sets the aggregated {@link #getDataset dataset}.
 * @param {sap.viz.ui5.data.Dataset} oDataset The dataset to set
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.setDataset = function(oDataset) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Sets a new value for property {@link #getHeight height}.
 * 
 * Height of the Chart as a CSS size.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>480px</code>.
 * @param {sap.ui.core.CSSSize} sHeight New value for property <code>height</code>
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.setHeight = function(sHeight) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Sets the aggregated {@link #getNoData noData}.
 * @param {sap.ui.core.Control} oNoData The noData to set
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.setNoData = function(oNoData) { return new sap.viz.ui5.core.BaseChart(); };

/**
 * Sets a new value for property {@link #getWidth width}.
 * 
 * Width of the Chart as a CSS size.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>640px</code>.
 * @param {sap.ui.core.CSSSize} sWidth New value for property <code>width</code>
 * @returns {sap.viz.ui5.core.BaseChart} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.core.BaseChart.prototype.setWidth = function(sWidth) { return new sap.viz.ui5.core.BaseChart(); };


// ---- sap.viz.ui5.core.BaseStructuredType --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/core/BaseStructuredType.
 * 
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Abstract base class for all elements that represent VIZ modules or complex property types
 * @extends sap.ui.core.Element
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2.
 * Charting API is not finished yet and might change completely
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.core.BaseStructuredType = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.core.BaseStructuredType with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.core.BaseStructuredType.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.core.BaseStructuredType.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.core.BaseStructuredType.getMetadata = function() { return new sap.ui.base.Metadata(); };


// ---- sap.viz.ui5.data.CustomDataset --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/data/CustomDataset.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getData data} : object</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.data.Dataset#constructor sap.viz.ui5.data.Dataset}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * A dataset for raw data format.
 * @extends sap.viz.ui5.data.Dataset
 * 
 * @constructor
 * @public
 * @since 1.31
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.data.CustomDataset = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.data.CustomDataset with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.data.Dataset.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.CustomDataset.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getData data}.
 * 
 * Data containing dimensions and measures. The format and structure of this data is depends on the chart.
 * 
 * @returns {object} Value of property <code>data</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.CustomDataset.prototype.getData = function() { return new Object(); };

/**
 * Returns a metadata object for class sap.viz.ui5.data.CustomDataset.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.CustomDataset.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getData data}.
 * 
 * Data containing dimensions and measures. The format and structure of this data is depends on the chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object} oData New value for property <code>data</code>
 * @returns {sap.viz.ui5.data.CustomDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.CustomDataset.prototype.setData = function(oData) { return new sap.viz.ui5.data.CustomDataset(); };


// ---- sap.viz.ui5.data.Dataset --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/data/Dataset.
 * 
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Abstract Dataset implementation
 * @extends sap.ui.core.Element
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.data.Dataset = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.data.Dataset with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.Dataset.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.data.Dataset.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.Dataset.getMetadata = function() { return new sap.ui.base.Metadata(); };


// ---- sap.viz.ui5.data.DimensionDefinition --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/data/DimensionDefinition.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getAxis axis} : int</li>
 * <li>{@link #getValue value} : any</li>
 * <li>{@link #getName name} : string</li>
 * <li>{@link #getIdentity identity} : string</li>
 * <li>{@link #getDisplayValue displayValue} : any</li>
 * <li>{@link #getDataType dataType} : string</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Definition of a single dimension in a dataset
 * @extends sap.ui.core.Element
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.data.DimensionDefinition = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.data.DimensionDefinition with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.DimensionDefinition.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getAxis axis}.
 * 
 * Number of axis this dimension belongs to. Currently must be 1 or 2.
 * Skip this property when use VizFrame.
 * 
 * @returns {int} Value of property <code>axis</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.getAxis = function() { return 0; };

/**
 * Gets current value of property {@link #getDataType dataType}.
 * 
 * Data type of the dimension as displayed in the chart. Enumeration: string, number, date. Currently only in time series chart, it is required to set data type to 'date' if this column is going to be fed on 'timeAxis'.
 * 
 * @returns {string} Value of property <code>dataType</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.getDataType = function() { return ""; };

/**
 * Gets current value of property {@link #getDisplayValue displayValue}.
 * 
 * Display value for the dimension. Usually bound to some model field.
 * 
 * @returns {any} Value of property <code>displayValue</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.getDisplayValue = function() { return null; };

/**
 * Gets current value of property {@link #getIdentity identity}.
 * 
 * Id of the dimension as displayed in the chart
 * 
 * @returns {string} Value of property <code>identity</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.getIdentity = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.data.DimensionDefinition.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.DimensionDefinition.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getName name}.
 * 
 * Name of the dimension as displayed in the chart
 * 
 * @returns {string} Value of property <code>name</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.getName = function() { return ""; };

/**
 * Gets current value of property {@link #getValue value}.
 * 
 * Value for the dimension. Usually bound to some model field.
 * 
 * @returns {any} Value of property <code>value</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.getValue = function() { return null; };

/**
 * Sets a new value for property {@link #getAxis axis}.
 * 
 * Number of axis this dimension belongs to. Currently must be 1 or 2.
 * Skip this property when use VizFrame.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iAxis New value for property <code>axis</code>
 * @returns {sap.viz.ui5.data.DimensionDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.setAxis = function(iAxis) { return new sap.viz.ui5.data.DimensionDefinition(); };

/**
 * Sets a new value for property {@link #getDataType dataType}.
 * 
 * Data type of the dimension as displayed in the chart. Enumeration: string, number, date. Currently only in time series chart, it is required to set data type to 'date' if this column is going to be fed on 'timeAxis'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sDataType New value for property <code>dataType</code>
 * @returns {sap.viz.ui5.data.DimensionDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.setDataType = function(sDataType) { return new sap.viz.ui5.data.DimensionDefinition(); };

/**
 * Sets a new value for property {@link #getDisplayValue displayValue}.
 * 
 * Display value for the dimension. Usually bound to some model field.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oDisplayValue New value for property <code>displayValue</code>
 * @returns {sap.viz.ui5.data.DimensionDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.setDisplayValue = function(oDisplayValue) { return new sap.viz.ui5.data.DimensionDefinition(); };

/**
 * Sets a new value for property {@link #getIdentity identity}.
 * 
 * Id of the dimension as displayed in the chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sIdentity New value for property <code>identity</code>
 * @returns {sap.viz.ui5.data.DimensionDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.setIdentity = function(sIdentity) { return new sap.viz.ui5.data.DimensionDefinition(); };

/**
 * Sets a new value for property {@link #getName name}.
 * 
 * Name of the dimension as displayed in the chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sName New value for property <code>name</code>
 * @returns {sap.viz.ui5.data.DimensionDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.setName = function(sName) { return new sap.viz.ui5.data.DimensionDefinition(); };

/**
 * Sets a new value for property {@link #getValue value}.
 * 
 * Value for the dimension. Usually bound to some model field.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oValue New value for property <code>value</code>
 * @returns {sap.viz.ui5.data.DimensionDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.DimensionDefinition.prototype.setValue = function(oValue) { return new sap.viz.ui5.data.DimensionDefinition(); };


// ---- sap.viz.ui5.data.FlattenedDataset --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/data/FlattenedDataset.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getContext context} : any</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getDimensions dimensions} : sap.viz.ui5.data.DimensionDefinition[]</li>
 * <li>{@link #getMeasures measures} : sap.viz.ui5.data.MeasureDefinition[]</li>
 * <li>{@link #getData data} : sap.ui.core.Element[]</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:dataChange dataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:dataRefresh dataRefresh} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:dataError dataError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.data.Dataset#constructor sap.viz.ui5.data.Dataset}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * A dataset for flattened (redundant) data using a tabular format.
 * @extends sap.viz.ui5.data.Dataset
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.data.FlattenedDataset = function(sId,mSettings) {};
/**
 * data change event
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.dataChange = function(oControlEvent) {  };

/**
 * data error event
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.dataError = function(oControlEvent) {  };

/**
 * data refresh event
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.dataRefresh = function(oControlEvent) {  };

/**
 * Adds some data to the aggregation {@link #getData data}.
 * @param {sap.ui.core.Element}
 *            oData the data to add; if empty, nothing is inserted
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.addData = function(oData) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Adds some dimension to the aggregation {@link #getDimensions dimensions}.
 * @param {sap.viz.ui5.data.DimensionDefinition}
 *            oDimension the dimension to add; if empty, nothing is inserted
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.addDimension = function(oDimension) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Adds some measure to the aggregation {@link #getMeasures measures}.
 * @param {sap.viz.ui5.data.MeasureDefinition}
 *            oMeasure the measure to add; if empty, nothing is inserted
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.addMeasure = function(oMeasure) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:dataChange dataChange} event of this <code>sap.viz.ui5.data.FlattenedDataset</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.data.FlattenedDataset</code> itself.
 * 
 * data change event
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.data.FlattenedDataset</code> itself
 * 
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.attachDataChange = function(oData,fnFunction,oListener) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:dataError dataError} event of this <code>sap.viz.ui5.data.FlattenedDataset</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.data.FlattenedDataset</code> itself.
 * 
 * data error event
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.data.FlattenedDataset</code> itself
 * 
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.attachDataError = function(oData,fnFunction,oListener) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:dataRefresh dataRefresh} event of this <code>sap.viz.ui5.data.FlattenedDataset</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.data.FlattenedDataset</code> itself.
 * 
 * data refresh event
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.data.FlattenedDataset</code> itself
 * 
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.attachDataRefresh = function(oData,fnFunction,oListener) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Binds aggregation {@link #getData data} to model data.
 * 
 * See {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a 
 * detailed description of the possible properties of <code>oBindingInfo</code>.
 * @param {object} oBindingInfo The binding information
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.bindData = function(oBindingInfo) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Destroys all the data in the aggregation {@link #getData data}.
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.destroyData = function() { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Destroys all the dimensions in the aggregation {@link #getDimensions dimensions}.
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.destroyDimensions = function() { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Destroys all the measures in the aggregation {@link #getMeasures measures}.
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.destroyMeasures = function() { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:dataChange dataChange} event of this <code>sap.viz.ui5.data.FlattenedDataset</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.detachDataChange = function(fnFunction,oListener) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:dataError dataError} event of this <code>sap.viz.ui5.data.FlattenedDataset</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.detachDataError = function(fnFunction,oListener) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:dataRefresh dataRefresh} event of this <code>sap.viz.ui5.data.FlattenedDataset</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.detachDataRefresh = function(fnFunction,oListener) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Creates a new subclass of class sap.viz.ui5.data.FlattenedDataset with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.data.Dataset.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.FlattenedDataset.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:dataChange dataChange} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.fireDataChange = function(mParameters) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Fires event {@link #event:dataError dataError} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.fireDataError = function(mParameters) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Fires event {@link #event:dataRefresh dataRefresh} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.fireDataRefresh = function(mParameters) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Gets current value of property {@link #getContext context}.
 * 
 * Additional data which works with data context in this dataset. The input could be an array. Each item represents a dimension that is added as the additional information based on data context. The input could be a string of dimension id,
 * or object like this {id: "name", showInTooltip: true}. If showInTooltip is false, the dimensions set in this API will not show in 
 * popover or tooltip. However other dimensions in data context will show. In selection event, all dimension information (including the dimension set in this API) will be included.
 * Context will be shown by default in tooltip if only set context with string or string of array.
 * 
 * @returns {any} Value of property <code>context</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.getContext = function() { return null; };

/**
 * Gets content of aggregation {@link #getData data}.
 * 
 * Data containing dimensions and measures.
 * 
 * <b>Note:</b> This aggregation can only be bound against a model, it cannot be managed
 * programmatically using the aggregation mutator methods like addData.
 * 
 * @returns {sap.ui.core.Element[]}
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.getData = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getDimensions dimensions}.
 * 
 * List of definitions of all dimensions in this dataset
 * 
 * @returns {sap.viz.ui5.data.DimensionDefinition[]}
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.getDimensions = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getMeasures measures}.
 * 
 * list of definitions of all measures in this dataset
 * 
 * @returns {sap.viz.ui5.data.MeasureDefinition[]}
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.getMeasures = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.data.FlattenedDataset.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.FlattenedDataset.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Checks for the provided <code>sap.ui.core.Element</code> in the aggregation {@link #getData data}.
 * and returns its index if found or -1 otherwise.
 * @param {sap.ui.core.Element}
 *           oData The data whose index is looked for
 * @returns {int} The index of the provided control in the aggregation if found, or -1 otherwise
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.indexOfData = function(oData) { return 0; };

/**
 * Checks for the provided <code>sap.viz.ui5.data.DimensionDefinition</code> in the aggregation {@link #getDimensions dimensions}.
 * and returns its index if found or -1 otherwise.
 * @param {sap.viz.ui5.data.DimensionDefinition}
 *           oDimension The dimension whose index is looked for
 * @returns {int} The index of the provided control in the aggregation if found, or -1 otherwise
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.indexOfDimension = function(oDimension) { return 0; };

/**
 * Checks for the provided <code>sap.viz.ui5.data.MeasureDefinition</code> in the aggregation {@link #getMeasures measures}.
 * and returns its index if found or -1 otherwise.
 * @param {sap.viz.ui5.data.MeasureDefinition}
 *           oMeasure The measure whose index is looked for
 * @returns {int} The index of the provided control in the aggregation if found, or -1 otherwise
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.indexOfMeasure = function(oMeasure) { return 0; };

/**
 * Inserts a data into the aggregation {@link #getData data}.
 * 
 * @param {sap.ui.core.Element}
 *            oData the data to insert; if empty, nothing is inserted
 * @param {int}
 *              iIndex the <code>0</code>-based index the data should be inserted at; for
 *              a negative value of <code>iIndex</code>, the data is inserted at position 0; for a value
 *              greater than the current size of the aggregation, the data is inserted at
 *              the last position
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.insertData = function(oData,iIndex) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Inserts a dimension into the aggregation {@link #getDimensions dimensions}.
 * 
 * @param {sap.viz.ui5.data.DimensionDefinition}
 *            oDimension the dimension to insert; if empty, nothing is inserted
 * @param {int}
 *              iIndex the <code>0</code>-based index the dimension should be inserted at; for
 *              a negative value of <code>iIndex</code>, the dimension is inserted at position 0; for a value
 *              greater than the current size of the aggregation, the dimension is inserted at
 *              the last position
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.insertDimension = function(oDimension,iIndex) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Inserts a measure into the aggregation {@link #getMeasures measures}.
 * 
 * @param {sap.viz.ui5.data.MeasureDefinition}
 *            oMeasure the measure to insert; if empty, nothing is inserted
 * @param {int}
 *              iIndex the <code>0</code>-based index the measure should be inserted at; for
 *              a negative value of <code>iIndex</code>, the measure is inserted at position 0; for a value
 *              greater than the current size of the aggregation, the measure is inserted at
 *              the last position
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.insertMeasure = function(oMeasure,iIndex) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Removes all the controls from the aggregation {@link #getData data}.
 * 
 * Additionally, it unregisters them from the hosting UIArea.
 * @returns {sap.ui.core.Element[]} An array of the removed elements (might be empty)
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.removeAllData = function() { return new Array(); };

/**
 * Removes all the controls from the aggregation {@link #getDimensions dimensions}.
 * 
 * Additionally, it unregisters them from the hosting UIArea.
 * @returns {sap.viz.ui5.data.DimensionDefinition[]} An array of the removed elements (might be empty)
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.removeAllDimensions = function() { return new Array(); };

/**
 * Removes all the controls from the aggregation {@link #getMeasures measures}.
 * 
 * Additionally, it unregisters them from the hosting UIArea.
 * @returns {sap.viz.ui5.data.MeasureDefinition[]} An array of the removed elements (might be empty)
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.removeAllMeasures = function() { return new Array(); };

/**
 * Removes a data from the aggregation {@link #getData data}.
 * 
 * @param {int | string | sap.ui.core.Element} vData The data to remove or its index or id
 * @returns {sap.ui.core.Element} The removed data or <code>null</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.removeData = function(vData) { return new sap.ui.core.Element(); };

/**
 * Removes a dimension from the aggregation {@link #getDimensions dimensions}.
 * 
 * @param {int | string | sap.viz.ui5.data.DimensionDefinition} vDimension The dimension to remove or its index or id
 * @returns {sap.viz.ui5.data.DimensionDefinition} The removed dimension or <code>null</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.removeDimension = function(vDimension) { return new sap.viz.ui5.data.DimensionDefinition(); };

/**
 * Removes a measure from the aggregation {@link #getMeasures measures}.
 * 
 * @param {int | string | sap.viz.ui5.data.MeasureDefinition} vMeasure The measure to remove or its index or id
 * @returns {sap.viz.ui5.data.MeasureDefinition} The removed measure or <code>null</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.removeMeasure = function(vMeasure) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getContext context}.
 * 
 * Additional data which works with data context in this dataset. The input could be an array. Each item represents a dimension that is added as the additional information based on data context. The input could be a string of dimension id,
 * or object like this {id: "name", showInTooltip: true}. If showInTooltip is false, the dimensions set in this API will not show in 
 * popover or tooltip. However other dimensions in data context will show. In selection event, all dimension information (including the dimension set in this API) will be included.
 * Context will be shown by default in tooltip if only set context with string or string of array.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oContext New value for property <code>context</code>
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.setContext = function(oContext) { return new sap.viz.ui5.data.FlattenedDataset(); };

/**
 * Unbinds aggregation {@link #getData data} from model data.
 * @returns {sap.viz.ui5.data.FlattenedDataset} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.FlattenedDataset.prototype.unbindData = function() { return new sap.viz.ui5.data.FlattenedDataset(); };


// ---- sap.viz.ui5.data.MeasureDefinition --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/data/MeasureDefinition.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getGroup group} : int (default: 1)</li>
 * <li>{@link #getValue value} : any</li>
 * <li>{@link #getName name} : string</li>
 * <li>{@link #getIdentity identity} : string</li>
 * <li>{@link #getFormat format} : any</li>
 * <li>{@link #getRange range} : any[] (default: [])</li>
 * <li>{@link #getUnit unit} : string</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Definition of a single Measure
 * @extends sap.ui.core.Element
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.data.MeasureDefinition = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.data.MeasureDefinition with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.MeasureDefinition.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFormat format}.
 * 
 * Format pattern for values of the measure
 * 
 * @returns {any} Value of property <code>format</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getFormat = function() { return null; };

/**
 * Gets current value of property {@link #getGroup group}.
 * 
 * Measure group this measure belongs to. Order is significant, number should start from 1.
 * Skip this property when use VizFrame.
 * 
 * Default value is <code>1</code>.
 * @returns {int} Value of property <code>group</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getGroup = function() { return 0; };

/**
 * Gets current value of property {@link #getIdentity identity}.
 * 
 * Id of the measure as displayed in the chart
 * 
 * @returns {string} Value of property <code>identity</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getIdentity = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.data.MeasureDefinition.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.data.MeasureDefinition.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getName name}.
 * 
 * Name of the measure as displayed in the chart
 * 
 * @returns {string} Value of property <code>name</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getName = function() { return ""; };

/**
 * Gets current value of property {@link #getRange range}.
 * 
 * Value range
 * 
 * Default value is <code>[]</code>.
 * @returns {any[]} Value of property <code>range</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getRange = function() { return new Array(); };

/**
 * Gets current value of property {@link #getUnit unit}.
 * 
 * Unit of measure
 * 
 * @returns {string} Value of property <code>unit</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getUnit = function() { return ""; };

/**
 * Gets current value of property {@link #getValue value}.
 * 
 * Value for the measure. Usually bound to some model field.
 * 
 * @returns {any} Value of property <code>value</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.getValue = function() { return null; };

/**
 * Sets a new value for property {@link #getFormat format}.
 * 
 * Format pattern for values of the measure
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oFormat New value for property <code>format</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setFormat = function(oFormat) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getGroup group}.
 * 
 * Measure group this measure belongs to. Order is significant, number should start from 1.
 * Skip this property when use VizFrame.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {int} iGroup New value for property <code>group</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setGroup = function(iGroup) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getIdentity identity}.
 * 
 * Id of the measure as displayed in the chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sIdentity New value for property <code>identity</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setIdentity = function(sIdentity) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getName name}.
 * 
 * Name of the measure as displayed in the chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sName New value for property <code>name</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setName = function(sName) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getRange range}.
 * 
 * Value range
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>[]</code>.
 * @param {any[]} sRange New value for property <code>range</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setRange = function(sRange) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getUnit unit}.
 * 
 * Unit of measure
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sUnit New value for property <code>unit</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setUnit = function(sUnit) { return new sap.viz.ui5.data.MeasureDefinition(); };

/**
 * Sets a new value for property {@link #getValue value}.
 * 
 * Value for the measure. Usually bound to some model field.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oValue New value for property <code>value</code>
 * @returns {sap.viz.ui5.data.MeasureDefinition} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.data.MeasureDefinition.prototype.setValue = function(oValue) { return new sap.viz.ui5.data.MeasureDefinition(); };


// ---- sap.viz.ui5.Donut --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Donut
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Pie</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getDataTransform dataTransform} : sap.viz.ui5.types.Datatransform</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Donut
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'donut'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Donut = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Donut</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Donut</code> itself
 * 
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Donut</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Donut</code> itself
 * 
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Donut.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Donut</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Donut</code> itself
 * 
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Donut</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Donut</code> itself
 * 
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Donut</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Donut</code> itself
 * 
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Donut.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the dataTransform in the aggregation {@link #getDataTransform dataTransform}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyDataTransform = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyGeneral = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyInteraction = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyLegend = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyTitle = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyToolTip = function() { return new sap.viz.ui5.Donut(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Donut(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Donut</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Donut(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Donut with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Donut.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Donut.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Donut(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Donut.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Donut(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Donut.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Donut(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Donut.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Donut(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Donut.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Donut(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getDataTransform dataTransform}.
 * 
 * Module sap.viz.modules.datatransform
 * 
 * @returns {sap.viz.ui5.types.Datatransform}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getDataTransform = function() { return new sap.viz.ui5.types.Datatransform(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Donut.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Donut.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.pie
 * 
 * @returns {sap.viz.ui5.types.Pie}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Pie(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getDataTransform dataTransform}.
 * @param {sap.viz.ui5.types.Datatransform} oDataTransform The dataTransform to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setDataTransform = function(oDataTransform) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Pie} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Donut(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Donut} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Donut.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Donut(); };


// ---- sap.viz.ui5.DualBar --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.DualBar
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Bar</li>
 * <li>{@link #getXAxis2 xAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.DualBar
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_bar'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.DualBar = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualBar</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualBar</code> itself
 * 
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualBar</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualBar</code> itself
 * 
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualBar.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualBar</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualBar</code> itself
 * 
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualBar</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualBar</code> itself
 * 
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualBar</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualBar</code> itself
 * 
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualBar.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyBackground = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyDataLabel = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyGeneral = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyInteraction = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyLegend = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyPlotArea = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyTitle = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyToolTip = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyXAxis = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the xAxis2 in the aggregation {@link #getXAxis2 xAxis2}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyXAxis2 = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyXyContainer = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.destroyYAxis = function() { return new sap.viz.ui5.DualBar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualBar</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualBar(); };

/**
 * Creates a new subclass of class sap.viz.ui5.DualBar with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualBar.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualBar.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.DualBar(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualBar.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.DualBar(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualBar.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.DualBar(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualBar.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.DualBar(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualBar.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.DualBar(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.DualBar.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualBar.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.bar
 * 
 * @returns {sap.viz.ui5.types.Bar}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Bar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXAxis2 xAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getXAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Bar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getXAxis2 xAxis2}.
 * @param {sap.viz.ui5.types.Axis} oXAxis2 The xAxis2 to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setXAxis2 = function(oXAxis2) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.DualBar(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.DualBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualBar.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.DualBar(); };


// ---- sap.viz.ui5.DualColumn --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.DualColumn
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.VerticalBar</li>
 * <li>{@link #getYAxis2 yAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.DualColumn
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_column'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.DualColumn = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualColumn</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualColumn</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualColumn.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualColumn</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualColumn</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualColumn</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualColumn.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyBackground = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyDataLabel = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyGeneral = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyInteraction = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyLegend = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyPlotArea = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyTitle = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyToolTip = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyXAxis = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyXyContainer = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyYAxis = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.destroyYAxis2 = function() { return new sap.viz.ui5.DualColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualColumn(); };

/**
 * Creates a new subclass of class sap.viz.ui5.DualColumn with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualColumn.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualColumn.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.DualColumn(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualColumn.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.DualColumn(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualColumn.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.DualColumn(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualColumn.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.DualColumn(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualColumn.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.DualColumn(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.DualColumn.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualColumn.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.verticalbar
 * 
 * @returns {sap.viz.ui5.types.VerticalBar}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getPlotArea = function() { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getYAxis2 yAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.getYAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.VerticalBar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.DualColumn(); };

/**
 * Sets the aggregated {@link #getYAxis2 yAxis2}.
 * @param {sap.viz.ui5.types.Axis} oYAxis2 The yAxis2 to set
 * @returns {sap.viz.ui5.DualColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualColumn.prototype.setYAxis2 = function(oYAxis2) { return new sap.viz.ui5.DualColumn(); };


// ---- sap.viz.ui5.DualCombination --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.DualCombination
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Combination</li>
 * <li>{@link #getYAxis2 yAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.DualCombination
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.DualCombination = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualCombination</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualCombination</code> itself
 * 
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualCombination</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualCombination</code> itself
 * 
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualCombination.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualCombination</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualCombination</code> itself
 * 
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualCombination</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualCombination</code> itself
 * 
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualCombination</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualCombination</code> itself
 * 
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualCombination.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyBackground = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyDataLabel = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyGeneral = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyInteraction = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyLegend = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyPlotArea = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyTitle = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyToolTip = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyXAxis = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyXyContainer = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyYAxis = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.destroyYAxis2 = function() { return new sap.viz.ui5.DualCombination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualCombination</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualCombination(); };

/**
 * Creates a new subclass of class sap.viz.ui5.DualCombination with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualCombination.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualCombination.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.DualCombination(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualCombination.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.DualCombination(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualCombination.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.DualCombination(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualCombination.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.DualCombination(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualCombination.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.DualCombination(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.DualCombination.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualCombination.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.combination
 * 
 * @returns {sap.viz.ui5.types.Combination}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getYAxis2 yAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.getYAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Combination} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.DualCombination(); };

/**
 * Sets the aggregated {@link #getYAxis2 yAxis2}.
 * @param {sap.viz.ui5.types.Axis} oYAxis2 The yAxis2 to set
 * @returns {sap.viz.ui5.DualCombination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualCombination.prototype.setYAxis2 = function(oYAxis2) { return new sap.viz.ui5.DualCombination(); };


// ---- sap.viz.ui5.DualLine --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.DualLine
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Line</li>
 * <li>{@link #getYAxis2 yAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.DualLine
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_line'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.DualLine = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualLine</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualLine</code> itself
 * 
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualLine</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualLine</code> itself
 * 
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualLine.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualLine</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualLine</code> itself
 * 
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualLine</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualLine</code> itself
 * 
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualLine</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualLine</code> itself
 * 
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualLine.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyBackground = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyDataLabel = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyGeneral = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyInteraction = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyLegend = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyPlotArea = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyTitle = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyToolTip = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyXAxis = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyXyContainer = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyYAxis = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.destroyYAxis2 = function() { return new sap.viz.ui5.DualLine(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualLine</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualLine(); };

/**
 * Creates a new subclass of class sap.viz.ui5.DualLine with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualLine.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualLine.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.DualLine(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualLine.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.DualLine(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualLine.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.DualLine(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualLine.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.DualLine(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualLine.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.DualLine(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.DualLine.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualLine.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.line
 * 
 * @returns {sap.viz.ui5.types.Line}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Line(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getYAxis2 yAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.getYAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Line} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.DualLine(); };

/**
 * Sets the aggregated {@link #getYAxis2 yAxis2}.
 * @param {sap.viz.ui5.types.Axis} oYAxis2 The yAxis2 to set
 * @returns {sap.viz.ui5.DualLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualLine.prototype.setYAxis2 = function(oYAxis2) { return new sap.viz.ui5.DualLine(); };


// ---- sap.viz.ui5.DualStackedColumn --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.DualStackedColumn
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.StackedVerticalBar</li>
 * <li>{@link #getYAxis2 yAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.DualStackedColumn
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_stacked_column'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.DualStackedColumn = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyBackground = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyDataLabel = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyGeneral = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyInteraction = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyLegend = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyPlotArea = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyTitle = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyToolTip = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyXAxis = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyXyContainer = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyYAxis = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.destroyYAxis2 = function() { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualStackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Creates a new subclass of class sap.viz.ui5.DualStackedColumn with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualStackedColumn.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.DualStackedColumn.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualStackedColumn.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.stackedverticalbar
 * 
 * @returns {sap.viz.ui5.types.StackedVerticalBar}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getPlotArea = function() { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getYAxis2 yAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.getYAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.StackedVerticalBar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.DualStackedColumn(); };

/**
 * Sets the aggregated {@link #getYAxis2 yAxis2}.
 * @param {sap.viz.ui5.types.Axis} oYAxis2 The yAxis2 to set
 * @returns {sap.viz.ui5.DualStackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn.prototype.setYAxis2 = function(oYAxis2) { return new sap.viz.ui5.DualStackedColumn(); };


// ---- sap.viz.ui5.DualStackedColumn100 --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.DualStackedColumn100
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.StackedVerticalBar</li>
 * <li>{@link #getYAxis2 yAxis2} : sap.viz.ui5.types.Axis</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.DualStackedColumn100
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': '100_dual_stacked_column'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.DualStackedColumn100 = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn100</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn100</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.DualStackedColumn100</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.DualStackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyBackground = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyDataLabel = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyGeneral = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyInteraction = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyLegend = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyPlotArea = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyTitle = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyToolTip = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyXAxis = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyXyContainer = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyYAxis = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.destroyYAxis2 = function() { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.DualStackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Creates a new subclass of class sap.viz.ui5.DualStackedColumn100 with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualStackedColumn100.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.DualStackedColumn100.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.DualStackedColumn100.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.stackedverticalbar
 * 
 * @returns {sap.viz.ui5.types.StackedVerticalBar}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getPlotArea = function() { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getYAxis2 yAxis2}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.getYAxis2 = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.StackedVerticalBar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.DualStackedColumn100(); };

/**
 * Sets the aggregated {@link #getYAxis2 yAxis2}.
 * @param {sap.viz.ui5.types.Axis} oYAxis2 The yAxis2 to set
 * @returns {sap.viz.ui5.DualStackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.DualStackedColumn100.prototype.setYAxis2 = function(oYAxis2) { return new sap.viz.ui5.DualStackedColumn100(); };


// ---- sap.viz.ui5.format.ChartFormatter --------------------------------------------------------------------------

/**
 * Format the value according to the custom format function
 * @public
 * 
 * @memberof sap.viz.ui5.format.ChartFormatter
 */
sap.viz.ui5.format.ChartFormatter.prototype.format = function() {  };

/**
 * Get an instance of ChartFormatter
 * @public
 * 
 * @memberof sap.viz.ui5.format.ChartFormatter
 */
sap.viz.ui5.format.ChartFormatter.getInstance = function() {  };


// ---- sap.viz.ui5.format.ChartFormatter.DefaultPattern --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.format.ChartFormatter.DefaultPattern.toString = function() { return ""; };

// ---- sap.viz.ui5.Heatmap --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Heatmap
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Heatmap</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Heatmap
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'heatmap'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Heatmap = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Heatmap</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Heatmap</code> itself
 * 
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Heatmap</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Heatmap</code> itself
 * 
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Heatmap.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Heatmap</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Heatmap</code> itself
 * 
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Heatmap</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Heatmap</code> itself
 * 
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Heatmap</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Heatmap</code> itself
 * 
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Heatmap.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyGeneral = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyInteraction = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyLegend = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyTitle = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyToolTip = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyXAxis = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.destroyYAxis = function() { return new sap.viz.ui5.Heatmap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Heatmap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Heatmap(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Heatmap with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Heatmap.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Heatmap.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Heatmap(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Heatmap.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Heatmap(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Heatmap.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Heatmap(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Heatmap.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Heatmap(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Heatmap.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Heatmap(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Heatmap.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Heatmap.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.heatmap
 * 
 * @returns {sap.viz.ui5.types.Heatmap}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Heatmap} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Heatmap(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Heatmap.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Heatmap(); };


// ---- sap.viz.ui5.HorizontalArea --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.HorizontalArea
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Area</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.HorizontalArea
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.HorizontalArea = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyBackground = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyDataLabel = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyGeneral = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyInteraction = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyLegend = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyPlotArea = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyTitle = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyToolTip = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyXAxis = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyXyContainer = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.destroyYAxis = function() { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.HorizontalArea</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Creates a new subclass of class sap.viz.ui5.HorizontalArea with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.HorizontalArea.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.HorizontalArea.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.HorizontalArea.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.area
 * 
 * @returns {sap.viz.ui5.types.Area}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Area} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.HorizontalArea(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.HorizontalArea} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.HorizontalArea(); };


// ---- sap.viz.ui5.HorizontalArea100 --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.HorizontalArea100
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Area</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.HorizontalArea100
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.HorizontalArea100 = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea100</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea100</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea100</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea100</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea100</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea100</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.HorizontalArea100</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.HorizontalArea100</code> itself
 * 
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyBackground = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyDataLabel = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyGeneral = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyInteraction = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyLegend = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyPlotArea = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyTitle = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyToolTip = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyXAxis = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyXyContainer = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.destroyYAxis = function() { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.HorizontalArea100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Creates a new subclass of class sap.viz.ui5.HorizontalArea100 with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.HorizontalArea100.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.HorizontalArea100.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.HorizontalArea100.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.area
 * 
 * @returns {sap.viz.ui5.types.Area}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Area} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.HorizontalArea100(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.HorizontalArea100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.HorizontalArea100.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.HorizontalArea100(); };


// ---- sap.viz.ui5.Line --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Line
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Line</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Line
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'line'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Line = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Line</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Line</code> itself
 * 
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Line</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Line</code> itself
 * 
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Line.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Line</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Line</code> itself
 * 
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Line</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Line</code> itself
 * 
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Line</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Line</code> itself
 * 
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Line.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyBackground = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyGeneral = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyInteraction = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyLegend = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyTitle = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyToolTip = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyXAxis = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Line(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.destroyYAxis = function() { return new sap.viz.ui5.Line(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Line</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Line(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Line with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Line.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Line.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Line(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Line.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Line(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Line.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Line(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Line.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Line(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Line.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Line(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Line.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Line.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.line
 * 
 * @returns {sap.viz.ui5.types.Line}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Line(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Line} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Line(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Line.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Line(); };


// ---- sap.viz.ui5.Pie --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Pie
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Pie</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getDataTransform dataTransform} : sap.viz.ui5.types.Datatransform</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Pie
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'pie'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Pie = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Pie</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Pie</code> itself
 * 
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Pie</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Pie</code> itself
 * 
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Pie.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Pie</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Pie</code> itself
 * 
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Pie</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Pie</code> itself
 * 
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Pie</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Pie</code> itself
 * 
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Pie.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the dataTransform in the aggregation {@link #getDataTransform dataTransform}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyDataTransform = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyGeneral = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyInteraction = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyLegend = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyTitle = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyToolTip = function() { return new sap.viz.ui5.Pie(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Pie(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Pie</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Pie(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Pie with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Pie.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Pie.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Pie(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Pie.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Pie(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Pie.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Pie(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Pie.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Pie(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Pie.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Pie(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getDataTransform dataTransform}.
 * 
 * Module sap.viz.modules.datatransform
 * 
 * @returns {sap.viz.ui5.types.Datatransform}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getDataTransform = function() { return new sap.viz.ui5.types.Datatransform(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Pie.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Pie.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.pie
 * 
 * @returns {sap.viz.ui5.types.Pie}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Pie(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getDataTransform dataTransform}.
 * @param {sap.viz.ui5.types.Datatransform} oDataTransform The dataTransform to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setDataTransform = function(oDataTransform) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Pie} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Pie(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Pie.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Pie(); };


// ---- sap.viz.ui5.Scatter --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Scatter
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Scatter</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getDataTransform dataTransform} : sap.viz.ui5.types.Datatransform</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Scatter
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'scatter'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Scatter = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Scatter</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Scatter</code> itself
 * 
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Scatter</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Scatter</code> itself
 * 
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Scatter.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Scatter</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Scatter</code> itself
 * 
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Scatter</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Scatter</code> itself
 * 
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Scatter</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Scatter</code> itself
 * 
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Scatter.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyBackground = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the dataTransform in the aggregation {@link #getDataTransform dataTransform}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyDataTransform = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyGeneral = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyInteraction = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyLegend = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyTitle = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyToolTip = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyXAxis = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.destroyYAxis = function() { return new sap.viz.ui5.Scatter(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Scatter</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Scatter(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Scatter with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Scatter.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Scatter.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Scatter(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Scatter.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Scatter(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Scatter.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Scatter(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Scatter.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Scatter(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Scatter.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Scatter(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getDataTransform dataTransform}.
 * 
 * Module sap.viz.modules.datatransform
 * 
 * @returns {sap.viz.ui5.types.Datatransform}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getDataTransform = function() { return new sap.viz.ui5.types.Datatransform(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Scatter.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Scatter.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.scatter
 * 
 * @returns {sap.viz.ui5.types.Scatter}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Scatter(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getDataTransform dataTransform}.
 * @param {sap.viz.ui5.types.Datatransform} oDataTransform The dataTransform to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setDataTransform = function(oDataTransform) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Scatter} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Scatter(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Scatter.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.Scatter(); };


// ---- sap.viz.ui5.StackedColumn --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.StackedColumn
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.StackedVerticalBar</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.StackedColumn
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'stacked_column'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.StackedColumn = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyBackground = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyDataLabel = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyGeneral = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyInteraction = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyLegend = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyPlotArea = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyTitle = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyToolTip = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyXAxis = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyXyContainer = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.destroyYAxis = function() { return new sap.viz.ui5.StackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.StackedColumn</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Creates a new subclass of class sap.viz.ui5.StackedColumn with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.StackedColumn.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.StackedColumn.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.StackedColumn.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.StackedColumn.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.StackedColumn.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.StackedColumn.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.stackedverticalbar
 * 
 * @returns {sap.viz.ui5.types.StackedVerticalBar}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getPlotArea = function() { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.StackedVerticalBar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.StackedColumn(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.StackedColumn} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.StackedColumn(); };


// ---- sap.viz.ui5.StackedColumn100 --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.StackedColumn100
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.StackedVerticalBar</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.StackedColumn100
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': '100_stacked_column'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.StackedColumn100 = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn100</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn100</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn100</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.StackedColumn100</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.StackedColumn100</code> itself
 * 
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyBackground = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyDataLabel = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyGeneral = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyInteraction = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyLegend = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyPlotArea = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyTitle = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyToolTip = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyXAxis = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyXyContainer = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.destroyYAxis = function() { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.StackedColumn100</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Creates a new subclass of class sap.viz.ui5.StackedColumn100 with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.StackedColumn100.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.StackedColumn100.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.StackedColumn100.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.stackedverticalbar
 * 
 * @returns {sap.viz.ui5.types.StackedVerticalBar}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getPlotArea = function() { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.StackedVerticalBar} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.StackedColumn100(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.StackedColumn100} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.StackedColumn100.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.StackedColumn100(); };


// ---- sap.viz.ui5.TimeBubble --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.TimeBubble
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getSizeLegend sizeLegend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getXAxis xAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getYAxis yAxis} : sap.viz.ui5.types.Axis</li>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Background</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Bubble</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.TimeBubble
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'time_bubble'})</code>)
 * <b>control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.TimeBubble = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.TimeBubble</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.TimeBubble</code> itself
 * 
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.TimeBubble</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.TimeBubble</code> itself
 * 
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.TimeBubble.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.TimeBubble</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.TimeBubble</code> itself
 * 
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.TimeBubble</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.TimeBubble</code> itself
 * 
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.TimeBubble</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.TimeBubble</code> itself
 * 
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.TimeBubble.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyBackground = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyDataLabel = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyGeneral = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyInteraction = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyLegend = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyPlotArea = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the sizeLegend in the aggregation {@link #getSizeLegend sizeLegend}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroySizeLegend = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyTitle = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyToolTip = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyXAxis = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyXyContainer = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.destroyYAxis = function() { return new sap.viz.ui5.TimeBubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.TimeBubble</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Creates a new subclass of class sap.viz.ui5.TimeBubble with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.TimeBubble.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.TimeBubble.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.TimeBubble.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.TimeBubble.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.TimeBubble.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.TimeBubble.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Module sap.viz.modules.background
 * 
 * @returns {sap.viz.ui5.types.Background}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getBackground = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.TimeBubble.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.TimeBubble.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.bubble
 * 
 * @returns {sap.viz.ui5.types.Bubble}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Bubble(); };

/**
 * Gets content of aggregation {@link #getSizeLegend sizeLegend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getSizeLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXAxis xAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getXAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Gets content of aggregation {@link #getYAxis yAxis}.
 * 
 * Module sap.viz.modules.axis
 * 
 * @returns {sap.viz.ui5.types.Axis}
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.getYAxis = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Background} oBackground The background to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Bubble} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getSizeLegend sizeLegend}.
 * @param {sap.viz.ui5.types.legend.Common} oSizeLegend The sizeLegend to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setSizeLegend = function(oSizeLegend) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getXAxis xAxis}.
 * @param {sap.viz.ui5.types.Axis} oXAxis The xAxis to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setXAxis = function(oXAxis) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.TimeBubble(); };

/**
 * Sets the aggregated {@link #getYAxis yAxis}.
 * @param {sap.viz.ui5.types.Axis} oYAxis The yAxis to set
 * @returns {sap.viz.ui5.TimeBubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.TimeBubble.prototype.setYAxis = function(oYAxis) { return new sap.viz.ui5.TimeBubble(); };


// ---- sap.viz.ui5.Treemap --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.Treemap
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGeneral general} : sap.viz.ui5.types.RootContainer</li>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Title</li>
 * <li>{@link #getLegendGroup legendGroup} : sap.viz.ui5.types.Legend</li>
 * <li>{@link #getLegend legend} : sap.viz.ui5.types.legend.Common</li>
 * <li>{@link #getXyContainer xyContainer} : sap.viz.ui5.types.XYContainer</li>
 * <li>{@link #getDataLabel dataLabel} : sap.viz.ui5.types.Datalabel</li>
 * <li>{@link #getPlotArea plotArea} : sap.viz.ui5.types.Treemap</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Tooltip</li>
 * <li>{@link #getInteraction interaction} : sap.viz.ui5.types.controller.Interaction</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseChart#constructor sap.viz.ui5.core.BaseChart}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Chart sap.viz.ui5.Treemap
 * @extends sap.viz.ui5.core.BaseChart
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.Treemap = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.deselectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.selectData = function(oControlEvent) {  };

/**
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * @event
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Treemap</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Treemap</code> itself
 * 
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Treemap</code> itself.
 * 
 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Treemap</code> itself
 * 
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Treemap.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Treemap</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Treemap</code> itself
 * 
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Treemap</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Treemap</code> itself
 * 
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.Treemap</code> itself.
 * 
 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //All measures
 * name:"...",val:[{//measure value is an array containing only one item
 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.Treemap</code> itself
 * 
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Treemap.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyDataLabel = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the general in the aggregation {@link #getGeneral general}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyGeneral = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyInteraction = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the legend in the aggregation {@link #getLegend legend}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyLegend = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyLegendGroup = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyPlotArea = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyTitle = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyToolTip = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.destroyXyContainer = function() { return new sap.viz.ui5.Treemap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.Treemap</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.Treemap(); };

/**
 * Creates a new subclass of class sap.viz.ui5.Treemap with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.Treemap.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Treemap.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.Treemap(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Treemap.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.Treemap(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Treemap.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.Treemap(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.Treemap.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.Treemap(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 */
sap.viz.ui5.Treemap.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.Treemap(); };

/**
 * Gets content of aggregation {@link #getDataLabel dataLabel}.
 * 
 * Module sap.viz.modules.datalabel
 * 
 * @returns {sap.viz.ui5.types.Datalabel}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getDataLabel = function() { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Gets content of aggregation {@link #getGeneral general}.
 * 
 * Module sap.viz.modules.rootContainer
 * 
 * @returns {sap.viz.ui5.types.RootContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getGeneral = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Gets content of aggregation {@link #getInteraction interaction}.
 * 
 * Module sap.viz.modules.controller.interaction
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getInteraction = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Gets content of aggregation {@link #getLegend legend}.
 * 
 * Module sap.viz.modules.legend.common
 * 
 * @returns {sap.viz.ui5.types.legend.Common}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getLegend = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Gets content of aggregation {@link #getLegendGroup legendGroup}.
 * 
 * Module sap.viz.modules.legend
 * 
 * @returns {sap.viz.ui5.types.Legend}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getLegendGroup = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Returns a metadata object for class sap.viz.ui5.Treemap.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.Treemap.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPlotArea plotArea}.
 * 
 * Module sap.viz.modules.treemap
 * 
 * @returns {sap.viz.ui5.types.Treemap}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getPlotArea = function() { return new sap.viz.ui5.types.Treemap(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Module sap.viz.modules.title
 * 
 * @returns {sap.viz.ui5.types.Title}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getTitle = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Module sap.viz.chart.elements.Tooltip
 * 
 * @returns {sap.viz.ui5.types.Tooltip}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getToolTip = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Gets content of aggregation {@link #getXyContainer xyContainer}.
 * 
 * Module sap.viz.modules.xycontainer
 * 
 * @returns {sap.viz.ui5.types.XYContainer}
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.getXyContainer = function() { return new sap.viz.ui5.types.XYContainer(); };

/**
 * Sets the aggregated {@link #getDataLabel dataLabel}.
 * @param {sap.viz.ui5.types.Datalabel} oDataLabel The dataLabel to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setDataLabel = function(oDataLabel) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getGeneral general}.
 * @param {sap.viz.ui5.types.RootContainer} oGeneral The general to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setGeneral = function(oGeneral) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getInteraction interaction}.
 * @param {sap.viz.ui5.types.controller.Interaction} oInteraction The interaction to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setInteraction = function(oInteraction) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getLegend legend}.
 * @param {sap.viz.ui5.types.legend.Common} oLegend The legend to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setLegend = function(oLegend) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getLegendGroup legendGroup}.
 * @param {sap.viz.ui5.types.Legend} oLegendGroup The legendGroup to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setLegendGroup = function(oLegendGroup) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getPlotArea plotArea}.
 * @param {sap.viz.ui5.types.Treemap} oPlotArea The plotArea to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setPlotArea = function(oPlotArea) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Title} oTitle The title to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.Treemap(); };

/**
 * Sets the aggregated {@link #getXyContainer xyContainer}.
 * @param {sap.viz.ui5.types.XYContainer} oXyContainer The xyContainer to set
 * @returns {sap.viz.ui5.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.Treemap.prototype.setXyContainer = function(oXyContainer) { return new sap.viz.ui5.Treemap(); };


// ---- sap.viz.ui5.types.Area --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Area
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.Area_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Area_drawingEffect (default: normal)</li>
 * <li>{@link #getMode mode} : sap.viz.ui5.types.Area_mode (default: comparison)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Area_tooltip</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Area_animation</li>
 * <li>{@link #getMarker marker} : sap.viz.ui5.types.Area_marker</li>
 * <li>{@link #getHoverline hoverline} : sap.viz.ui5.types.Area_hoverline</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Area = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.destroyHoverline = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Destroys the marker in the aggregation {@link #getMarker marker}.
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.destroyMarker = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Area(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Area with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.Area_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getAnimation = function() { return new sap.viz.ui5.types.Area_animation(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Area_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Area_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getHoverline hoverline}.
 * 
 * Settings for the hoverline.
 * 
 * @returns {sap.viz.ui5.types.Area_hoverline}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getHoverline = function() { return new sap.viz.ui5.types.Area_hoverline(); };

/**
 * Gets content of aggregation {@link #getMarker marker}.
 * 
 * Settings for marker and data point graphics
 * 
 * @returns {sap.viz.ui5.types.Area_marker}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getMarker = function() { return new sap.viz.ui5.types.Area_marker(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Area.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getMode mode}.
 * 
 * Set the display mode of the area chart
 * 
 * Default value is <code>comparison</code>.
 * @returns {sap.viz.ui5.types.Area_mode} Value of property <code>mode</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getMode = function() { return new sap.viz.ui5.types.Area_mode(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set whether the area chart is vertical or horizontal
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Area_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getOrientation = function() { return new sap.viz.ui5.types.Area_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for the tooltip
 * 
 * @returns {sap.viz.ui5.types.Area_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.getToolTip = function() { return new sap.viz.ui5.types.Area_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Area_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Area_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets the aggregated {@link #getHoverline hoverline}.
 * @param {sap.viz.ui5.types.Area_hoverline} oHoverline The hoverline to set
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setHoverline = function(oHoverline) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets the aggregated {@link #getMarker marker}.
 * @param {sap.viz.ui5.types.Area_marker} oMarker The marker to set
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setMarker = function(oMarker) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getMode mode}.
 * 
 * Set the display mode of the area chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>comparison</code>.
 * @param {sap.viz.ui5.types.Area_mode} sMode New value for property <code>mode</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setMode = function(sMode) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set whether the area chart is vertical or horizontal
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Area_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.Area(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Area_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Area} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Area(); };


// ---- sap.viz.ui5.types.Area_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Area_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Area_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Area_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Area_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Area_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Area_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Area_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Area_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Area_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Area_animation(); };


// ---- sap.viz.ui5.types.Area_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Area_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Area_hoverline --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Area_hoverline
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the hoverline.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Area_hoverline = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Area_hoverline with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_hoverline.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Area_hoverline.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_hoverline.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the hoverline.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_hoverline.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the hoverline.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Area_hoverline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_hoverline.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Area_hoverline(); };


// ---- sap.viz.ui5.types.Area_marker --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Area_marker
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getShape shape} : sap.viz.ui5.types.Area_marker_shape (default: circle)</li>
 * <li>{@link #getSize size} : int (default: 8)</li>
 * <li>{@link #getNumber number} : int</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for marker and data point graphics
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Area_marker = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Area_marker with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_marker.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Area_marker.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_marker.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getNumber number}.
 * 
 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
 * 
 * @returns {int} Value of property <code>number</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.getNumber = function() { return 0; };

/**
 * Gets current value of property {@link #getShape shape}.
 * 
 * Set the shape of the markers
 * 
 * Default value is <code>circle</code>.
 * @returns {sap.viz.ui5.types.Area_marker_shape} Value of property <code>shape</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.getShape = function() { return new sap.viz.ui5.types.Area_marker_shape(); };

/**
 * Gets current value of property {@link #getSize size}.
 * 
 * Set the marker size for data points, ranging from '4' and '32'. If you enter a value outside that range, the marker size defaults to '4'.
 * 
 * Default value is <code>8</code>.
 * @returns {int} Value of property <code>size</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.getSize = function() { return 0; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the markers
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getNumber number}.
 * 
 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iNumber New value for property <code>number</code>
 * @returns {sap.viz.ui5.types.Area_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.setNumber = function(iNumber) { return new sap.viz.ui5.types.Area_marker(); };

/**
 * Sets a new value for property {@link #getShape shape}.
 * 
 * Set the shape of the markers
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>circle</code>.
 * @param {sap.viz.ui5.types.Area_marker_shape} sShape New value for property <code>shape</code>
 * @returns {sap.viz.ui5.types.Area_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.setShape = function(sShape) { return new sap.viz.ui5.types.Area_marker(); };

/**
 * Sets a new value for property {@link #getSize size}.
 * 
 * Set the marker size for data points, ranging from '4' and '32'. If you enter a value outside that range, the marker size defaults to '4'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>8</code>.
 * @param {int} iSize New value for property <code>size</code>
 * @returns {sap.viz.ui5.types.Area_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.setSize = function(iSize) { return new sap.viz.ui5.types.Area_marker(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the markers
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Area_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Area_marker(); };


// ---- sap.viz.ui5.types.Area_marker_shape --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Area_marker_shape.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Area_mode --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Area_mode.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Area_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Area_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Area_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Area_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the tooltip
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Area_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Area_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Area_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Area_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Area_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Area_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Area_tooltip(); };


// ---- sap.viz.ui5.types.Axis --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getIsIndependentMode isIndependentMode} : boolean (default: false)</li>
 * <li>{@link #getIsPercentMode isPercentMode} : boolean (default: false)</li>
 * <li>{@link #getIsKeepFirstAndLastLabel isKeepFirstAndLastLabel} : boolean (default: false)</li>
 * <li>{@link #getLineSize lineSize} : int (default: 1)</li>
 * <li>{@link #getColor color} : string (default: #6c6c6c)</li>
 * <li>{@link #getType type} : sap.viz.ui5.types.Axis_type (default: value)</li>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getPosition position} : sap.viz.ui5.types.Axis_position (default: bottom)</li>
 * <li>{@link #getIsTruncateAvailable isTruncateAvailable} : boolean (default: true)</li>
 * <li>{@link #getForceLabelArea forceLabelArea} : boolean (default: false)</li>
 * <li>{@link #getEnableLabelSelection enableLabelSelection} : boolean (default: true)</li>
 * <li>{@link #getHideTitleFirst hideTitleFirst} : boolean (default: false)</li>
 * <li>{@link #getMaxSizeRatio maxSizeRatio} : float (default: 0.25)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.Axis_title</li>
 * <li>{@link #getGridline gridline} : sap.viz.ui5.types.Axis_gridline</li>
 * <li>{@link #getAxisline axisline} : sap.viz.ui5.types.Axis_axisline</li>
 * <li>{@link #getLabel label} : sap.viz.ui5.types.Axis_label</li>
 * <li>{@link #getIndicator indicator} : sap.viz.ui5.types.Axis_indicator</li>
 * <li>{@link #getScale scale} : sap.viz.ui5.types.Axis_scale</li>
 * <li>{@link #getLayoutInfo layoutInfo} : sap.viz.ui5.types.Axis_layoutInfo</li>
 * <li>{@link #getAxisTick axisTick} : sap.viz.ui5.types.Axis_axisTick</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Axis
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis = function(sId,mSettings) {};
/**
 * Destroys the axisline in the aggregation {@link #getAxisline axisline}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyAxisline = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the axisTick in the aggregation {@link #getAxisTick axisTick}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyAxisTick = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the gridline in the aggregation {@link #getGridline gridline}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyGridline = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the indicator in the aggregation {@link #getIndicator indicator}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyIndicator = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the label in the aggregation {@link #getLabel label}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyLabel = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the layoutInfo in the aggregation {@link #getLayoutInfo layoutInfo}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyLayoutInfo = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the scale in the aggregation {@link #getScale scale}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyScale = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.destroyTitle = function() { return new sap.viz.ui5.types.Axis(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAxisline axisline}.
 * 
 * Settings for the axis line
 * 
 * @returns {sap.viz.ui5.types.Axis_axisline}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getAxisline = function() { return new sap.viz.ui5.types.Axis_axisline(); };

/**
 * Gets content of aggregation {@link #getAxisTick axisTick}.
 * 
 * Settings for the ticks on the axis
 * 
 * @returns {sap.viz.ui5.types.Axis_axisTick}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getAxisTick = function() { return new sap.viz.ui5.types.Axis_axisTick(); };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Set the color of the axis line
 * 
 * Default value is <code>#6c6c6c</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getColor = function() { return ""; };

/**
 * Gets current value of property {@link #getEnableLabelSelection enableLabelSelection}.
 * 
 * Set whether the label selection effect is enabled. For mobile devices, the default value is 'false'.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enableLabelSelection</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getEnableLabelSelection = function() { return false; };

/**
 * Gets current value of property {@link #getForceLabelArea forceLabelArea}.
 * 
 * Set whether the label area is limited to the text area
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>forceLabelArea</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getForceLabelArea = function() { return false; };

/**
 * Gets content of aggregation {@link #getGridline gridline}.
 * 
 * Settings for the gridlines on the axis
 * 
 * @returns {sap.viz.ui5.types.Axis_gridline}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getGridline = function() { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Gets current value of property {@link #getHideTitleFirst hideTitleFirst}.
 * 
 * Hide axis title firstly if the space is limited.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>hideTitleFirst</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getHideTitleFirst = function() { return false; };

/**
 * Gets content of aggregation {@link #getIndicator indicator}.
 * 
 * Settings for the axis indicator
 * 
 * @returns {sap.viz.ui5.types.Axis_indicator}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getIndicator = function() { return new sap.viz.ui5.types.Axis_indicator(); };

/**
 * Gets current value of property {@link #getIsIndependentMode isIndependentMode}.
 * 
 * Set whether the axis works in independent mode. Currently, this property is used only for boxplot charts.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isIndependentMode</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getIsIndependentMode = function() { return false; };

/**
 * Gets current value of property {@link #getIsKeepFirstAndLastLabel isKeepFirstAndLastLabel}.
 * 
 * Try to keep the first label and last label when the space is limited.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isKeepFirstAndLastLabel</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getIsKeepFirstAndLastLabel = function() { return false; };

/**
 * Gets current value of property {@link #getIsPercentMode isPercentMode}.
 * 
 * Show the label as a percentage. For example '0.1' would show as '10'.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isPercentMode</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getIsPercentMode = function() { return false; };

/**
 * Gets current value of property {@link #getIsTruncateAvailable isTruncateAvailable}.
 * 
 * Set whether truncation logic is available for the category axis
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>isTruncateAvailable</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getIsTruncateAvailable = function() { return false; };

/**
 * Gets content of aggregation {@link #getLabel label}.
 * 
 * Settings for the labels on this axis
 * 
 * @returns {sap.viz.ui5.types.Axis_label}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getLabel = function() { return new sap.viz.ui5.types.Axis_label(); };

/**
 * Gets content of aggregation {@link #getLayoutInfo layoutInfo}.
 * 
 * Settings for the layout of the category axis. This property only works for category type axes.
 * 
 * @returns {sap.viz.ui5.types.Axis_layoutInfo}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getLayoutInfo = function() { return new sap.viz.ui5.types.Axis_layoutInfo(); };

/**
 * Gets current value of property {@link #getLineSize lineSize}.
 * 
 * Set the thickness of the axis line
 * 
 * Default value is <code>1</code>.
 * @returns {int} Value of property <code>lineSize</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getLineSize = function() { return 0; };

/**
 * Gets current value of property {@link #getMaxSizeRatio maxSizeRatio}.
 * 
 * The ratio to limit axis' space in its container, which only accepts values between 0 and 1(0 and 1 included). All the invalid values would be replaced by default value.
 * 
 * Default value is <code>0.25</code>.
 * @returns {float} Value of property <code>maxSizeRatio</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getMaxSizeRatio = function() { return 0.0; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPosition position}.
 * 
 * Set the position of the axis
 * 
 * Default value is <code>bottom</code>.
 * @returns {sap.viz.ui5.types.Axis_position} Value of property <code>position</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getPosition = function() { return new sap.viz.ui5.types.Axis_position(); };

/**
 * Gets content of aggregation {@link #getScale scale}.
 * 
 * Set the scale of the value axis. This property only works on value type axes.
 * 
 * @returns {sap.viz.ui5.types.Axis_scale}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getScale = function() { return new sap.viz.ui5.types.Axis_scale(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Settings for the axis title
 * 
 * @returns {sap.viz.ui5.types.Axis_title}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getTitle = function() { return new sap.viz.ui5.types.Axis_title(); };

/**
 * Gets current value of property {@link #getType type}.
 * 
 * Set the axis type
 * 
 * Default value is <code>value</code>.
 * @returns {sap.viz.ui5.types.Axis_type} Value of property <code>type</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getType = function() { return new sap.viz.ui5.types.Axis_type(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the entire axis, including the axis line, gridlines, and labels
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.getVisible = function() { return false; };

/**
 * Sets the aggregated {@link #getAxisline axisline}.
 * @param {sap.viz.ui5.types.Axis_axisline} oAxisline The axisline to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setAxisline = function(oAxisline) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getAxisTick axisTick}.
 * @param {sap.viz.ui5.types.Axis_axisTick} oAxisTick The axisTick to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setAxisTick = function(oAxisTick) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Set the color of the axis line
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#6c6c6c</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getEnableLabelSelection enableLabelSelection}.
 * 
 * Set whether the label selection effect is enabled. For mobile devices, the default value is 'false'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnableLabelSelection New value for property <code>enableLabelSelection</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setEnableLabelSelection = function(bEnableLabelSelection) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getForceLabelArea forceLabelArea}.
 * 
 * Set whether the label area is limited to the text area
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bForceLabelArea New value for property <code>forceLabelArea</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setForceLabelArea = function(bForceLabelArea) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getGridline gridline}.
 * @param {sap.viz.ui5.types.Axis_gridline} oGridline The gridline to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setGridline = function(oGridline) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getHideTitleFirst hideTitleFirst}.
 * 
 * Hide axis title firstly if the space is limited.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bHideTitleFirst New value for property <code>hideTitleFirst</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setHideTitleFirst = function(bHideTitleFirst) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getIndicator indicator}.
 * @param {sap.viz.ui5.types.Axis_indicator} oIndicator The indicator to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setIndicator = function(oIndicator) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getIsIndependentMode isIndependentMode}.
 * 
 * Set whether the axis works in independent mode. Currently, this property is used only for boxplot charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsIndependentMode New value for property <code>isIndependentMode</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setIsIndependentMode = function(bIsIndependentMode) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getIsKeepFirstAndLastLabel isKeepFirstAndLastLabel}.
 * 
 * Try to keep the first label and last label when the space is limited.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsKeepFirstAndLastLabel New value for property <code>isKeepFirstAndLastLabel</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setIsKeepFirstAndLastLabel = function(bIsKeepFirstAndLastLabel) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getIsPercentMode isPercentMode}.
 * 
 * Show the label as a percentage. For example '0.1' would show as '10'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsPercentMode New value for property <code>isPercentMode</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setIsPercentMode = function(bIsPercentMode) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getIsTruncateAvailable isTruncateAvailable}.
 * 
 * Set whether truncation logic is available for the category axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bIsTruncateAvailable New value for property <code>isTruncateAvailable</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setIsTruncateAvailable = function(bIsTruncateAvailable) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getLabel label}.
 * @param {sap.viz.ui5.types.Axis_label} oLabel The label to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setLabel = function(oLabel) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getLayoutInfo layoutInfo}.
 * @param {sap.viz.ui5.types.Axis_layoutInfo} oLayoutInfo The layoutInfo to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setLayoutInfo = function(oLayoutInfo) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getLineSize lineSize}.
 * 
 * Set the thickness of the axis line
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {int} iLineSize New value for property <code>lineSize</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setLineSize = function(iLineSize) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getMaxSizeRatio maxSizeRatio}.
 * 
 * The ratio to limit axis' space in its container, which only accepts values between 0 and 1(0 and 1 included). All the invalid values would be replaced by default value.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0.25</code>.
 * @param {float} fMaxSizeRatio New value for property <code>maxSizeRatio</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setMaxSizeRatio = function(fMaxSizeRatio) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getPosition position}.
 * 
 * Set the position of the axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>bottom</code>.
 * @param {sap.viz.ui5.types.Axis_position} sPosition New value for property <code>position</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setPosition = function(sPosition) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getScale scale}.
 * @param {sap.viz.ui5.types.Axis_scale} oScale The scale to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setScale = function(oScale) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.Axis_title} oTitle The title to set
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getType type}.
 * 
 * Set the axis type
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>value</code>.
 * @param {sap.viz.ui5.types.Axis_type} sType New value for property <code>type</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setType = function(sType) { return new sap.viz.ui5.types.Axis(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the entire axis, including the axis line, gridlines, and labels
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Axis} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Axis(); };


// ---- sap.viz.ui5.types.Axis_axisline --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_axisline
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the axis line
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_axisline = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_axisline with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_axisline.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_axisline.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_axisline.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the axis line
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_axisline.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the axis line
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Axis_axisline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_axisline.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Axis_axisline(); };


// ---- sap.viz.ui5.types.Axis_axisTick --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_axisTick
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the ticks on the axis
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_axisTick = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_axisTick with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_axisTick.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_axisTick.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_axisTick.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set visibility of the ticks on the axis. For mobile devices, the default value is 'false'.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_axisTick.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set visibility of the ticks on the axis. For mobile devices, the default value is 'false'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Axis_axisTick} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_axisTick.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Axis_axisTick(); };


// ---- sap.viz.ui5.types.Axis_gridline --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_gridline
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getDisable disable} : boolean (default: false)</li>
 * <li>{@link #getShowFirstLine showFirstLine} : boolean (default: false)</li>
 * <li>{@link #getShowLastLine showLastLine} : boolean (default: false)</li>
 * <li>{@link #getType type} : sap.viz.ui5.types.Axis_gridline_type (default: line)</li>
 * <li>{@link #getColor color} : string (default: #d8d8d8)</li>
 * <li>{@link #getSize size} : int (default: 1)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the gridlines on the axis
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_gridline = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_gridline with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_gridline.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Set the color of the gridlines on the axis
 * 
 * Default value is <code>#d8d8d8</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getColor = function() { return ""; };

/**
 * Gets current value of property {@link #getDisable disable}.
 * 
 * Disable gridline or not
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>disable</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getDisable = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_gridline.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_gridline.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getShowFirstLine showFirstLine}.
 * 
 * Set whether the first gridline on the axis appears
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>showFirstLine</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getShowFirstLine = function() { return false; };

/**
 * Gets current value of property {@link #getShowLastLine showLastLine}.
 * 
 * Set whether the last gridline on the axis appears
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>showLastLine</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getShowLastLine = function() { return false; };

/**
 * Gets current value of property {@link #getSize size}.
 * 
 * Set the line size of gridlines on the axis
 * 
 * Default value is <code>1</code>.
 * @returns {int} Value of property <code>size</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getSize = function() { return 0; };

/**
 * Gets current value of property {@link #getType type}.
 * 
 * Set the line type of gridlines on the axis
 * 
 * Default value is <code>line</code>.
 * @returns {sap.viz.ui5.types.Axis_gridline_type} Value of property <code>type</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getType = function() { return new sap.viz.ui5.types.Axis_gridline_type(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of gridlines on the axis
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Set the color of the gridlines on the axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#d8d8d8</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Sets a new value for property {@link #getDisable disable}.
 * 
 * Disable gridline or not
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bDisable New value for property <code>disable</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setDisable = function(bDisable) { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Sets a new value for property {@link #getShowFirstLine showFirstLine}.
 * 
 * Set whether the first gridline on the axis appears
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bShowFirstLine New value for property <code>showFirstLine</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setShowFirstLine = function(bShowFirstLine) { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Sets a new value for property {@link #getShowLastLine showLastLine}.
 * 
 * Set whether the last gridline on the axis appears
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bShowLastLine New value for property <code>showLastLine</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setShowLastLine = function(bShowLastLine) { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Sets a new value for property {@link #getSize size}.
 * 
 * Set the line size of gridlines on the axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {int} iSize New value for property <code>size</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setSize = function(iSize) { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Sets a new value for property {@link #getType type}.
 * 
 * Set the line type of gridlines on the axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>line</code>.
 * @param {sap.viz.ui5.types.Axis_gridline_type} sType New value for property <code>type</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setType = function(sType) { return new sap.viz.ui5.types.Axis_gridline(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of gridlines on the axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Axis_gridline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Axis_gridline(); };


// ---- sap.viz.ui5.types.Axis_gridline_type --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Axis_gridline_type.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Axis_indicator --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_indicator
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnable enable} : boolean (default: false)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the axis indicator
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_indicator = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_indicator with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_indicator.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnable enable}.
 * 
 * Set the visibility of the axis indicator
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>enable</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_indicator.prototype.getEnable = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_indicator.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_indicator.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnable enable}.
 * 
 * Set the visibility of the axis indicator
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bEnable New value for property <code>enable</code>
 * @returns {sap.viz.ui5.types.Axis_indicator} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_indicator.prototype.setEnable = function(bEnable) { return new sap.viz.ui5.types.Axis_indicator(); };


// ---- sap.viz.ui5.types.Axis_label --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_label
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getNumberFormat numberFormat} : string (default: )</li>
 * <li>{@link #getFormatString formatString} : any</li>
 * <li>{@link #getUnitFormatType unitFormatType} : sap.viz.ui5.types.Axis_label_unitFormatType (default: FinancialUnits)</li>
 * <li>{@link #getHideSubLevels hideSubLevels} : boolean (default: false)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the labels on this axis
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_label = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_label with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_label.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set the format strings for labels on the value axis. If a single format string is entered, it is applied to all measures. A two-dimensional array of format strings can be entered for scatter matrix charts and multiple charts with measureNamesDimension, to apply different formats to each sub-chart. For all other chart types, the first value of the first dimension of a two-dimensional array is used as a global format string. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The letter "u" is used at the end of a format string to format values in SI units. If the letter "u" is added to a value between 1e12 and 1e-3 before SI units are applied, the value is formatted in exponential style. The remaining syntax matches Excel format strings. The following is a simple example of a two-dimensional array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
 * 
 * @returns {any} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.getFormatString = function() { return null; };

/**
 * Gets current value of property {@link #getHideSubLevels hideSubLevels}.
 * 
 * Set the visibility of the sub levels of labels on this axis
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>hideSubLevels</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.getHideSubLevels = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_label.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_label.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getNumberFormat numberFormat}.
 * 
 * Set the number format for the value axis
 * 
 * Default value is <code></code>.
 * @returns {string} Value of property <code>numberFormat</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.getNumberFormat = function() { return ""; };

/**
 * Gets current value of property {@link #getUnitFormatType unitFormatType}.
 * 
 * Set the unit format type. If set MetricUnits, unit K,M,G,T will be applied, eg, 5000 will display as 5K, 5000000 will display as 5M, 5000000000 will display as 5G and so on. If set FinancialUnits, unit K,M,B,T will be applied. 5000000000 will display as 5B.
 * 
 * Default value is <code>FinancialUnits</code>.
 * @returns {sap.viz.ui5.types.Axis_label_unitFormatType} Value of property <code>unitFormatType</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.getUnitFormatType = function() { return new sap.viz.ui5.types.Axis_label_unitFormatType(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the labels on this axis
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set the format strings for labels on the value axis. If a single format string is entered, it is applied to all measures. A two-dimensional array of format strings can be entered for scatter matrix charts and multiple charts with measureNamesDimension, to apply different formats to each sub-chart. For all other chart types, the first value of the first dimension of a two-dimensional array is used as a global format string. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The letter "u" is used at the end of a format string to format values in SI units. If the letter "u" is added to a value between 1e12 and 1e-3 before SI units are applied, the value is formatted in exponential style. The remaining syntax matches Excel format strings. The following is a simple example of a two-dimensional array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.Axis_label} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.setFormatString = function(oFormatString) { return new sap.viz.ui5.types.Axis_label(); };

/**
 * Sets a new value for property {@link #getHideSubLevels hideSubLevels}.
 * 
 * Set the visibility of the sub levels of labels on this axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bHideSubLevels New value for property <code>hideSubLevels</code>
 * @returns {sap.viz.ui5.types.Axis_label} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.setHideSubLevels = function(bHideSubLevels) { return new sap.viz.ui5.types.Axis_label(); };

/**
 * Sets a new value for property {@link #getNumberFormat numberFormat}.
 * 
 * Set the number format for the value axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code></code>.
 * @param {string} sNumberFormat New value for property <code>numberFormat</code>
 * @returns {sap.viz.ui5.types.Axis_label} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.setNumberFormat = function(sNumberFormat) { return new sap.viz.ui5.types.Axis_label(); };

/**
 * Sets a new value for property {@link #getUnitFormatType unitFormatType}.
 * 
 * Set the unit format type. If set MetricUnits, unit K,M,G,T will be applied, eg, 5000 will display as 5K, 5000000 will display as 5M, 5000000000 will display as 5G and so on. If set FinancialUnits, unit K,M,B,T will be applied. 5000000000 will display as 5B.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>FinancialUnits</code>.
 * @param {sap.viz.ui5.types.Axis_label_unitFormatType} sUnitFormatType New value for property <code>unitFormatType</code>
 * @returns {sap.viz.ui5.types.Axis_label} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.setUnitFormatType = function(sUnitFormatType) { return new sap.viz.ui5.types.Axis_label(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the labels on this axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Axis_label} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Axis_label(); };


// ---- sap.viz.ui5.types.Axis_label_unitFormatType --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Axis_label_unitFormatType.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Axis_layoutInfo --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_layoutInfo
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getWidth width} : float (default: 0)</li>
 * <li>{@link #getHeight height} : float (default: 0)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the layout of the category axis. This property only works for category type axes.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_layoutInfo with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getHeight height}.
 * 
 * Set the height of the xAxis
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>height</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo.prototype.getHeight = function() { return 0.0; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_layoutInfo.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getWidth width}.
 * 
 * Set the width of the xAxis
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>width</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo.prototype.getWidth = function() { return 0.0; };

/**
 * Sets a new value for property {@link #getHeight height}.
 * 
 * Set the height of the xAxis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fHeight New value for property <code>height</code>
 * @returns {sap.viz.ui5.types.Axis_layoutInfo} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo.prototype.setHeight = function(fHeight) { return new sap.viz.ui5.types.Axis_layoutInfo(); };

/**
 * Sets a new value for property {@link #getWidth width}.
 * 
 * Set the width of the xAxis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fWidth New value for property <code>width</code>
 * @returns {sap.viz.ui5.types.Axis_layoutInfo} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_layoutInfo.prototype.setWidth = function(fWidth) { return new sap.viz.ui5.types.Axis_layoutInfo(); };


// ---- sap.viz.ui5.types.Axis_position --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Axis_position.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Axis_scale --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_scale
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getFixedRange fixedRange} : boolean (default: false)</li>
 * <li>{@link #getMinValue minValue} : float (default: 0)</li>
 * <li>{@link #getMaxValue maxValue} : float (default: 0)</li>
 * <li>{@link #getFixedTicks fixedTicks} : object[]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Set the scale of the value axis. This property only works on value type axes.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_scale = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_scale with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_scale.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFixedRange fixedRange}.
 * 
 * Set whether the axis range is limited to the range between the minValue and maxValue
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>fixedRange</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.getFixedRange = function() { return false; };

/**
 * Gets current value of property {@link #getFixedTicks fixedTicks}.
 * 
 * Set the specific ticks for value axis. The format should be [{value : "/value/", text : "/text/"}...]. If its length is less than 2, this property will not take effect.
 * 
 * @returns {object[]} Value of property <code>fixedTicks</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.getFixedTicks = function() { return new Array(); };

/**
 * Gets current value of property {@link #getMaxValue maxValue}.
 * 
 * Set the maxValue of the value axis
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxValue</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.getMaxValue = function() { return 0.0; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_scale.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_scale.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getMinValue minValue}.
 * 
 * Set the minValue of the value axis
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minValue</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.getMinValue = function() { return 0.0; };

/**
 * Sets a new value for property {@link #getFixedRange fixedRange}.
 * 
 * Set whether the axis range is limited to the range between the minValue and maxValue
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bFixedRange New value for property <code>fixedRange</code>
 * @returns {sap.viz.ui5.types.Axis_scale} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.setFixedRange = function(bFixedRange) { return new sap.viz.ui5.types.Axis_scale(); };

/**
 * Sets a new value for property {@link #getFixedTicks fixedTicks}.
 * 
 * Set the specific ticks for value axis. The format should be [{value : "/value/", text : "/text/"}...]. If its length is less than 2, this property will not take effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFixedTicks New value for property <code>fixedTicks</code>
 * @returns {sap.viz.ui5.types.Axis_scale} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.setFixedTicks = function(sFixedTicks) { return new sap.viz.ui5.types.Axis_scale(); };

/**
 * Sets a new value for property {@link #getMaxValue maxValue}.
 * 
 * Set the maxValue of the value axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxValue New value for property <code>maxValue</code>
 * @returns {sap.viz.ui5.types.Axis_scale} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.setMaxValue = function(fMaxValue) { return new sap.viz.ui5.types.Axis_scale(); };

/**
 * Sets a new value for property {@link #getMinValue minValue}.
 * 
 * Set the minValue of the value axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinValue New value for property <code>minValue</code>
 * @returns {sap.viz.ui5.types.Axis_scale} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_scale.prototype.setMinValue = function(fMinValue) { return new sap.viz.ui5.types.Axis_scale(); };


// ---- sap.viz.ui5.types.Axis_title --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Axis_title
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: false)</li>
 * <li>{@link #getText text} : string</li>
 * <li>{@link #getApplyAxislineColor applyAxislineColor} : boolean (default: false)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the axis title
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Axis_title = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Axis_title with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_title.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getApplyAxislineColor applyAxislineColor}.
 * 
 * Set the title color to match the color of the axis line
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>applyAxislineColor</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_title.prototype.getApplyAxislineColor = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Axis_title.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Axis_title.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getText text}.
 * 
 * Set the text of the axis title
 * 
 * @returns {string} Value of property <code>text</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_title.prototype.getText = function() { return ""; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the axis title
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_title.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getApplyAxislineColor applyAxislineColor}.
 * 
 * Set the title color to match the color of the axis line
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bApplyAxislineColor New value for property <code>applyAxislineColor</code>
 * @returns {sap.viz.ui5.types.Axis_title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_title.prototype.setApplyAxislineColor = function(bApplyAxislineColor) { return new sap.viz.ui5.types.Axis_title(); };

/**
 * Sets a new value for property {@link #getText text}.
 * 
 * Set the text of the axis title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sText New value for property <code>text</code>
 * @returns {sap.viz.ui5.types.Axis_title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_title.prototype.setText = function(sText) { return new sap.viz.ui5.types.Axis_title(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the axis title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Axis_title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Axis_title.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Axis_title(); };


// ---- sap.viz.ui5.types.Axis_type --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Axis_type.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Background --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Background
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Background_drawingEffect (default: normal)</li>
 * <li>{@link #getDirection direction} : sap.viz.ui5.types.Background_direction (default: vertical)</li>
 * <li>{@link #getColor color} : string (default: transparent)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getBorder border} : sap.viz.ui5.types.Background_border</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Background
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Background = function(sId,mSettings) {};
/**
 * Destroys the border in the aggregation {@link #getBorder border}.
 * @returns {sap.viz.ui5.types.Background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.destroyBorder = function() { return new sap.viz.ui5.types.Background(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Background with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getBorder border}.
 * 
 * Settings for the border
 * 
 * @returns {sap.viz.ui5.types.Background_border}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.getBorder = function() { return new sap.viz.ui5.types.Background_border(); };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Define the color for the plot background body.
 * 
 * Default value is <code>transparent</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.getColor = function() { return ""; };

/**
 * Gets current value of property {@link #getDirection direction}.
 * 
 * Set the direction of the color gradient in the background. This only takes effect if the 'drawingEffect' value is set to 'glossy'.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Background_direction} Value of property <code>direction</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.getDirection = function() { return new sap.viz.ui5.types.Background_direction(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the background. If this value is set to 'glossy', the background is glossy. If this value is set to 'normal', the background is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Background_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Background_drawingEffect(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Background.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.getVisible = function() { return false; };

/**
 * Sets the aggregated {@link #getBorder border}.
 * @param {sap.viz.ui5.types.Background_border} oBorder The border to set
 * @returns {sap.viz.ui5.types.Background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.setBorder = function(oBorder) { return new sap.viz.ui5.types.Background(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Define the color for the plot background body.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>transparent</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Background(); };

/**
 * Sets a new value for property {@link #getDirection direction}.
 * 
 * Set the direction of the color gradient in the background. This only takes effect if the 'drawingEffect' value is set to 'glossy'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Background_direction} sDirection New value for property <code>direction</code>
 * @returns {sap.viz.ui5.types.Background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.setDirection = function(sDirection) { return new sap.viz.ui5.types.Background(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the background. If this value is set to 'glossy', the background is glossy. If this value is set to 'normal', the background is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Background_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Background(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Background(); };


// ---- sap.viz.ui5.types.Background_border --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Background_border
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getStroke stroke} : string (default: #d8d8d8)</li>
 * <li>{@link #getStrokeWidth strokeWidth} : int (default: 1)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getLeft left} : sap.viz.ui5.types.Background_border_left</li>
 * <li>{@link #getRight right} : sap.viz.ui5.types.Background_border_right</li>
 * <li>{@link #getTop top} : sap.viz.ui5.types.Background_border_top</li>
 * <li>{@link #getBottom bottom} : sap.viz.ui5.types.Background_border_bottom</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Background_border = function(sId,mSettings) {};
/**
 * Destroys the bottom in the aggregation {@link #getBottom bottom}.
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.destroyBottom = function() { return new sap.viz.ui5.types.Background_border(); };

/**
 * Destroys the left in the aggregation {@link #getLeft left}.
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.destroyLeft = function() { return new sap.viz.ui5.types.Background_border(); };

/**
 * Destroys the right in the aggregation {@link #getRight right}.
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.destroyRight = function() { return new sap.viz.ui5.types.Background_border(); };

/**
 * Destroys the top in the aggregation {@link #getTop top}.
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.destroyTop = function() { return new sap.viz.ui5.types.Background_border(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Background_border with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getBottom bottom}.
 * 
 * Settings for the bottom border
 * 
 * @returns {sap.viz.ui5.types.Background_border_bottom}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.getBottom = function() { return new sap.viz.ui5.types.Background_border_bottom(); };

/**
 * Gets content of aggregation {@link #getLeft left}.
 * 
 * Settings for the left border
 * 
 * @returns {sap.viz.ui5.types.Background_border_left}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.getLeft = function() { return new sap.viz.ui5.types.Background_border_left(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Background_border.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getRight right}.
 * 
 * Settings for the right border
 * 
 * @returns {sap.viz.ui5.types.Background_border_right}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.getRight = function() { return new sap.viz.ui5.types.Background_border_right(); };

/**
 * Gets current value of property {@link #getStroke stroke}.
 * 
 * Settings for the color of the stroke.
 * 
 * Default value is <code>#d8d8d8</code>.
 * @returns {string} Value of property <code>stroke</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.getStroke = function() { return ""; };

/**
 * Gets current value of property {@link #getStrokeWidth strokeWidth}.
 * 
 * Settings for the width of the stroke.
 * 
 * Default value is <code>1</code>.
 * @returns {int} Value of property <code>strokeWidth</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.getStrokeWidth = function() { return 0; };

/**
 * Gets content of aggregation {@link #getTop top}.
 * 
 * Settings for the top border
 * 
 * @returns {sap.viz.ui5.types.Background_border_top}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.getTop = function() { return new sap.viz.ui5.types.Background_border_top(); };

/**
 * Sets the aggregated {@link #getBottom bottom}.
 * @param {sap.viz.ui5.types.Background_border_bottom} oBottom The bottom to set
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.setBottom = function(oBottom) { return new sap.viz.ui5.types.Background_border(); };

/**
 * Sets the aggregated {@link #getLeft left}.
 * @param {sap.viz.ui5.types.Background_border_left} oLeft The left to set
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.setLeft = function(oLeft) { return new sap.viz.ui5.types.Background_border(); };

/**
 * Sets the aggregated {@link #getRight right}.
 * @param {sap.viz.ui5.types.Background_border_right} oRight The right to set
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.setRight = function(oRight) { return new sap.viz.ui5.types.Background_border(); };

/**
 * Sets a new value for property {@link #getStroke stroke}.
 * 
 * Settings for the color of the stroke.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#d8d8d8</code>.
 * @param {string} sStroke New value for property <code>stroke</code>
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.setStroke = function(sStroke) { return new sap.viz.ui5.types.Background_border(); };

/**
 * Sets a new value for property {@link #getStrokeWidth strokeWidth}.
 * 
 * Settings for the width of the stroke.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {int} iStrokeWidth New value for property <code>strokeWidth</code>
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.setStrokeWidth = function(iStrokeWidth) { return new sap.viz.ui5.types.Background_border(); };

/**
 * Sets the aggregated {@link #getTop top}.
 * @param {sap.viz.ui5.types.Background_border_top} oTop The top to set
 * @returns {sap.viz.ui5.types.Background_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border.prototype.setTop = function(oTop) { return new sap.viz.ui5.types.Background_border(); };


// ---- sap.viz.ui5.types.Background_border_bottom --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Background_border_bottom
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the bottom border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Background_border_bottom = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Background_border_bottom with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_bottom.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Background_border_bottom.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_bottom.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_bottom.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Background_border_bottom} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_bottom.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Background_border_bottom(); };


// ---- sap.viz.ui5.types.Background_border_left --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Background_border_left
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the left border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Background_border_left = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Background_border_left with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_left.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Background_border_left.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_left.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_left.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Background_border_left} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_left.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Background_border_left(); };


// ---- sap.viz.ui5.types.Background_border_right --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Background_border_right
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the right border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Background_border_right = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Background_border_right with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_right.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Background_border_right.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_right.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_right.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Background_border_right} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_right.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Background_border_right(); };


// ---- sap.viz.ui5.types.Background_border_top --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Background_border_top
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the top border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Background_border_top = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Background_border_top with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_top.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Background_border_top.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Background_border_top.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_top.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Background_border_top} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Background_border_top.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Background_border_top(); };


// ---- sap.viz.ui5.types.Background_direction --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Background_direction.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Background_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Background_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Bar --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bar
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.Bar_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Bar_drawingEffect (default: normal)</li>
 * <li>{@link #getIsRoundCorner isRoundCorner} : boolean (default: false)</li>
 * <li>{@link #getImageFill imageFill} : boolean (default: false)</li>
 * <li>{@link #getImagePalette imagePalette} : string[] (default: ['http://www.sap.com/global/ui/images/global/sap-logo.png'])</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Bar_tooltip</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Bar_animation</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Bar
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bar = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Bar(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Bar(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Bar with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bar.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.Bar_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getAnimation = function() { return new sap.viz.ui5.types.Bar_animation(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Bar_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Bar_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets current value of property {@link #getImageFill imageFill}.
 * 
 * Set where the image fill is enabled.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>imageFill</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getImageFill = function() { return false; };

/**
 * Gets current value of property {@link #getImagePalette imagePalette}.
 * 
 * Set the images that fill the bars.
 * 
 * Default value is <code>['http://www.sap.com/global/ui/images/global/sap-logo.png']</code>.
 * @returns {string[]} Value of property <code>imagePalette</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getImagePalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isRoundCorner</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getIsRoundCorner = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bar.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bar.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Bar_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getOrientation = function() { return new sap.viz.ui5.types.Bar_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip related properties
 * 
 * @returns {sap.viz.ui5.types.Bar_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.getToolTip = function() { return new sap.viz.ui5.types.Bar_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Bar_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Bar_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getImageFill imageFill}.
 * 
 * Set where the image fill is enabled.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bImageFill New value for property <code>imageFill</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setImageFill = function(bImageFill) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getImagePalette imagePalette}.
 * 
 * Set the images that fill the bars.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['http://www.sap.com/global/ui/images/global/sap-logo.png']</code>.
 * @param {string[]} sImagePalette New value for property <code>imagePalette</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setImagePalette = function(sImagePalette) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsRoundCorner New value for property <code>isRoundCorner</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setIsRoundCorner = function(bIsRoundCorner) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Bar_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.Bar(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Bar_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Bar(); };


// ---- sap.viz.ui5.types.Bar_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bar_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bar_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Bar_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bar_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bar_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bar_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Bar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Bar_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Bar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Bar_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Bar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Bar_animation(); };


// ---- sap.viz.ui5.types.Bar_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Bar_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Bar_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Bar_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Bar_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bar_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip related properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bar_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Bar_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bar_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bar_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bar_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Bar_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bar_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Bar_tooltip(); };


// ---- sap.viz.ui5.types.Bubble --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bubble
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getShapePalette shapePalette} : string[] (default: ['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection'])</li>
 * <li>{@link #getMinMarkerSize minMarkerSize} : int</li>
 * <li>{@link #getMaxPriValue maxPriValue} : float (default: 0)</li>
 * <li>{@link #getMinPriValue minPriValue} : float (default: 0)</li>
 * <li>{@link #getMaxSecValue maxSecValue} : float (default: 0)</li>
 * <li>{@link #getMinSecValue minSecValue} : float (default: 0)</li>
 * <li>{@link #getMaxBubbleWidth maxBubbleWidth} : float (default: 0)</li>
 * <li>{@link #getMinBubbleWidth minBubbleWidth} : float (default: 0)</li>
 * <li>{@link #getMaxBubbleHeight maxBubbleHeight} : float (default: 0)</li>
 * <li>{@link #getMinBubbleHeight minBubbleHeight} : float (default: 0)</li>
 * <li>{@link #getTimeBased timeBased} : boolean (default: false)</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Bubble_drawingEffect (default: normal)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * <li>{@link #getShowNegativeValues showNegativeValues} : boolean (default: true)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Bubble_animation</li>
 * <li>{@link #getAxisTooltip axisTooltip} : sap.viz.ui5.types.Bubble_axisTooltip</li>
 * <li>{@link #getHoverline hoverline} : sap.viz.ui5.types.Bubble_hoverline</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Bubble
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bubble = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Bubble(); };

/**
 * Destroys the axisTooltip in the aggregation {@link #getAxisTooltip axisTooltip}.
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.destroyAxisTooltip = function() { return new sap.viz.ui5.types.Bubble(); };

/**
 * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.destroyHoverline = function() { return new sap.viz.ui5.types.Bubble(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Bubble with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in bubble and scatter charts
 * 
 * @returns {sap.viz.ui5.types.Bubble_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getAnimation = function() { return new sap.viz.ui5.types.Bubble_animation(); };

/**
 * Gets content of aggregation {@link #getAxisTooltip axisTooltip}.
 * 
 * Set tooltip related properties.
 * 
 * @returns {sap.viz.ui5.types.Bubble_axisTooltip}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getAxisTooltip = function() { return new sap.viz.ui5.types.Bubble_axisTooltip(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color of the bubbles
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the bubbles
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Bubble_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Bubble_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getHoverline hoverline}.
 * 
 * Settings for hoverline properties.
 * 
 * @returns {sap.viz.ui5.types.Bubble_hoverline}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getHoverline = function() { return new sap.viz.ui5.types.Bubble_hoverline(); };

/**
 * Gets current value of property {@link #getMaxBubbleHeight maxBubbleHeight}.
 * 
 * Set the max value of bubble height values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxBubbleHeight</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMaxBubbleHeight = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMaxBubbleWidth maxBubbleWidth}.
 * 
 * Set the max value of bubble width values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxBubbleWidth</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMaxBubbleWidth = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMaxPriValue maxPriValue}.
 * 
 * Set the max value of primary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxPriValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMaxPriValue = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMaxSecValue maxSecValue}.
 * 
 * Set the max value of secondary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxSecValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMaxSecValue = function() { return 0.0; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bubble.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getMinBubbleHeight minBubbleHeight}.
 * 
 * Set the minimum value of bubble height values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minBubbleHeight</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMinBubbleHeight = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMinBubbleWidth minBubbleWidth}.
 * 
 * Set the minimum value of bubble width values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minBubbleWidth</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMinBubbleWidth = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMinMarkerSize minMarkerSize}.
 * 
 * Set the minimum size of the data points
 * 
 * @returns {int} Value of property <code>minMarkerSize</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMinMarkerSize = function() { return 0; };

/**
 * Gets current value of property {@link #getMinPriValue minPriValue}.
 * 
 * Set the minimum value of primary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minPriValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMinPriValue = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMinSecValue minSecValue}.
 * 
 * Set the minimum value of secondary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minSecValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getMinSecValue = function() { return 0.0; };

/**
 * Gets current value of property {@link #getShapePalette shapePalette}.
 * 
 * Set the shape of the bubbles
 * 
 * Default value is <code>['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection']</code>.
 * @returns {string[]} Value of property <code>shapePalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getShapePalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getShowNegativeValues showNegativeValues}.
 * 
 * Show/hide the data of negetive value.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>showNegativeValues</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getShowNegativeValues = function() { return false; };

/**
 * Gets current value of property {@link #getTimeBased timeBased}.
 * 
 * Set whether it is time based scatter/bubble
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>timeBased</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.getTimeBased = function() { return false; };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Bubble_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets the aggregated {@link #getAxisTooltip axisTooltip}.
 * @param {sap.viz.ui5.types.Bubble_axisTooltip} oAxisTooltip The axisTooltip to set
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setAxisTooltip = function(oAxisTooltip) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color of the bubbles
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the bubbles
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Bubble_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets the aggregated {@link #getHoverline hoverline}.
 * @param {sap.viz.ui5.types.Bubble_hoverline} oHoverline The hoverline to set
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setHoverline = function(oHoverline) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMaxBubbleHeight maxBubbleHeight}.
 * 
 * Set the max value of bubble height values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxBubbleHeight New value for property <code>maxBubbleHeight</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMaxBubbleHeight = function(fMaxBubbleHeight) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMaxBubbleWidth maxBubbleWidth}.
 * 
 * Set the max value of bubble width values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxBubbleWidth New value for property <code>maxBubbleWidth</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMaxBubbleWidth = function(fMaxBubbleWidth) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMaxPriValue maxPriValue}.
 * 
 * Set the max value of primary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxPriValue New value for property <code>maxPriValue</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMaxPriValue = function(fMaxPriValue) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMaxSecValue maxSecValue}.
 * 
 * Set the max value of secondary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxSecValue New value for property <code>maxSecValue</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMaxSecValue = function(fMaxSecValue) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMinBubbleHeight minBubbleHeight}.
 * 
 * Set the minimum value of bubble height values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinBubbleHeight New value for property <code>minBubbleHeight</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMinBubbleHeight = function(fMinBubbleHeight) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMinBubbleWidth minBubbleWidth}.
 * 
 * Set the minimum value of bubble width values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinBubbleWidth New value for property <code>minBubbleWidth</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMinBubbleWidth = function(fMinBubbleWidth) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMinMarkerSize minMarkerSize}.
 * 
 * Set the minimum size of the data points
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iMinMarkerSize New value for property <code>minMarkerSize</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMinMarkerSize = function(iMinMarkerSize) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMinPriValue minPriValue}.
 * 
 * Set the minimum value of primary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinPriValue New value for property <code>minPriValue</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMinPriValue = function(fMinPriValue) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getMinSecValue minSecValue}.
 * 
 * Set the minimum value of secondary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinSecValue New value for property <code>minSecValue</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setMinSecValue = function(fMinSecValue) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getShapePalette shapePalette}.
 * 
 * Set the shape of the bubbles
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection']</code>.
 * @param {string[]} sShapePalette New value for property <code>shapePalette</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setShapePalette = function(sShapePalette) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getShowNegativeValues showNegativeValues}.
 * 
 * Show/hide the data of negetive value.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bShowNegativeValues New value for property <code>showNegativeValues</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setShowNegativeValues = function(bShowNegativeValues) { return new sap.viz.ui5.types.Bubble(); };

/**
 * Sets a new value for property {@link #getTimeBased timeBased}.
 * 
 * Set whether it is time based scatter/bubble
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bTimeBased New value for property <code>timeBased</code>
 * @returns {sap.viz.ui5.types.Bubble} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble.prototype.setTimeBased = function(bTimeBased) { return new sap.viz.ui5.types.Bubble(); };


// ---- sap.viz.ui5.types.Bubble_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bubble_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in bubble and scatter charts
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bubble_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Bubble_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bubble_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Bubble_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Bubble_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Bubble_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Bubble_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Bubble_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Bubble_animation(); };


// ---- sap.viz.ui5.types.Bubble_axisTooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bubble_axisTooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getFormatString formatString} : string[]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Set tooltip related properties.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Bubble_axisTooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
 * 
 * @returns {string[]} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip.prototype.getFormatString = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bubble_axisTooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * enabled/disabled tooltip.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string[]} sFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.Bubble_axisTooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip.prototype.setFormatString = function(sFormatString) { return new sap.viz.ui5.types.Bubble_axisTooltip(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * enabled/disabled tooltip.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Bubble_axisTooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_axisTooltip.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Bubble_axisTooltip(); };


// ---- sap.viz.ui5.types.Bubble_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Bubble_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Bubble_hoverline --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bubble_hoverline
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for hoverline properties.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bubble_hoverline = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Bubble_hoverline with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble_hoverline.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bubble_hoverline.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bubble_hoverline.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set to enabled/disabled hoverline or not.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_hoverline.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set to enabled/disabled hoverline or not.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Bubble_hoverline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_hoverline.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Bubble_hoverline(); };


// ---- sap.viz.ui5.types.Bullet --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bullet
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.Bullet_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#2479BC','#d6d6d6','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Bullet_drawingEffect (default: normal)</li>
 * <li>{@link #getIsRoundCorner isRoundCorner} : boolean (default: false)</li>
 * <li>{@link #getReferenceValuesColorPalette referenceValuesColorPalette} : string[] (default: ['#FCDCDA','#FEECDA','#DDF3E4'])</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Bullet_tooltip</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Bullet
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bullet = function(sId,mSettings) {};
/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Bullet(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Bullet with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bullet.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart.
 * 
 * Default value is <code>['#2479BC','#d6d6d6','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Bullet_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Bullet_drawingEffect(); };

/**
 * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isRoundCorner</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getIsRoundCorner = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bullet.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bullet.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Bullet_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getOrientation = function() { return new sap.viz.ui5.types.Bullet_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getReferenceValuesColorPalette referenceValuesColorPalette}.
 * 
 * Set the color palette reference value color in bullet chart.
 * 
 * Default value is <code>['#FCDCDA','#FEECDA','#DDF3E4']</code>.
 * @returns {string[]} Value of property <code>referenceValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getReferenceValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip related properties
 * 
 * @returns {sap.viz.ui5.types.Bullet_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.getToolTip = function() { return new sap.viz.ui5.types.Bullet_tooltip(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#2479BC','#d6d6d6','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Bullet_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsRoundCorner New value for property <code>isRoundCorner</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setIsRoundCorner = function(bIsRoundCorner) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Bullet_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets a new value for property {@link #getReferenceValuesColorPalette referenceValuesColorPalette}.
 * 
 * Set the color palette reference value color in bullet chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#FCDCDA','#FEECDA','#DDF3E4']</code>.
 * @param {string[]} sReferenceValuesColorPalette New value for property <code>referenceValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setReferenceValuesColorPalette = function(sReferenceValuesColorPalette) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.Bullet(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Bullet_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Bullet} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Bullet(); };


// ---- sap.viz.ui5.types.Bullet_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Bullet_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Bullet_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Bullet_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Bullet_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Bullet_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip related properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Bullet_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Bullet_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bullet_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Bullet_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Bullet_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Bullet_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Bullet_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Bullet_tooltip(); };


// ---- sap.viz.ui5.types.Combination --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.Combination_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Combination_drawingEffect (default: normal)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Combination_tooltip</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Combination_animation</li>
 * <li>{@link #getDataShape dataShape} : sap.viz.ui5.types.Combination_dataShape</li>
 * <li>{@link #getBar bar} : sap.viz.ui5.types.Combination_bar</li>
 * <li>{@link #getLine line} : sap.viz.ui5.types.Combination_line</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Combination
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Destroys the bar in the aggregation {@link #getBar bar}.
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.destroyBar = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Destroys the dataShape in the aggregation {@link #getDataShape dataShape}.
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.destroyDataShape = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Destroys the line in the aggregation {@link #getLine line}.
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.destroyLine = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Combination(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.Combination_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getAnimation = function() { return new sap.viz.ui5.types.Combination_animation(); };

/**
 * Gets content of aggregation {@link #getBar bar}.
 * 
 * Settings for bar properties
 * 
 * @returns {sap.viz.ui5.types.Combination_bar}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getBar = function() { return new sap.viz.ui5.types.Combination_bar(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getDataShape dataShape}.
 * 
 * Settings for the shape of data series
 * 
 * @returns {sap.viz.ui5.types.Combination_dataShape}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getDataShape = function() { return new sap.viz.ui5.types.Combination_dataShape(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Combination_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Combination_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getLine line}.
 * 
 * Settings for line properties
 * 
 * @returns {sap.viz.ui5.types.Combination_line}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getLine = function() { return new sap.viz.ui5.types.Combination_line(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Combination_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getOrientation = function() { return new sap.viz.ui5.types.Combination_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for the tooltip
 * 
 * @returns {sap.viz.ui5.types.Combination_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.getToolTip = function() { return new sap.viz.ui5.types.Combination_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Combination_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets the aggregated {@link #getBar bar}.
 * @param {sap.viz.ui5.types.Combination_bar} oBar The bar to set
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setBar = function(oBar) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets the aggregated {@link #getDataShape dataShape}.
 * @param {sap.viz.ui5.types.Combination_dataShape} oDataShape The dataShape to set
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setDataShape = function(oDataShape) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Combination_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets the aggregated {@link #getLine line}.
 * @param {sap.viz.ui5.types.Combination_line} oLine The line to set
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setLine = function(oLine) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Combination_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.Combination(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Combination_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Combination} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Combination(); };


// ---- sap.viz.ui5.types.Combination_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Combination_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Combination_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Combination_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Combination_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Combination_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Combination_animation(); };


// ---- sap.viz.ui5.types.Combination_bar --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination_bar
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getIsRoundCorner isRoundCorner} : boolean (default: false)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for bar properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination_bar = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination_bar with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_bar.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether the bars have rounded corners
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isRoundCorner</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_bar.prototype.getIsRoundCorner = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination_bar.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_bar.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether the bars have rounded corners
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsRoundCorner New value for property <code>isRoundCorner</code>
 * @returns {sap.viz.ui5.types.Combination_bar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_bar.prototype.setIsRoundCorner = function(bIsRoundCorner) { return new sap.viz.ui5.types.Combination_bar(); };


// ---- sap.viz.ui5.types.Combination_dataShape --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination_dataShape
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getPrimaryAxis primaryAxis} : string[] (default: ['bar','line','line'])</li>
 * <li>{@link #getSecondaryAxis secondaryAxis} : string[] (default: ['line','line','line'])</li>
 * <li>{@link #getSecondAxis secondAxis} : string[] (default: ['line','line','line'])</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the shape of data series
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination_dataShape = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination_dataShape with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_dataShape.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination_dataShape.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_dataShape.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPrimaryAxis primaryAxis}.
 * 
 * Set the shape of data series on the primary axis
 * 
 * Default value is <code>['bar','line','line']</code>.
 * @returns {string[]} Value of property <code>primaryAxis</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_dataShape.prototype.getPrimaryAxis = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryAxis secondaryAxis}.
 * 
 * Set the shape of data series on the secondary axis
 * 
 * Default value is <code>['line','line','line']</code>.
 * @returns {string[]} Value of property <code>secondaryAxis</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_dataShape.prototype.getSecondaryAxis = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondAxis secondAxis}.
 * 
 * Set the shape of data series on the secondary axis (Old version; still works)
 * 
 * Default value is <code>['line','line','line']</code>.
 * @returns {string[]} Value of property <code>secondAxis</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_dataShape.prototype.getSecondAxis = function() { return new Array(); };

/**
 * Sets a new value for property {@link #getPrimaryAxis primaryAxis}.
 * 
 * Set the shape of data series on the primary axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['bar','line','line']</code>.
 * @param {string[]} sPrimaryAxis New value for property <code>primaryAxis</code>
 * @returns {sap.viz.ui5.types.Combination_dataShape} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_dataShape.prototype.setPrimaryAxis = function(sPrimaryAxis) { return new sap.viz.ui5.types.Combination_dataShape(); };

/**
 * Sets a new value for property {@link #getSecondaryAxis secondaryAxis}.
 * 
 * Set the shape of data series on the secondary axis
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['line','line','line']</code>.
 * @param {string[]} sSecondaryAxis New value for property <code>secondaryAxis</code>
 * @returns {sap.viz.ui5.types.Combination_dataShape} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_dataShape.prototype.setSecondaryAxis = function(sSecondaryAxis) { return new sap.viz.ui5.types.Combination_dataShape(); };

/**
 * Sets a new value for property {@link #getSecondAxis secondAxis}.
 * 
 * Set the shape of data series on the secondary axis (Old version; still works)
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['line','line','line']</code>.
 * @param {string[]} sSecondAxis New value for property <code>secondAxis</code>
 * @returns {sap.viz.ui5.types.Combination_dataShape} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_dataShape.prototype.setSecondAxis = function(sSecondAxis) { return new sap.viz.ui5.types.Combination_dataShape(); };


// ---- sap.viz.ui5.types.Combination_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Combination_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Combination_line --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination_line
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getWidth width} : int (default: 2)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getMarker marker} : sap.viz.ui5.types.Combination_line_marker</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for line properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination_line = function(sId,mSettings) {};
/**
 * Destroys the marker in the aggregation {@link #getMarker marker}.
 * @returns {sap.viz.ui5.types.Combination_line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line.prototype.destroyMarker = function() { return new sap.viz.ui5.types.Combination_line(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination_line with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_line.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getMarker marker}.
 * 
 * Settings for the visual markers for data points
 * 
 * @returns {sap.viz.ui5.types.Combination_line_marker}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line.prototype.getMarker = function() { return new sap.viz.ui5.types.Combination_line_marker(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination_line.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_line.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getWidth width}.
 * 
 * Set the width of lines, ranging from '1' to '7'. If you enter a value outside the range, the line width will default to '2'.
 * 
 * Default value is <code>2</code>.
 * @returns {int} Value of property <code>width</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line.prototype.getWidth = function() { return 0; };

/**
 * Sets the aggregated {@link #getMarker marker}.
 * @param {sap.viz.ui5.types.Combination_line_marker} oMarker The marker to set
 * @returns {sap.viz.ui5.types.Combination_line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line.prototype.setMarker = function(oMarker) { return new sap.viz.ui5.types.Combination_line(); };

/**
 * Sets a new value for property {@link #getWidth width}.
 * 
 * Set the width of lines, ranging from '1' to '7'. If you enter a value outside the range, the line width will default to '2'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>2</code>.
 * @param {int} iWidth New value for property <code>width</code>
 * @returns {sap.viz.ui5.types.Combination_line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line.prototype.setWidth = function(iWidth) { return new sap.viz.ui5.types.Combination_line(); };


// ---- sap.viz.ui5.types.Combination_line_marker --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination_line_marker
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getShape shape} : string[] (default: ['circle'])</li>
 * <li>{@link #getSize size} : int (default: 6)</li>
 * <li>{@link #getNumber number} : int</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the visual markers for data points
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination_line_marker = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination_line_marker with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_line_marker.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination_line_marker.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_line_marker.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getNumber number}.
 * 
 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
 * 
 * @returns {int} Value of property <code>number</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.getNumber = function() { return 0; };

/**
 * Gets current value of property {@link #getShape shape}.
 * 
 * Set the shape of the data point markers
 * 
 * Default value is <code>['circle']</code>.
 * @returns {string[]} Value of property <code>shape</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.getShape = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSize size}.
 * 
 * Set the size of the data point markers, ranging from '4' to '32'. If you enter a value outside the range, the size defaults to '6'.
 * 
 * Default value is <code>6</code>.
 * @returns {int} Value of property <code>size</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.getSize = function() { return 0; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the data point markers
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getNumber number}.
 * 
 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iNumber New value for property <code>number</code>
 * @returns {sap.viz.ui5.types.Combination_line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.setNumber = function(iNumber) { return new sap.viz.ui5.types.Combination_line_marker(); };

/**
 * Sets a new value for property {@link #getShape shape}.
 * 
 * Set the shape of the data point markers
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['circle']</code>.
 * @param {string[]} sShape New value for property <code>shape</code>
 * @returns {sap.viz.ui5.types.Combination_line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.setShape = function(sShape) { return new sap.viz.ui5.types.Combination_line_marker(); };

/**
 * Sets a new value for property {@link #getSize size}.
 * 
 * Set the size of the data point markers, ranging from '4' to '32'. If you enter a value outside the range, the size defaults to '6'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>6</code>.
 * @param {int} iSize New value for property <code>size</code>
 * @returns {sap.viz.ui5.types.Combination_line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.setSize = function(iSize) { return new sap.viz.ui5.types.Combination_line_marker(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the data point markers
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Combination_line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_line_marker.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Combination_line_marker(); };


// ---- sap.viz.ui5.types.Combination_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Combination_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Combination_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Combination_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the tooltip
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Combination_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Combination_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Combination_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Combination_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Combination_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Combination_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Combination_tooltip(); };


// ---- sap.viz.ui5.types.controller.Interaction --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.controller.Interaction
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getSupportedEventNames supportedEventNames} : string[] (default: ['mouseup','mousedown','mousemove','mouseout','mouseover','touchstart'])</li>
 * <li>{@link #getEnableMouseMove enableMouseMove} : boolean (default: true)</li>
 * <li>{@link #getEnableMouseOver enableMouseOver} : boolean (default: true)</li>
 * <li>{@link #getEnableMouseOut enableMouseOut} : boolean (default: true)</li>
 * <li>{@link #getSupportLassoEvent supportLassoEvent} : boolean (default: true)</li>
 * <li>{@link #getHoldSelection holdSelection} : boolean (default: false)</li>
 * <li>{@link #getPreserveSelectionWhenDragging preserveSelectionWhenDragging} : boolean (default: false)</li>
 * <li>{@link #getDecorations decorations} : any</li>
 * <li>{@link #getTriggers triggers} : any</li>
 * <li>{@link #getHandlers handlers} : any</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getSelectability selectability} : sap.viz.ui5.types.controller.Interaction_selectability</li>
 * <li>{@link #getPan pan} : sap.viz.ui5.types.controller.Interaction_pan</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.controller.Interaction
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.controller.Interaction = function(sId,mSettings) {};
/**
 * Destroys the pan in the aggregation {@link #getPan pan}.
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.destroyPan = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Destroys the selectability in the aggregation {@link #getSelectability selectability}.
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.destroySelectability = function() { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.controller.Interaction with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.controller.Interaction.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDecorations decorations}.
 * 
 * Set decorations relating to interaction. Each item 
 *                 that is an object of {name: 'decoration name', fn: 'decoration callback function'} is a decoration. 
 *                 Currently two decorations are supported: showDetail and hideDetail. 
 *                 These two decorations can be used to create a user-defined tooltip. 
 *                     
 * If these 2 decorations are used, the default tooltip is not used, 
 *                 and the user should implement a custom tooltip. 
 *                 The showDetail decoration is called when the tooltip is shown, 
 *                 and the hideDetail decoration is called when the tooltip is hidden.
 *                     
 * The arguments of showDetail are one object of {mode: 'tooltip mode', 
 *                 data: 'data of hovering selected data point', position: 'mouse position', 
 *                 container: 'chart container dom element', selectedNumber: 'number of selected data points'}. 
 *                 'tooltip mode' is either 'infoMode' or 'actionMode'. Hovering over an unselected data point displays the infoMode tooltip, 
 *                 while hovering over a selected data point displays the actionMode tooltip.
 *                 'data' is an array of dimensions and measures, where each item is an object of 
 *                 {name: 'dimension name or measure name', value: 'dimension member or measure value',
 *                 type: 'literal string of dimension or measure'}. For instance, 
 *                 {name: 'Country', value: 'China', type: 'dimension'}, or 
 *                 {name: 'Profit', value: 159, type: 'measure'}.
 *                     
 * The arguments of hideDetail are a string representing tooltip mode, 
 *                 i.e. what kind of tooltip should be hidden.
 * 
 * @returns {any} Value of property <code>decorations</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getDecorations = function() { return null; };

/**
 * Gets current value of property {@link #getEnableMouseMove enableMouseMove}.
 * 
 * Set whether mouse move is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enableMouseMove</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getEnableMouseMove = function() { return false; };

/**
 * Gets current value of property {@link #getEnableMouseOut enableMouseOut}.
 * 
 * Set whether mouse out is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enableMouseOut</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getEnableMouseOut = function() { return false; };

/**
 * Gets current value of property {@link #getEnableMouseOver enableMouseOver}.
 * 
 * Set whether mouse over is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enableMouseOver</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getEnableMouseOver = function() { return false; };

/**
 * Gets current value of property {@link #getHandlers handlers}.
 * 
 * Set handlers for behavior decration.
 * 
 * @returns {any} Value of property <code>handlers</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getHandlers = function() { return null; };

/**
 * Gets current value of property {@link #getHoldSelection holdSelection}.
 * 
 * Set whether hold selection is enabled
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>holdSelection</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getHoldSelection = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.controller.Interaction.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.controller.Interaction.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets content of aggregation {@link #getPan pan}.
 * 
 * add documentation for aggregation pan
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction_pan}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getPan = function() { return new sap.viz.ui5.types.controller.Interaction_pan(); };

/**
 * Gets current value of property {@link #getPreserveSelectionWhenDragging preserveSelectionWhenDragging}.
 * 
 * Set whether preserve selection when dragging is enabled
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>preserveSelectionWhenDragging</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getPreserveSelectionWhenDragging = function() { return false; };

/**
 * Gets content of aggregation {@link #getSelectability selectability}.
 * 
 * Settings for selectability
 * 
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getSelectability = function() { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Gets current value of property {@link #getSupportedEventNames supportedEventNames}.
 * 
 * Set supported event names
 * 
 * Default value is <code>['mouseup','mousedown','mousemove','mouseout','mouseover','touchstart']</code>.
 * @returns {string[]} Value of property <code>supportedEventNames</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getSupportedEventNames = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSupportLassoEvent supportLassoEvent}.
 * 
 * Set whether support lasso event is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>supportLassoEvent</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getSupportLassoEvent = function() { return false; };

/**
 * Gets current value of property {@link #getTriggers triggers}.
 * 
 * Set triggers for behavior decration.
 * 
 * @returns {any} Value of property <code>triggers</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.getTriggers = function() { return null; };

/**
 * Sets a new value for property {@link #getDecorations decorations}.
 * 
 * Set decorations relating to interaction. Each item 
 *                 that is an object of {name: 'decoration name', fn: 'decoration callback function'} is a decoration. 
 *                 Currently two decorations are supported: showDetail and hideDetail. 
 *                 These two decorations can be used to create a user-defined tooltip. 
 *                     
 * If these 2 decorations are used, the default tooltip is not used, 
 *                 and the user should implement a custom tooltip. 
 *                 The showDetail decoration is called when the tooltip is shown, 
 *                 and the hideDetail decoration is called when the tooltip is hidden.
 *                     
 * The arguments of showDetail are one object of {mode: 'tooltip mode', 
 *                 data: 'data of hovering selected data point', position: 'mouse position', 
 *                 container: 'chart container dom element', selectedNumber: 'number of selected data points'}. 
 *                 'tooltip mode' is either 'infoMode' or 'actionMode'. Hovering over an unselected data point displays the infoMode tooltip, 
 *                 while hovering over a selected data point displays the actionMode tooltip.
 *                 'data' is an array of dimensions and measures, where each item is an object of 
 *                 {name: 'dimension name or measure name', value: 'dimension member or measure value',
 *                 type: 'literal string of dimension or measure'}. For instance, 
 *                 {name: 'Country', value: 'China', type: 'dimension'}, or 
 *                 {name: 'Profit', value: 159, type: 'measure'}.
 *                     
 * The arguments of hideDetail are a string representing tooltip mode, 
 *                 i.e. what kind of tooltip should be hidden.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oDecorations New value for property <code>decorations</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setDecorations = function(oDecorations) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getEnableMouseMove enableMouseMove}.
 * 
 * Set whether mouse move is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnableMouseMove New value for property <code>enableMouseMove</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setEnableMouseMove = function(bEnableMouseMove) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getEnableMouseOut enableMouseOut}.
 * 
 * Set whether mouse out is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnableMouseOut New value for property <code>enableMouseOut</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setEnableMouseOut = function(bEnableMouseOut) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getEnableMouseOver enableMouseOver}.
 * 
 * Set whether mouse over is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnableMouseOver New value for property <code>enableMouseOver</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setEnableMouseOver = function(bEnableMouseOver) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getHandlers handlers}.
 * 
 * Set handlers for behavior decration.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oHandlers New value for property <code>handlers</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setHandlers = function(oHandlers) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getHoldSelection holdSelection}.
 * 
 * Set whether hold selection is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bHoldSelection New value for property <code>holdSelection</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setHoldSelection = function(bHoldSelection) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets the aggregated {@link #getPan pan}.
 * @param {sap.viz.ui5.types.controller.Interaction_pan} oPan The pan to set
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setPan = function(oPan) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getPreserveSelectionWhenDragging preserveSelectionWhenDragging}.
 * 
 * Set whether preserve selection when dragging is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bPreserveSelectionWhenDragging New value for property <code>preserveSelectionWhenDragging</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setPreserveSelectionWhenDragging = function(bPreserveSelectionWhenDragging) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets the aggregated {@link #getSelectability selectability}.
 * @param {sap.viz.ui5.types.controller.Interaction_selectability} oSelectability The selectability to set
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setSelectability = function(oSelectability) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getSupportedEventNames supportedEventNames}.
 * 
 * Set supported event names
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['mouseup','mousedown','mousemove','mouseout','mouseover','touchstart']</code>.
 * @param {string[]} sSupportedEventNames New value for property <code>supportedEventNames</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setSupportedEventNames = function(sSupportedEventNames) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getSupportLassoEvent supportLassoEvent}.
 * 
 * Set whether support lasso event is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bSupportLassoEvent New value for property <code>supportLassoEvent</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setSupportLassoEvent = function(bSupportLassoEvent) { return new sap.viz.ui5.types.controller.Interaction(); };

/**
 * Sets a new value for property {@link #getTriggers triggers}.
 * 
 * Set triggers for behavior decration.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oTriggers New value for property <code>triggers</code>
 * @returns {sap.viz.ui5.types.controller.Interaction} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction.prototype.setTriggers = function(oTriggers) { return new sap.viz.ui5.types.controller.Interaction(); };


// ---- sap.viz.ui5.types.controller.Interaction_pan --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.controller.Interaction_pan
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnable enable} : boolean (default: true)</li>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.controller.Interaction_pan_orientation (default: both)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Structured Type sap.viz.ui5.types.controller.Interaction_pan
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.controller.Interaction_pan with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnable enable}.
 * 
 * Enable/disable pan
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enable</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan.prototype.getEnable = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.controller.Interaction_pan.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set orientation of pan
 * 
 * Default value is <code>both</code>.
 * @returns {sap.viz.ui5.types.controller.Interaction_pan_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan.prototype.getOrientation = function() { return new sap.viz.ui5.types.controller.Interaction_pan_orientation(); };

/**
 * Sets a new value for property {@link #getEnable enable}.
 * 
 * Enable/disable pan
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnable New value for property <code>enable</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_pan} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan.prototype.setEnable = function(bEnable) { return new sap.viz.ui5.types.controller.Interaction_pan(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set orientation of pan
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>both</code>.
 * @param {sap.viz.ui5.types.controller.Interaction_pan_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_pan} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.controller.Interaction_pan(); };


// ---- sap.viz.ui5.types.controller.Interaction_pan_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.controller.Interaction_pan_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.controller.Interaction_selectability --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.controller.Interaction_selectability
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getMode mode} : sap.viz.ui5.types.controller.Interaction_selectability_mode (default: inclusive)</li>
 * <li>{@link #getAxisLabelSelection axisLabelSelection} : boolean (default: true)</li>
 * <li>{@link #getLegendSelection legendSelection} : boolean (default: true)</li>
 * <li>{@link #getPlotLassoSelection plotLassoSelection} : boolean (default: true)</li>
 * <li>{@link #getPlotStdSelection plotStdSelection} : boolean (default: true)</li>
 * <li>{@link #getLassoWithCtrlKey lassoWithCtrlKey} : boolean (default: false)</li>
 * <li>{@link #getDataPointsCacheable dataPointsCacheable} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for selectability
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.controller.Interaction_selectability with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getAxisLabelSelection axisLabelSelection}.
 * 
 * Set whether axis labels can be selected
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>axisLabelSelection</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getAxisLabelSelection = function() { return false; };

/**
 * Gets current value of property {@link #getDataPointsCacheable dataPointsCacheable}.
 * 
 * Set whether data points can be cached. If it's true, data points might be cached by Interaction for better performance.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataPointsCacheable</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getDataPointsCacheable = function() { return false; };

/**
 * Gets current value of property {@link #getLassoWithCtrlKey lassoWithCtrlKey}.
 * 
 * Set whether the user must hold the ctrl key to use lasso selection
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>lassoWithCtrlKey</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getLassoWithCtrlKey = function() { return false; };

/**
 * Gets current value of property {@link #getLegendSelection legendSelection}.
 * 
 * Set whether the legend can be selected
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>legendSelection</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getLegendSelection = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.controller.Interaction_selectability.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getMode mode}.
 * 
 * Set the selection mode. If this value is set to 'exclusive' or 'single', only one set of data points can be selected at once. If this value is set to 'inclusive' or 'multiple', multiple sets of data points can be selected at once. If this value is set to 'none', no sets of data points can be selected. The values 'single' and 'multiple' are deprecated; please remove them from your chart.
 * 
 * Default value is <code>inclusive</code>.
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability_mode} Value of property <code>mode</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getMode = function() { return new sap.viz.ui5.types.controller.Interaction_selectability_mode(); };

/**
 * Gets current value of property {@link #getPlotLassoSelection plotLassoSelection}.
 * 
 * Set whether lasso selection can be used in the plot area
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>plotLassoSelection</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getPlotLassoSelection = function() { return false; };

/**
 * Gets current value of property {@link #getPlotStdSelection plotStdSelection}.
 * 
 * Set whether selection can be done in the plot area by clicking and tapping
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>plotStdSelection</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.getPlotStdSelection = function() { return false; };

/**
 * Sets a new value for property {@link #getAxisLabelSelection axisLabelSelection}.
 * 
 * Set whether axis labels can be selected
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bAxisLabelSelection New value for property <code>axisLabelSelection</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setAxisLabelSelection = function(bAxisLabelSelection) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Sets a new value for property {@link #getDataPointsCacheable dataPointsCacheable}.
 * 
 * Set whether data points can be cached. If it's true, data points might be cached by Interaction for better performance.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataPointsCacheable New value for property <code>dataPointsCacheable</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setDataPointsCacheable = function(bDataPointsCacheable) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Sets a new value for property {@link #getLassoWithCtrlKey lassoWithCtrlKey}.
 * 
 * Set whether the user must hold the ctrl key to use lasso selection
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bLassoWithCtrlKey New value for property <code>lassoWithCtrlKey</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setLassoWithCtrlKey = function(bLassoWithCtrlKey) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Sets a new value for property {@link #getLegendSelection legendSelection}.
 * 
 * Set whether the legend can be selected
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bLegendSelection New value for property <code>legendSelection</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setLegendSelection = function(bLegendSelection) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Sets a new value for property {@link #getMode mode}.
 * 
 * Set the selection mode. If this value is set to 'exclusive' or 'single', only one set of data points can be selected at once. If this value is set to 'inclusive' or 'multiple', multiple sets of data points can be selected at once. If this value is set to 'none', no sets of data points can be selected. The values 'single' and 'multiple' are deprecated; please remove them from your chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>inclusive</code>.
 * @param {sap.viz.ui5.types.controller.Interaction_selectability_mode} sMode New value for property <code>mode</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setMode = function(sMode) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Sets a new value for property {@link #getPlotLassoSelection plotLassoSelection}.
 * 
 * Set whether lasso selection can be used in the plot area
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bPlotLassoSelection New value for property <code>plotLassoSelection</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setPlotLassoSelection = function(bPlotLassoSelection) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };

/**
 * Sets a new value for property {@link #getPlotStdSelection plotStdSelection}.
 * 
 * Set whether selection can be done in the plot area by clicking and tapping
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bPlotStdSelection New value for property <code>plotStdSelection</code>
 * @returns {sap.viz.ui5.types.controller.Interaction_selectability} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability.prototype.setPlotStdSelection = function(bPlotStdSelection) { return new sap.viz.ui5.types.controller.Interaction_selectability(); };


// ---- sap.viz.ui5.types.controller.Interaction_selectability_mode --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.controller.Interaction_selectability_mode.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Datalabel --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Datalabel
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: false)</li>
 * <li>{@link #getHideWhenOverlap hideWhenOverlap} : boolean (default: true)</li>
 * <li>{@link #getIsDonut isDonut} : boolean (default: false)</li>
 * <li>{@link #getType type} : string (default: value)</li>
 * <li>{@link #getAutomaticInOutside automaticInOutside} : boolean (default: true)</li>
 * <li>{@link #getShowZero showZero} : boolean (default: true)</li>
 * <li>{@link #getIsGeoChart isGeoChart} : boolean (default: false)</li>
 * <li>{@link #getIsBubbleChart isBubbleChart} : boolean (default: false)</li>
 * <li>{@link #getIsStackMode isStackMode} : boolean (default: false)</li>
 * <li>{@link #getIsPercentMode isPercentMode} : boolean (default: false)</li>
 * <li>{@link #getPositionPreference positionPreference} : boolean (default: false)</li>
 * <li>{@link #getOutsideVisible outsideVisible} : boolean (default: true)</li>
 * <li>{@link #getOutsidePosition outsidePosition} : sap.viz.ui5.types.Datalabel_outsidePosition (default: up)</li>
 * <li>{@link #getPaintingMode paintingMode} : sap.viz.ui5.types.Datalabel_paintingMode (default: rectCoordinate)</li>
 * <li>{@link #getPosition position} : sap.viz.ui5.types.Datalabel_position (default: inside)</li>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.Datalabel_orientation (default: vertical)</li>
 * <li>{@link #getRespectShapeWidth respectShapeWidth} : boolean (default: false)</li>
 * <li>{@link #getFormatString formatString} : any[]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Datalabel
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Datalabel = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Datalabel with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datalabel.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getAutomaticInOutside automaticInOutside}.
 * 
 * If set to 'true', the data labels will be automatically placed outside when the data label position property is inside, and vice versa
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>automaticInOutside</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getAutomaticInOutside = function() { return false; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set the format strings for the data labels. For dual axis charts, the first array is applied to the primary axis and the second array is applied to the second axis. If you enter fewer format strings into an array than there are measures in the respective axis, then the last format string is applied to all remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The following is a simple example: [["0.00%"],["0.00%"]].
 * 
 * @returns {any[]} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getFormatString = function() { return new Array(); };

/**
 * Gets current value of property {@link #getHideWhenOverlap hideWhenOverlap}.
 * 
 * Always show all data labels even they are overlapped
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>hideWhenOverlap</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getHideWhenOverlap = function() { return false; };

/**
 * Gets current value of property {@link #getIsBubbleChart isBubbleChart}.
 * 
 * Set whether the chart is a bubble chart
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isBubbleChart</code>
 * 
 * @deprecated Since version 1.22. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getIsBubbleChart = function() { return false; };

/**
 * Gets current value of property {@link #getIsDonut isDonut}.
 * 
 * Set whether the chart is a donut chart. Use only for donut charts.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isDonut</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getIsDonut = function() { return false; };

/**
 * Gets current value of property {@link #getIsGeoChart isGeoChart}.
 * 
 * Set whether the chart is a geo chart
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isGeoChart</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getIsGeoChart = function() { return false; };

/**
 * Gets current value of property {@link #getIsPercentMode isPercentMode}.
 * 
 * Set whether the chart is a percent chart. Set for percent chart only.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isPercentMode</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getIsPercentMode = function() { return false; };

/**
 * Gets current value of property {@link #getIsStackMode isStackMode}.
 * 
 * Set whether the chart is a stack chart. Set for stack chart only.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isStackMode</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getIsStackMode = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Datalabel.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datalabel.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set orientation of data labels
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Datalabel_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getOrientation = function() { return new sap.viz.ui5.types.Datalabel_orientation(); };

/**
 * Gets current value of property {@link #getOutsidePosition outsidePosition}.
 * 
 * If set to 'true', the data label is positioned above the element when it is outside
 * 
 * Default value is <code>up</code>.
 * @returns {sap.viz.ui5.types.Datalabel_outsidePosition} Value of property <code>outsidePosition</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getOutsidePosition = function() { return new sap.viz.ui5.types.Datalabel_outsidePosition(); };

/**
 * Gets current value of property {@link #getOutsideVisible outsideVisible}.
 * 
 * If set to 'true', the data label is visible when it is outside
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>outsideVisible</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getOutsideVisible = function() { return false; };

/**
 * Gets current value of property {@link #getPaintingMode paintingMode}.
 * 
 * Set painting mode of data labels
 * 
 * Default value is <code>rectCoordinate</code>.
 * @returns {sap.viz.ui5.types.Datalabel_paintingMode} Value of property <code>paintingMode</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getPaintingMode = function() { return new sap.viz.ui5.types.Datalabel_paintingMode(); };

/**
 * Gets current value of property {@link #getPosition position}.
 * 
 * Set position of data labels
 * 
 * Default value is <code>inside</code>.
 * @returns {sap.viz.ui5.types.Datalabel_position} Value of property <code>position</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getPosition = function() { return new sap.viz.ui5.types.Datalabel_position(); };

/**
 * Gets current value of property {@link #getPositionPreference positionPreference}.
 * 
 * If set to 'true', the data label position is defined by the property 'outsidePosition', regardless of whether the data label value is negative
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>positionPreference</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getPositionPreference = function() { return false; };

/**
 * Gets current value of property {@link #getRespectShapeWidth respectShapeWidth}.
 * 
 * If set to 'true', the data label is automatically hidden when bubble width isn't enough to show the whole label in single bubble chart.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>respectShapeWidth</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getRespectShapeWidth = function() { return false; };

/**
 * Gets current value of property {@link #getShowZero showZero}.
 * 
 * If set to 'true', the value zero is shown in the data labels
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>showZero</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getShowZero = function() { return false; };

/**
 * Gets current value of property {@link #getType type}.
 * 
 * Set the type of label
 * 
 * Default value is <code>value</code>.
 * @returns {string} Value of property <code>type</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getType = function() { return ""; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set whether the data labels are visible
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getAutomaticInOutside automaticInOutside}.
 * 
 * If set to 'true', the data labels will be automatically placed outside when the data label position property is inside, and vice versa
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bAutomaticInOutside New value for property <code>automaticInOutside</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setAutomaticInOutside = function(bAutomaticInOutside) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set the format strings for the data labels. For dual axis charts, the first array is applied to the primary axis and the second array is applied to the second axis. If you enter fewer format strings into an array than there are measures in the respective axis, then the last format string is applied to all remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The following is a simple example: [["0.00%"],["0.00%"]].
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any[]} sFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setFormatString = function(sFormatString) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getHideWhenOverlap hideWhenOverlap}.
 * 
 * Always show all data labels even they are overlapped
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bHideWhenOverlap New value for property <code>hideWhenOverlap</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setHideWhenOverlap = function(bHideWhenOverlap) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getIsBubbleChart isBubbleChart}.
 * 
 * Set whether the chart is a bubble chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsBubbleChart New value for property <code>isBubbleChart</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.22. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setIsBubbleChart = function(bIsBubbleChart) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getIsDonut isDonut}.
 * 
 * Set whether the chart is a donut chart. Use only for donut charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsDonut New value for property <code>isDonut</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setIsDonut = function(bIsDonut) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getIsGeoChart isGeoChart}.
 * 
 * Set whether the chart is a geo chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsGeoChart New value for property <code>isGeoChart</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setIsGeoChart = function(bIsGeoChart) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getIsPercentMode isPercentMode}.
 * 
 * Set whether the chart is a percent chart. Set for percent chart only.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsPercentMode New value for property <code>isPercentMode</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setIsPercentMode = function(bIsPercentMode) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getIsStackMode isStackMode}.
 * 
 * Set whether the chart is a stack chart. Set for stack chart only.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsStackMode New value for property <code>isStackMode</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setIsStackMode = function(bIsStackMode) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set orientation of data labels
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Datalabel_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getOutsidePosition outsidePosition}.
 * 
 * If set to 'true', the data label is positioned above the element when it is outside
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>up</code>.
 * @param {sap.viz.ui5.types.Datalabel_outsidePosition} sOutsidePosition New value for property <code>outsidePosition</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setOutsidePosition = function(sOutsidePosition) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getOutsideVisible outsideVisible}.
 * 
 * If set to 'true', the data label is visible when it is outside
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bOutsideVisible New value for property <code>outsideVisible</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setOutsideVisible = function(bOutsideVisible) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getPaintingMode paintingMode}.
 * 
 * Set painting mode of data labels
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>rectCoordinate</code>.
 * @param {sap.viz.ui5.types.Datalabel_paintingMode} sPaintingMode New value for property <code>paintingMode</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setPaintingMode = function(sPaintingMode) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getPosition position}.
 * 
 * Set position of data labels
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>inside</code>.
 * @param {sap.viz.ui5.types.Datalabel_position} sPosition New value for property <code>position</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setPosition = function(sPosition) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getPositionPreference positionPreference}.
 * 
 * If set to 'true', the data label position is defined by the property 'outsidePosition', regardless of whether the data label value is negative
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bPositionPreference New value for property <code>positionPreference</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setPositionPreference = function(bPositionPreference) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getRespectShapeWidth respectShapeWidth}.
 * 
 * If set to 'true', the data label is automatically hidden when bubble width isn't enough to show the whole label in single bubble chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bRespectShapeWidth New value for property <code>respectShapeWidth</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setRespectShapeWidth = function(bRespectShapeWidth) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getShowZero showZero}.
 * 
 * If set to 'true', the value zero is shown in the data labels
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bShowZero New value for property <code>showZero</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setShowZero = function(bShowZero) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getType type}.
 * 
 * Set the type of label
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>value</code>.
 * @param {string} sType New value for property <code>type</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setType = function(sType) { return new sap.viz.ui5.types.Datalabel(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set whether the data labels are visible
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Datalabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Datalabel(); };


// ---- sap.viz.ui5.types.Datalabel_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Datalabel_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Datalabel_outsidePosition --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Datalabel_outsidePosition.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Datalabel_paintingMode --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Datalabel_paintingMode.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Datalabel_position --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Datalabel_position.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Datatransform --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Datatransform
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getAutoBinning autoBinning} : sap.viz.ui5.types.Datatransform_autoBinning</li>
 * <li>{@link #getDataSampling dataSampling} : sap.viz.ui5.types.Datatransform_dataSampling</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Datatransform
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Datatransform = function(sId,mSettings) {};
/**
 * Destroys the autoBinning in the aggregation {@link #getAutoBinning autoBinning}.
 * @returns {sap.viz.ui5.types.Datatransform} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform.prototype.destroyAutoBinning = function() { return new sap.viz.ui5.types.Datatransform(); };

/**
 * Destroys the dataSampling in the aggregation {@link #getDataSampling dataSampling}.
 * @returns {sap.viz.ui5.types.Datatransform} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform.prototype.destroyDataSampling = function() { return new sap.viz.ui5.types.Datatransform(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Datatransform with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAutoBinning autoBinning}.
 * 
 * Settings for the auto-binning algorithm
 * 
 * @returns {sap.viz.ui5.types.Datatransform_autoBinning}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform.prototype.getAutoBinning = function() { return new sap.viz.ui5.types.Datatransform_autoBinning(); };

/**
 * Gets content of aggregation {@link #getDataSampling dataSampling}.
 * 
 * Settings for the data sampling algorithm
 * 
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform.prototype.getDataSampling = function() { return new sap.viz.ui5.types.Datatransform_dataSampling(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Datatransform.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets the aggregated {@link #getAutoBinning autoBinning}.
 * @param {sap.viz.ui5.types.Datatransform_autoBinning} oAutoBinning The autoBinning to set
 * @returns {sap.viz.ui5.types.Datatransform} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform.prototype.setAutoBinning = function(oAutoBinning) { return new sap.viz.ui5.types.Datatransform(); };

/**
 * Sets the aggregated {@link #getDataSampling dataSampling}.
 * @param {sap.viz.ui5.types.Datatransform_dataSampling} oDataSampling The dataSampling to set
 * @returns {sap.viz.ui5.types.Datatransform} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform.prototype.setDataSampling = function(oDataSampling) { return new sap.viz.ui5.types.Datatransform(); };


// ---- sap.viz.ui5.types.Datatransform_autoBinning --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Datatransform_autoBinning
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnable enable} : boolean (default: false)</li>
 * <li>{@link #getBinNumber binNumber} : int (default: 10)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the auto-binning algorithm
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Datatransform_autoBinning with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getBinNumber binNumber}.
 * 
 * Set the bin number.
 * 
 * Default value is <code>10</code>.
 * @returns {int} Value of property <code>binNumber</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning.prototype.getBinNumber = function() { return 0; };

/**
 * Gets current value of property {@link #getEnable enable}.
 * 
 * Set whether data auto-binning is enabled.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>enable</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning.prototype.getEnable = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Datatransform_autoBinning.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getBinNumber binNumber}.
 * 
 * Set the bin number.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>10</code>.
 * @param {int} iBinNumber New value for property <code>binNumber</code>
 * @returns {sap.viz.ui5.types.Datatransform_autoBinning} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning.prototype.setBinNumber = function(iBinNumber) { return new sap.viz.ui5.types.Datatransform_autoBinning(); };

/**
 * Sets a new value for property {@link #getEnable enable}.
 * 
 * Set whether data auto-binning is enabled.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bEnable New value for property <code>enable</code>
 * @returns {sap.viz.ui5.types.Datatransform_autoBinning} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_autoBinning.prototype.setEnable = function(bEnable) { return new sap.viz.ui5.types.Datatransform_autoBinning(); };


// ---- sap.viz.ui5.types.Datatransform_dataSampling --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Datatransform_dataSampling
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnable enable} : boolean (default: false)</li>
 * <li>{@link #getSizeFactor sizeFactor} : int (default: 1)</li>
 * <li>{@link #getNumberPrecondition numberPrecondition} : int (default: 3000)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getGrid grid} : sap.viz.ui5.types.Datatransform_dataSampling_grid</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the data sampling algorithm
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling = function(sId,mSettings) {};
/**
 * Destroys the grid in the aggregation {@link #getGrid grid}.
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.destroyGrid = function() { return new sap.viz.ui5.types.Datatransform_dataSampling(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Datatransform_dataSampling with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnable enable}.
 * 
 * Set whether data sampling is enabled.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>enable</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.getEnable = function() { return false; };

/**
 * Gets content of aggregation {@link #getGrid grid}.
 * 
 * add documentation for aggregation grid
 * 
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling_grid}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.getGrid = function() { return new sap.viz.ui5.types.Datatransform_dataSampling_grid(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Datatransform_dataSampling.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getNumberPrecondition numberPrecondition}.
 * 
 * If the data point is larger than this value, data sampling is triggered.
 * 
 * Default value is <code>3000</code>.
 * @returns {int} Value of property <code>numberPrecondition</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.getNumberPrecondition = function() { return 0; };

/**
 * Gets current value of property {@link #getSizeFactor sizeFactor}.
 * 
 * Set the data point percentage in the original dataset
 * 
 * Default value is <code>1</code>.
 * @returns {int} Value of property <code>sizeFactor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.getSizeFactor = function() { return 0; };

/**
 * Sets a new value for property {@link #getEnable enable}.
 * 
 * Set whether data sampling is enabled.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bEnable New value for property <code>enable</code>
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.setEnable = function(bEnable) { return new sap.viz.ui5.types.Datatransform_dataSampling(); };

/**
 * Sets the aggregated {@link #getGrid grid}.
 * @param {sap.viz.ui5.types.Datatransform_dataSampling_grid} oGrid The grid to set
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.setGrid = function(oGrid) { return new sap.viz.ui5.types.Datatransform_dataSampling(); };

/**
 * Sets a new value for property {@link #getNumberPrecondition numberPrecondition}.
 * 
 * If the data point is larger than this value, data sampling is triggered.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>3000</code>.
 * @param {int} iNumberPrecondition New value for property <code>numberPrecondition</code>
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.setNumberPrecondition = function(iNumberPrecondition) { return new sap.viz.ui5.types.Datatransform_dataSampling(); };

/**
 * Sets a new value for property {@link #getSizeFactor sizeFactor}.
 * 
 * Set the data point percentage in the original dataset
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {int} iSizeFactor New value for property <code>sizeFactor</code>
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling.prototype.setSizeFactor = function(iSizeFactor) { return new sap.viz.ui5.types.Datatransform_dataSampling(); };


// ---- sap.viz.ui5.types.Datatransform_dataSampling_grid --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Datatransform_dataSampling_grid
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getRow row} : int (default: 3)</li>
 * <li>{@link #getColumn column} : int (default: 3)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Structured Type sap.viz.ui5.types.Datatransform_dataSampling_grid
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Datatransform_dataSampling_grid with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColumn column}.
 * 
 * Set the number of columns in the grid.
 * 
 * Default value is <code>3</code>.
 * @returns {int} Value of property <code>column</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid.prototype.getColumn = function() { return 0; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Datatransform_dataSampling_grid.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getRow row}.
 * 
 * Set the number of rows in the grid.
 * 
 * Default value is <code>3</code>.
 * @returns {int} Value of property <code>row</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid.prototype.getRow = function() { return 0; };

/**
 * Sets a new value for property {@link #getColumn column}.
 * 
 * Set the number of columns in the grid.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>3</code>.
 * @param {int} iColumn New value for property <code>column</code>
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling_grid} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid.prototype.setColumn = function(iColumn) { return new sap.viz.ui5.types.Datatransform_dataSampling_grid(); };

/**
 * Sets a new value for property {@link #getRow row}.
 * 
 * Set the number of rows in the grid.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>3</code>.
 * @param {int} iRow New value for property <code>row</code>
 * @returns {sap.viz.ui5.types.Datatransform_dataSampling_grid} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Datatransform_dataSampling_grid.prototype.setRow = function(iRow) { return new sap.viz.ui5.types.Datatransform_dataSampling_grid(); };


// ---- sap.viz.ui5.types.Heatmap --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Heatmap
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getStartColor startColor} : string (default: #C2E3A9)</li>
 * <li>{@link #getEndColor endColor} : string (default: #73C03C)</li>
 * <li>{@link #getColorPalette colorPalette} : string[]</li>
 * <li>{@link #getLegendValues legendValues} : int[]</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getBorder border} : sap.viz.ui5.types.Heatmap_border</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Heatmap_animation</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Heatmap_tooltip</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Heatmap
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Heatmap = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Destroys the border in the aggregation {@link #getBorder border}.
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.destroyBorder = function() { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Heatmap with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.Heatmap_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getAnimation = function() { return new sap.viz.ui5.types.Heatmap_animation(); };

/**
 * Gets content of aggregation {@link #getBorder border}.
 * 
 * Settings for the border
 * 
 * @returns {sap.viz.ui5.types.Heatmap_border}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getBorder = function() { return new sap.viz.ui5.types.Heatmap_border(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79", "#D16A7C"].
 * 
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getEndColor endColor}.
 * 
 * Set the end color of the heat map
 * 
 * Default value is <code>#73C03C</code>.
 * @returns {string} Value of property <code>endColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getEndColor = function() { return ""; };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets current value of property {@link #getLegendValues legendValues}.
 * 
 * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend automatically calculates the values according to the data. If the number of values in the legendValues array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
 * 
 * @returns {int[]} Value of property <code>legendValues</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getLegendValues = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Heatmap.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getStartColor startColor}.
 * 
 * Set the starting color of the heat map
 * 
 * Default value is <code>#C2E3A9</code>.
 * @returns {string} Value of property <code>startColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getStartColor = function() { return ""; };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip
 * 
 * @returns {sap.viz.ui5.types.Heatmap_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.getToolTip = function() { return new sap.viz.ui5.types.Heatmap_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Heatmap_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets the aggregated {@link #getBorder border}.
 * @param {sap.viz.ui5.types.Heatmap_border} oBorder The border to set
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setBorder = function(oBorder) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79", "#D16A7C"].
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets a new value for property {@link #getEndColor endColor}.
 * 
 * Set the end color of the heat map
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#73C03C</code>.
 * @param {string} sEndColor New value for property <code>endColor</code>
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setEndColor = function(sEndColor) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets a new value for property {@link #getLegendValues legendValues}.
 * 
 * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend automatically calculates the values according to the data. If the number of values in the legendValues array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int[]} sLegendValues New value for property <code>legendValues</code>
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setLegendValues = function(sLegendValues) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets a new value for property {@link #getStartColor startColor}.
 * 
 * Set the starting color of the heat map
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#C2E3A9</code>.
 * @param {string} sStartColor New value for property <code>startColor</code>
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setStartColor = function(sStartColor) { return new sap.viz.ui5.types.Heatmap(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Heatmap_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Heatmap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Heatmap(); };


// ---- sap.viz.ui5.types.Heatmap_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Heatmap_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Heatmap_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Heatmap_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Heatmap_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Heatmap_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Heatmap_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Heatmap_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Heatmap_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Heatmap_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Heatmap_animation(); };


// ---- sap.viz.ui5.types.Heatmap_border --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Heatmap_border
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Heatmap_border = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Heatmap_border with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap_border.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Heatmap_border.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap_border.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the zone edge
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_border.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the zone edge
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Heatmap_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_border.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Heatmap_border(); };


// ---- sap.viz.ui5.types.Heatmap_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Heatmap_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Heatmap_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Heatmap_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Heatmap_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Heatmap_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Heatmap_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Heatmap_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Heatmap_tooltip(); };


// ---- sap.viz.ui5.types.layout.Dock --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.layout.Dock
 * 
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.layout.Dock
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.layout.Dock = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.layout.Dock with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.layout.Dock.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.layout.Dock.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.layout.Dock.getMetadata = function() { return new sap.ui.base.Metadata(); };


// ---- sap.viz.ui5.types.layout.Stack --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.layout.Stack
 * 
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.layout.Stack
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.layout.Stack = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.layout.Stack with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.layout.Stack.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.layout.Stack.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.layout.Stack.getMetadata = function() { return new sap.ui.base.Metadata(); };


// ---- sap.viz.ui5.types.Legend --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Legend
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getLayout layout} : sap.viz.ui5.types.Legend_layout</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Legend
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Legend = function(sId,mSettings) {};
/**
 * Destroys the layout in the aggregation {@link #getLayout layout}.
 * @returns {sap.viz.ui5.types.Legend} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend.prototype.destroyLayout = function() { return new sap.viz.ui5.types.Legend(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Legend with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Legend.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getLayout layout}.
 * 
 * Settings for the layout of the legend area
 * 
 * @returns {sap.viz.ui5.types.Legend_layout}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend.prototype.getLayout = function() { return new sap.viz.ui5.types.Legend_layout(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Legend.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Legend.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets the aggregated {@link #getLayout layout}.
 * @param {sap.viz.ui5.types.Legend_layout} oLayout The layout to set
 * @returns {sap.viz.ui5.types.Legend} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend.prototype.setLayout = function(oLayout) { return new sap.viz.ui5.types.Legend(); };


// ---- sap.viz.ui5.types.legend.Common --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.legend.Common
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getFormatString formatString} : string</li>
 * <li>{@link #getIsHierarchical isHierarchical} : boolean (default: false)</li>
 * <li>{@link #getIsScrollable isScrollable} : boolean (default: false)</li>
 * <li>{@link #getPosition position} : sap.viz.ui5.types.legend.Common_position (default: right)</li>
 * <li>{@link #getType type} : sap.viz.ui5.types.legend.Common_type (default: ColorLegend)</li>
 * <li>{@link #getAlignment alignment} : sap.viz.ui5.types.legend.Common_alignment (default: start)</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.legend.Common_drawingEffect (default: normal)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getTitle title} : sap.viz.ui5.types.legend.Common_title</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.legend.Common
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.legend.Common = function(sId,mSettings) {};
/**
 * Destroys the title in the aggregation {@link #getTitle title}.
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.destroyTitle = function() { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.legend.Common with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.legend.Common.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getAlignment alignment}.
 * 
 * Set the alignment of the legend
 * 
 * Default value is <code>start</code>.
 * @returns {sap.viz.ui5.types.legend.Common_alignment} Value of property <code>alignment</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getAlignment = function() { return new sap.viz.ui5.types.legend.Common_alignment(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for colors in the legend. If this value is set to 'glossy', colors are glossy. If this value is set to 'normal', colors are matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.legend.Common_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.legend.Common_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set the format string for the legend. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.
 * 
 * @returns {string} Value of property <code>formatString</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getFormatString = function() { return ""; };

/**
 * Gets current value of property {@link #getIsHierarchical isHierarchical}.
 * 
 * Set whether the legend is hierarchical. This is only supported if the legend is located to the right of the chart.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isHierarchical</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getIsHierarchical = function() { return false; };

/**
 * Gets current value of property {@link #getIsScrollable isScrollable}.
 * 
 * Set whether the legend is scrollable. If this value is set to 'false', and there is not enough room to show the whole legend, an ellipsis (...) indicates the missing legend items.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isScrollable</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getIsScrollable = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.legend.Common.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.legend.Common.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPosition position}.
 * 
 * It is a deprecated property. Please use "legendGroup.layout.position" property to set legend position.
 * 
 * Default value is <code>right</code>.
 * @returns {sap.viz.ui5.types.legend.Common_position} Value of property <code>position</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getPosition = function() { return new sap.viz.ui5.types.legend.Common_position(); };

/**
 * Gets content of aggregation {@link #getTitle title}.
 * 
 * Settings for the legend title
 * 
 * @returns {sap.viz.ui5.types.legend.Common_title}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getTitle = function() { return new sap.viz.ui5.types.legend.Common_title(); };

/**
 * Gets current value of property {@link #getType type}.
 * 
 * Set legend type for Bubble charts. Non-bubble charts are not supported.
 * 
 * Default value is <code>ColorLegend</code>.
 * @returns {sap.viz.ui5.types.legend.Common_type} Value of property <code>type</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getType = function() { return new sap.viz.ui5.types.legend.Common_type(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the legend
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getAlignment alignment}.
 * 
 * Set the alignment of the legend
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>start</code>.
 * @param {sap.viz.ui5.types.legend.Common_alignment} sAlignment New value for property <code>alignment</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setAlignment = function(sAlignment) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for colors in the legend. If this value is set to 'glossy', colors are glossy. If this value is set to 'normal', colors are matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.legend.Common_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set the format string for the legend. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setFormatString = function(sFormatString) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getIsHierarchical isHierarchical}.
 * 
 * Set whether the legend is hierarchical. This is only supported if the legend is located to the right of the chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsHierarchical New value for property <code>isHierarchical</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setIsHierarchical = function(bIsHierarchical) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getIsScrollable isScrollable}.
 * 
 * Set whether the legend is scrollable. If this value is set to 'false', and there is not enough room to show the whole legend, an ellipsis (...) indicates the missing legend items.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsScrollable New value for property <code>isScrollable</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setIsScrollable = function(bIsScrollable) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getPosition position}.
 * 
 * It is a deprecated property. Please use "legendGroup.layout.position" property to set legend position.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>right</code>.
 * @param {sap.viz.ui5.types.legend.Common_position} sPosition New value for property <code>position</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setPosition = function(sPosition) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets the aggregated {@link #getTitle title}.
 * @param {sap.viz.ui5.types.legend.Common_title} oTitle The title to set
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setTitle = function(oTitle) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getType type}.
 * 
 * Set legend type for Bubble charts. Non-bubble charts are not supported.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>ColorLegend</code>.
 * @param {sap.viz.ui5.types.legend.Common_type} sType New value for property <code>type</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setType = function(sType) { return new sap.viz.ui5.types.legend.Common(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the legend
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.legend.Common} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.legend.Common(); };


// ---- sap.viz.ui5.types.legend.Common_alignment --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.legend.Common_alignment.toString = function() { return ""; };

// ---- sap.viz.ui5.types.legend.Common_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.legend.Common_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.legend.Common_position --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.legend.Common_position.toString = function() { return ""; };

// ---- sap.viz.ui5.types.legend.Common_title --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.legend.Common_title
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: false)</li>
 * <li>{@link #getText text} : string</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the legend title
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.legend.Common_title = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.legend.Common_title with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.legend.Common_title.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.legend.Common_title.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.legend.Common_title.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getText text}.
 * 
 * Set the text of the legend title
 * 
 * @returns {string} Value of property <code>text</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_title.prototype.getText = function() { return ""; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the legend title
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_title.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getText text}.
 * 
 * Set the text of the legend title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sText New value for property <code>text</code>
 * @returns {sap.viz.ui5.types.legend.Common_title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_title.prototype.setText = function(sText) { return new sap.viz.ui5.types.legend.Common_title(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the legend title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.legend.Common_title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_title.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.legend.Common_title(); };


// ---- sap.viz.ui5.types.legend.Common_type --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.legend.Common_type.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Legend_layout --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Legend_layout
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getPosition position} : sap.viz.ui5.types.Legend_layout_position (default: right)</li>
 * <li>{@link #getPriority priority} : int (default: 1)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the layout of the legend area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Legend_layout = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Legend_layout with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Legend_layout.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Legend_layout.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Legend_layout.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPosition position}.
 * 
 * Set the position of the legend area
 * 
 * Default value is <code>right</code>.
 * @returns {sap.viz.ui5.types.Legend_layout_position} Value of property <code>position</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout.prototype.getPosition = function() { return new sap.viz.ui5.types.Legend_layout_position(); };

/**
 * Gets current value of property {@link #getPriority priority}.
 * 
 * Set the priority of the position for the legend area
 * 
 * Default value is <code>1</code>.
 * @returns {int} Value of property <code>priority</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout.prototype.getPriority = function() { return 0; };

/**
 * Sets a new value for property {@link #getPosition position}.
 * 
 * Set the position of the legend area
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>right</code>.
 * @param {sap.viz.ui5.types.Legend_layout_position} sPosition New value for property <code>position</code>
 * @returns {sap.viz.ui5.types.Legend_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout.prototype.setPosition = function(sPosition) { return new sap.viz.ui5.types.Legend_layout(); };

/**
 * Sets a new value for property {@link #getPriority priority}.
 * 
 * Set the priority of the position for the legend area
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {int} iPriority New value for property <code>priority</code>
 * @returns {sap.viz.ui5.types.Legend_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout.prototype.setPriority = function(iPriority) { return new sap.viz.ui5.types.Legend_layout(); };


// ---- sap.viz.ui5.types.Legend_layout_position --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Legend_layout_position.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Line --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Line
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.Line_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Line_drawingEffect (default: normal)</li>
 * <li>{@link #getWidth width} : int (default: 2)</li>
 * <li>{@link #getShowGroupDetail showGroupDetail} : boolean (default: false)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Line_tooltip</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Line_animation</li>
 * <li>{@link #getMarker marker} : sap.viz.ui5.types.Line_marker</li>
 * <li>{@link #getHoverline hoverline} : sap.viz.ui5.types.Line_hoverline</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Line
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Line = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Line(); };

/**
 * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.destroyHoverline = function() { return new sap.viz.ui5.types.Line(); };

/**
 * Destroys the marker in the aggregation {@link #getMarker marker}.
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.destroyMarker = function() { return new sap.viz.ui5.types.Line(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Line(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Line with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations.
 * 
 * @returns {sap.viz.ui5.types.Line_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getAnimation = function() { return new sap.viz.ui5.types.Line_animation(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Line_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Line_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getHoverline hoverline}.
 * 
 * Settings for the hoverline.
 * 
 * @returns {sap.viz.ui5.types.Line_hoverline}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getHoverline = function() { return new sap.viz.ui5.types.Line_hoverline(); };

/**
 * Gets content of aggregation {@link #getMarker marker}.
 * 
 * Settings for marker/data point graphics
 * 
 * @returns {sap.viz.ui5.types.Line_marker}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getMarker = function() { return new sap.viz.ui5.types.Line_marker(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Line.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.Line_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getOrientation = function() { return new sap.viz.ui5.types.Line_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getShowGroupDetail showGroupDetail}.
 * 
 * mouse over show one catergory detail
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>showGroupDetail</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getShowGroupDetail = function() { return false; };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for the tooltip
 * 
 * @returns {sap.viz.ui5.types.Line_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getToolTip = function() { return new sap.viz.ui5.types.Line_tooltip(); };

/**
 * Gets current value of property {@link #getWidth width}.
 * 
 * Set the width of the lines, ranging from '1' to '7'. If you enter a value outside that range, the line width defaults to '2'.
 * 
 * Default value is <code>2</code>.
 * @returns {int} Value of property <code>width</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.getWidth = function() { return 0; };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Line_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Line_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets the aggregated {@link #getHoverline hoverline}.
 * @param {sap.viz.ui5.types.Line_hoverline} oHoverline The hoverline to set
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setHoverline = function(oHoverline) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets the aggregated {@link #getMarker marker}.
 * @param {sap.viz.ui5.types.Line_marker} oMarker The marker to set
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setMarker = function(oMarker) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.Line_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getShowGroupDetail showGroupDetail}.
 * 
 * mouse over show one catergory detail
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bShowGroupDetail New value for property <code>showGroupDetail</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setShowGroupDetail = function(bShowGroupDetail) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Line_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Line(); };

/**
 * Sets a new value for property {@link #getWidth width}.
 * 
 * Set the width of the lines, ranging from '1' to '7'. If you enter a value outside that range, the line width defaults to '2'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>2</code>.
 * @param {int} iWidth New value for property <code>width</code>
 * @returns {sap.viz.ui5.types.Line} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line.prototype.setWidth = function(iWidth) { return new sap.viz.ui5.types.Line(); };


// ---- sap.viz.ui5.types.Line_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Line_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Line_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Line_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Line_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Line_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Line_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Line_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Line_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Line_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Line_animation(); };


// ---- sap.viz.ui5.types.Line_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Line_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Line_hoverline --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Line_hoverline
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the hoverline.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Line_hoverline = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Line_hoverline with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_hoverline.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Line_hoverline.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_hoverline.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the hoverline.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_hoverline.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the hoverline.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Line_hoverline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_hoverline.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Line_hoverline(); };


// ---- sap.viz.ui5.types.Line_marker --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Line_marker
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getShape shape} : sap.viz.ui5.types.Line_marker_shape (default: circle)</li>
 * <li>{@link #getSize size} : int (default: 6)</li>
 * <li>{@link #getNumber number} : int</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for marker/data point graphics
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Line_marker = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Line_marker with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_marker.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Line_marker.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_marker.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getNumber number}.
 * 
 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
 * 
 * @returns {int} Value of property <code>number</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.getNumber = function() { return 0; };

/**
 * Gets current value of property {@link #getShape shape}.
 * 
 * Set the shape of the markers
 * 
 * Default value is <code>circle</code>.
 * @returns {sap.viz.ui5.types.Line_marker_shape} Value of property <code>shape</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.getShape = function() { return new sap.viz.ui5.types.Line_marker_shape(); };

/**
 * Gets current value of property {@link #getSize size}.
 * 
 * Set the marker size for data points, ranging from '4' to '32'. If you enter a value outside that range, the marker size defaults to '6'.
 * 
 * Default value is <code>6</code>.
 * @returns {int} Value of property <code>size</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.getSize = function() { return 0; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the markers
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getNumber number}.
 * 
 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iNumber New value for property <code>number</code>
 * @returns {sap.viz.ui5.types.Line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.setNumber = function(iNumber) { return new sap.viz.ui5.types.Line_marker(); };

/**
 * Sets a new value for property {@link #getShape shape}.
 * 
 * Set the shape of the markers
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>circle</code>.
 * @param {sap.viz.ui5.types.Line_marker_shape} sShape New value for property <code>shape</code>
 * @returns {sap.viz.ui5.types.Line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.setShape = function(sShape) { return new sap.viz.ui5.types.Line_marker(); };

/**
 * Sets a new value for property {@link #getSize size}.
 * 
 * Set the marker size for data points, ranging from '4' to '32'. If you enter a value outside that range, the marker size defaults to '6'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>6</code>.
 * @param {int} iSize New value for property <code>size</code>
 * @returns {sap.viz.ui5.types.Line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.setSize = function(iSize) { return new sap.viz.ui5.types.Line_marker(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the markers
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Line_marker} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Line_marker(); };


// ---- sap.viz.ui5.types.Line_marker_shape --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Line_marker_shape.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Line_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Line_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Line_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Line_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the tooltip
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Line_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Line_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Line_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Line_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Line_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Line_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Line_tooltip(); };


// ---- sap.viz.ui5.types.Pie --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Pie
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getIsDonut isDonut} : boolean (default: false)</li>
 * <li>{@link #getIsGeoPie isGeoPie} : boolean (default: false)</li>
 * <li>{@link #getValign valign} : sap.viz.ui5.types.Pie_valign (default: top)</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Pie_drawingEffect (default: normal)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * <li>{@link #getPlotScale plotScale} : float (default: 1)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Pie_animation</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Pie_tooltip</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Pie
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Pie = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Pie(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Pie(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Pie with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Pie.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.Pie_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getAnimation = function() { return new sap.viz.ui5.types.Pie_animation(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the sectors of the pie chart
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect of the pie
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Pie_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Pie_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Rules to format data points, sample:  [{condition: [{Key1:"Value1", Key2:"Value2"}], color:"#00ff00"}, {condition: [{Key3:"Value3"}], color:"#00ffff"}].  Each rule has two properties: "condition" and "color". The relation among the condition object in "condition" array is "OR",  which means the data point that met any condition in the array will apply the "color".  If multiple rules could apply on the same data point, the last rule would take effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets current value of property {@link #getIsDonut isDonut}.
 * 
 * Set the chart to display as a donut or a pie. If this value is set to 'true', the chart displays as a donut. If this value is set to 'false', the chart displays as a pie.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isDonut</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getIsDonut = function() { return false; };

/**
 * Gets current value of property {@link #getIsGeoPie isGeoPie}.
 * 
 * Set whether the chart displays as a geo pie chart. If this value is set to 'true', the chart displays as a geo pie chart. If this value is set to 'false', the chart does not display as a geo pie chart.
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isGeoPie</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getIsGeoPie = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Pie.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Pie.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPlotScale plotScale}.
 * 
 * Set the plot scale of the pie
 * 
 * Default value is <code>1</code>.
 * @returns {float} Value of property <code>plotScale</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getPlotScale = function() { return 0.0; };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip related properties
 * 
 * @returns {sap.viz.ui5.types.Pie_tooltip}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getToolTip = function() { return new sap.viz.ui5.types.Pie_tooltip(); };

/**
 * Gets current value of property {@link #getValign valign}.
 * 
 * Set the vertical aligment of the chart
 * 
 * Default value is <code>top</code>.
 * @returns {sap.viz.ui5.types.Pie_valign} Value of property <code>valign</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.getValign = function() { return new sap.viz.ui5.types.Pie_valign(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Pie_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the sectors of the pie chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect of the pie
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Pie_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Rules to format data points, sample:  [{condition: [{Key1:"Value1", Key2:"Value2"}], color:"#00ff00"}, {condition: [{Key3:"Value3"}], color:"#00ffff"}].  Each rule has two properties: "condition" and "color". The relation among the condition object in "condition" array is "OR",  which means the data point that met any condition in the array will apply the "color".  If multiple rules could apply on the same data point, the last rule would take effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getIsDonut isDonut}.
 * 
 * Set the chart to display as a donut or a pie. If this value is set to 'true', the chart displays as a donut. If this value is set to 'false', the chart displays as a pie.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsDonut New value for property <code>isDonut</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setIsDonut = function(bIsDonut) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getIsGeoPie isGeoPie}.
 * 
 * Set whether the chart displays as a geo pie chart. If this value is set to 'true', the chart displays as a geo pie chart. If this value is set to 'false', the chart does not display as a geo pie chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsGeoPie New value for property <code>isGeoPie</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setIsGeoPie = function(bIsGeoPie) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getPlotScale plotScale}.
 * 
 * Set the plot scale of the pie
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>1</code>.
 * @param {float} fPlotScale New value for property <code>plotScale</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setPlotScale = function(fPlotScale) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Pie_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Pie(); };

/**
 * Sets a new value for property {@link #getValign valign}.
 * 
 * Set the vertical aligment of the chart
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>top</code>.
 * @param {sap.viz.ui5.types.Pie_valign} sValign New value for property <code>valign</code>
 * @returns {sap.viz.ui5.types.Pie} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie.prototype.setValign = function(sValign) { return new sap.viz.ui5.types.Pie(); };


// ---- sap.viz.ui5.types.Pie_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Pie_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Pie_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Pie_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Pie_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Pie_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Pie_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Pie_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Pie_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Pie_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Pie_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Pie_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Pie_animation(); };


// ---- sap.viz.ui5.types.Pie_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Pie_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Pie_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Pie_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getValueFormat valueFormat} : string (default: n)</li>
 * <li>{@link #getPercentageFormat percentageFormat} : string (default: .0%)</li>
 * <li>{@link #getFormatString formatString} : string[]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip related properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Pie_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Pie_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Pie_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set format string of tooltip. The first string is applied to value and the second is applied to percentage.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
 * 
 * @returns {string[]} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.getFormatString = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Pie_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Pie_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPercentageFormat percentageFormat}.
 * 
 * Set the number format of the percentage label in tooltip
 * 
 * Default value is <code>.0%</code>.
 * @returns {string} Value of property <code>percentageFormat</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.getPercentageFormat = function() { return ""; };

/**
 * Gets current value of property {@link #getValueFormat valueFormat}.
 * 
 * Set the number format of the measure value in tooltip
 * 
 * Default value is <code>n</code>.
 * @returns {string} Value of property <code>valueFormat</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.getValueFormat = function() { return ""; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set whether tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set format string of tooltip. The first string is applied to value and the second is applied to percentage.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string[]} sFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.Pie_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.setFormatString = function(sFormatString) { return new sap.viz.ui5.types.Pie_tooltip(); };

/**
 * Sets a new value for property {@link #getPercentageFormat percentageFormat}.
 * 
 * Set the number format of the percentage label in tooltip
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>.0%</code>.
 * @param {string} sPercentageFormat New value for property <code>percentageFormat</code>
 * @returns {sap.viz.ui5.types.Pie_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.setPercentageFormat = function(sPercentageFormat) { return new sap.viz.ui5.types.Pie_tooltip(); };

/**
 * Sets a new value for property {@link #getValueFormat valueFormat}.
 * 
 * Set the number format of the measure value in tooltip
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>n</code>.
 * @param {string} sValueFormat New value for property <code>valueFormat</code>
 * @returns {sap.viz.ui5.types.Pie_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.setValueFormat = function(sValueFormat) { return new sap.viz.ui5.types.Pie_tooltip(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set whether tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Pie_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Pie_tooltip.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Pie_tooltip(); };


// ---- sap.viz.ui5.types.Pie_valign --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Pie_valign.toString = function() { return ""; };

// ---- sap.viz.ui5.types.RootContainer --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.RootContainer
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getLayout layout} : sap.viz.ui5.types.RootContainer_layout</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.RootContainer
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.RootContainer = function(sId,mSettings) {};
/**
 * Destroys the layout in the aggregation {@link #getLayout layout}.
 * @returns {sap.viz.ui5.types.RootContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer.prototype.destroyLayout = function() { return new sap.viz.ui5.types.RootContainer(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.RootContainer with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.RootContainer.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getLayout layout}.
 * 
 * Settings for the layout of the root container
 * 
 * @returns {sap.viz.ui5.types.RootContainer_layout}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer.prototype.getLayout = function() { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.RootContainer.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.RootContainer.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets the aggregated {@link #getLayout layout}.
 * @param {sap.viz.ui5.types.RootContainer_layout} oLayout The layout to set
 * @returns {sap.viz.ui5.types.RootContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer.prototype.setLayout = function(oLayout) { return new sap.viz.ui5.types.RootContainer(); };


// ---- sap.viz.ui5.types.RootContainer_layout --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.RootContainer_layout
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getAdjustPolicy adjustPolicy} : string</li>
 * <li>{@link #getPadding padding} : int (default: 24)</li>
 * <li>{@link #getPaddingTop paddingTop} : int</li>
 * <li>{@link #getPaddingLeft paddingLeft} : int</li>
 * <li>{@link #getPaddingRight paddingRight} : int</li>
 * <li>{@link #getPaddingBottom paddingBottom} : int</li>
 * <li>{@link #getVgap vgap} : int (default: 8)</li>
 * <li>{@link #getHgap hgap} : int (default: 8)</li>
 * <li>{@link #getHideAxisTitleFirst hideAxisTitleFirst} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the layout of the root container
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.RootContainer_layout = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.RootContainer_layout with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.RootContainer_layout.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getAdjustPolicy adjustPolicy}.
 * 
 * Indicates the layout adjust policy
 * 
 * @returns {string} Value of property <code>adjustPolicy</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getAdjustPolicy = function() { return ""; };

/**
 * Gets current value of property {@link #getHgap hgap}.
 * 
 * Horizontal gap value between UI components
 * 
 * Default value is <code>8</code>.
 * @returns {int} Value of property <code>hgap</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getHgap = function() { return 0; };

/**
 * Gets current value of property {@link #getHideAxisTitleFirst hideAxisTitleFirst}.
 * 
 * Hide axis title firstly if the space is limited.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>hideAxisTitleFirst</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getHideAxisTitleFirst = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.RootContainer_layout.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.RootContainer_layout.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPadding padding}.
 * 
 * Set the universal padding value. This single value is applied to all sides of the chart. Individual settings for each edge are also supported.
 * 
 * Default value is <code>24</code>.
 * @returns {int} Value of property <code>padding</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getPadding = function() { return 0; };

/**
 * Gets current value of property {@link #getPaddingBottom paddingBottom}.
 * 
 * Set the padding value for the bottom side
 * 
 * @returns {int} Value of property <code>paddingBottom</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getPaddingBottom = function() { return 0; };

/**
 * Gets current value of property {@link #getPaddingLeft paddingLeft}.
 * 
 * Set the padding value for the left side
 * 
 * @returns {int} Value of property <code>paddingLeft</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getPaddingLeft = function() { return 0; };

/**
 * Gets current value of property {@link #getPaddingRight paddingRight}.
 * 
 * Set the padding value for the right side
 * 
 * @returns {int} Value of property <code>paddingRight</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getPaddingRight = function() { return 0; };

/**
 * Gets current value of property {@link #getPaddingTop paddingTop}.
 * 
 * Set the padding value for the top side
 * 
 * @returns {int} Value of property <code>paddingTop</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getPaddingTop = function() { return 0; };

/**
 * Gets current value of property {@link #getVgap vgap}.
 * 
 * Vertical gap value between UI components
 * 
 * Default value is <code>8</code>.
 * @returns {int} Value of property <code>vgap</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.getVgap = function() { return 0; };

/**
 * Sets a new value for property {@link #getAdjustPolicy adjustPolicy}.
 * 
 * Indicates the layout adjust policy
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sAdjustPolicy New value for property <code>adjustPolicy</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setAdjustPolicy = function(sAdjustPolicy) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getHgap hgap}.
 * 
 * Horizontal gap value between UI components
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>8</code>.
 * @param {int} iHgap New value for property <code>hgap</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setHgap = function(iHgap) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getHideAxisTitleFirst hideAxisTitleFirst}.
 * 
 * Hide axis title firstly if the space is limited.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bHideAxisTitleFirst New value for property <code>hideAxisTitleFirst</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setHideAxisTitleFirst = function(bHideAxisTitleFirst) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getPadding padding}.
 * 
 * Set the universal padding value. This single value is applied to all sides of the chart. Individual settings for each edge are also supported.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>24</code>.
 * @param {int} iPadding New value for property <code>padding</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setPadding = function(iPadding) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getPaddingBottom paddingBottom}.
 * 
 * Set the padding value for the bottom side
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iPaddingBottom New value for property <code>paddingBottom</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setPaddingBottom = function(iPaddingBottom) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getPaddingLeft paddingLeft}.
 * 
 * Set the padding value for the left side
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iPaddingLeft New value for property <code>paddingLeft</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setPaddingLeft = function(iPaddingLeft) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getPaddingRight paddingRight}.
 * 
 * Set the padding value for the right side
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iPaddingRight New value for property <code>paddingRight</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setPaddingRight = function(iPaddingRight) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getPaddingTop paddingTop}.
 * 
 * Set the padding value for the top side
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int} iPaddingTop New value for property <code>paddingTop</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setPaddingTop = function(iPaddingTop) { return new sap.viz.ui5.types.RootContainer_layout(); };

/**
 * Sets a new value for property {@link #getVgap vgap}.
 * 
 * Vertical gap value between UI components
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>8</code>.
 * @param {int} iVgap New value for property <code>vgap</code>
 * @returns {sap.viz.ui5.types.RootContainer_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.RootContainer_layout.prototype.setVgap = function(iVgap) { return new sap.viz.ui5.types.RootContainer_layout(); };


// ---- sap.viz.ui5.types.Scatter --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Scatter
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getShapePalette shapePalette} : string[] (default: ['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection'])</li>
 * <li>{@link #getMaxPriValue maxPriValue} : float (default: 0)</li>
 * <li>{@link #getMinPriValue minPriValue} : float (default: 0)</li>
 * <li>{@link #getMaxSecValue maxSecValue} : float (default: 0)</li>
 * <li>{@link #getMinSecValue minSecValue} : float (default: 0)</li>
 * <li>{@link #getTimeBased timeBased} : boolean (default: false)</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Scatter_drawingEffect (default: normal)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * <li>{@link #getShowNegativeValues showNegativeValues} : boolean (default: true)</li>
 * <li>{@link #getMarkerSize markerSize} : int (default: 10)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Scatter_animation</li>
 * <li>{@link #getAxisTooltip axisTooltip} : sap.viz.ui5.types.Scatter_axisTooltip</li>
 * <li>{@link #getHoverline hoverline} : sap.viz.ui5.types.Scatter_hoverline</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Scatter
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Scatter = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Scatter(); };

/**
 * Destroys the axisTooltip in the aggregation {@link #getAxisTooltip axisTooltip}.
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.destroyAxisTooltip = function() { return new sap.viz.ui5.types.Scatter(); };

/**
 * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.destroyHoverline = function() { return new sap.viz.ui5.types.Scatter(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Scatter with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in bubble and scatter charts
 * 
 * @returns {sap.viz.ui5.types.Scatter_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getAnimation = function() { return new sap.viz.ui5.types.Scatter_animation(); };

/**
 * Gets content of aggregation {@link #getAxisTooltip axisTooltip}.
 * 
 * Set tooltip related properties.
 * 
 * @returns {sap.viz.ui5.types.Scatter_axisTooltip}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getAxisTooltip = function() { return new sap.viz.ui5.types.Scatter_axisTooltip(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color of the bubbles
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the bubbles
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Scatter_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Scatter_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getHoverline hoverline}.
 * 
 * Settings for hoverline properties.
 * 
 * @returns {sap.viz.ui5.types.Scatter_hoverline}
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getHoverline = function() { return new sap.viz.ui5.types.Scatter_hoverline(); };

/**
 * Gets current value of property {@link #getMarkerSize markerSize}.
 * 
 * Set the marker size for data points. The available range is from '4' to '32'.
 * 
 * Default value is <code>10</code>.
 * @returns {int} Value of property <code>markerSize</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getMarkerSize = function() { return 0; };

/**
 * Gets current value of property {@link #getMaxPriValue maxPriValue}.
 * 
 * Set the max value of primary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxPriValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getMaxPriValue = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMaxSecValue maxSecValue}.
 * 
 * Set the max value of secondary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>maxSecValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getMaxSecValue = function() { return 0.0; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Scatter.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getMinPriValue minPriValue}.
 * 
 * Set the minimum value of primary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minPriValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getMinPriValue = function() { return 0.0; };

/**
 * Gets current value of property {@link #getMinSecValue minSecValue}.
 * 
 * Set the minimum value of secondary values
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>minSecValue</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getMinSecValue = function() { return 0.0; };

/**
 * Gets current value of property {@link #getShapePalette shapePalette}.
 * 
 * Set the shape of the bubbles
 * 
 * Default value is <code>['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection']</code>.
 * @returns {string[]} Value of property <code>shapePalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getShapePalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getShowNegativeValues showNegativeValues}.
 * 
 * Show/hide the data of negetive value.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>showNegativeValues</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getShowNegativeValues = function() { return false; };

/**
 * Gets current value of property {@link #getTimeBased timeBased}.
 * 
 * Set whether it is time based scatter/bubble
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>timeBased</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.getTimeBased = function() { return false; };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Scatter_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets the aggregated {@link #getAxisTooltip axisTooltip}.
 * @param {sap.viz.ui5.types.Scatter_axisTooltip} oAxisTooltip The axisTooltip to set
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setAxisTooltip = function(oAxisTooltip) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color of the bubbles
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the bubbles
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Scatter_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets the aggregated {@link #getHoverline hoverline}.
 * @param {sap.viz.ui5.types.Scatter_hoverline} oHoverline The hoverline to set
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setHoverline = function(oHoverline) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getMarkerSize markerSize}.
 * 
 * Set the marker size for data points. The available range is from '4' to '32'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>10</code>.
 * @param {int} iMarkerSize New value for property <code>markerSize</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setMarkerSize = function(iMarkerSize) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getMaxPriValue maxPriValue}.
 * 
 * Set the max value of primary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxPriValue New value for property <code>maxPriValue</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setMaxPriValue = function(fMaxPriValue) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getMaxSecValue maxSecValue}.
 * 
 * Set the max value of secondary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMaxSecValue New value for property <code>maxSecValue</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setMaxSecValue = function(fMaxSecValue) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getMinPriValue minPriValue}.
 * 
 * Set the minimum value of primary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinPriValue New value for property <code>minPriValue</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setMinPriValue = function(fMinPriValue) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getMinSecValue minSecValue}.
 * 
 * Set the minimum value of secondary values
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fMinSecValue New value for property <code>minSecValue</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setMinSecValue = function(fMinSecValue) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getShapePalette shapePalette}.
 * 
 * Set the shape of the bubbles
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection']</code>.
 * @param {string[]} sShapePalette New value for property <code>shapePalette</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setShapePalette = function(sShapePalette) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getShowNegativeValues showNegativeValues}.
 * 
 * Show/hide the data of negetive value.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bShowNegativeValues New value for property <code>showNegativeValues</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setShowNegativeValues = function(bShowNegativeValues) { return new sap.viz.ui5.types.Scatter(); };

/**
 * Sets a new value for property {@link #getTimeBased timeBased}.
 * 
 * Set whether it is time based scatter/bubble
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bTimeBased New value for property <code>timeBased</code>
 * @returns {sap.viz.ui5.types.Scatter} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter.prototype.setTimeBased = function(bTimeBased) { return new sap.viz.ui5.types.Scatter(); };


// ---- sap.viz.ui5.types.Scatter_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Scatter_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in bubble and scatter charts
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Scatter_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Scatter_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Scatter_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Scatter_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Scatter_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Scatter_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Scatter_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Scatter_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Scatter_animation(); };


// ---- sap.viz.ui5.types.Scatter_axisTooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Scatter_axisTooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getFormatString formatString} : string[]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Set tooltip related properties.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Scatter_axisTooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
 * 
 * @returns {string[]} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip.prototype.getFormatString = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Scatter_axisTooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * enabled/disabled tooltip.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string[]} sFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.Scatter_axisTooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip.prototype.setFormatString = function(sFormatString) { return new sap.viz.ui5.types.Scatter_axisTooltip(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * enabled/disabled tooltip.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Scatter_axisTooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_axisTooltip.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Scatter_axisTooltip(); };


// ---- sap.viz.ui5.types.Scatter_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Scatter_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Scatter_hoverline --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Scatter_hoverline
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for hoverline properties.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Scatter_hoverline = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Scatter_hoverline with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter_hoverline.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Scatter_hoverline.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Scatter_hoverline.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set to enabled/disabled hoverline or not.
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_hoverline.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set to enabled/disabled hoverline or not.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Scatter_hoverline} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_hoverline.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Scatter_hoverline(); };


// ---- sap.viz.ui5.types.StackedVerticalBar --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.StackedVerticalBar
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.StackedVerticalBar_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.StackedVerticalBar_drawingEffect (default: normal)</li>
 * <li>{@link #getIsRoundCorner isRoundCorner} : boolean (default: false)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * <li>{@link #getMode mode} : sap.viz.ui5.types.StackedVerticalBar_mode (default: comparison)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.StackedVerticalBar_tooltip</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.StackedVerticalBar_animation</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.StackedVerticalBar
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.StackedVerticalBar = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.StackedVerticalBar with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.StackedVerticalBar_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getAnimation = function() { return new sap.viz.ui5.types.StackedVerticalBar_animation(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.StackedVerticalBar_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.StackedVerticalBar_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isRoundCorner</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getIsRoundCorner = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.StackedVerticalBar.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getMode mode}.
 * 
 * Set the display mode for stacked vertical bar charts
 * 
 * Default value is <code>comparison</code>.
 * @returns {sap.viz.ui5.types.StackedVerticalBar_mode} Value of property <code>mode</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getMode = function() { return new sap.viz.ui5.types.StackedVerticalBar_mode(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.StackedVerticalBar_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getOrientation = function() { return new sap.viz.ui5.types.StackedVerticalBar_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip related properties
 * 
 * @returns {sap.viz.ui5.types.StackedVerticalBar_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.getToolTip = function() { return new sap.viz.ui5.types.StackedVerticalBar_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.StackedVerticalBar_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.StackedVerticalBar_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsRoundCorner New value for property <code>isRoundCorner</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setIsRoundCorner = function(bIsRoundCorner) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getMode mode}.
 * 
 * Set the display mode for stacked vertical bar charts
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>comparison</code>.
 * @param {sap.viz.ui5.types.StackedVerticalBar_mode} sMode New value for property <code>mode</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setMode = function(sMode) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.StackedVerticalBar_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.StackedVerticalBar(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.StackedVerticalBar_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.StackedVerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.StackedVerticalBar(); };


// ---- sap.viz.ui5.types.StackedVerticalBar_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.StackedVerticalBar_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.StackedVerticalBar_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.StackedVerticalBar_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.StackedVerticalBar_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.StackedVerticalBar_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.StackedVerticalBar_animation(); };


// ---- sap.viz.ui5.types.StackedVerticalBar_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.StackedVerticalBar_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.StackedVerticalBar_mode --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.StackedVerticalBar_mode.toString = function() { return ""; };

// ---- sap.viz.ui5.types.StackedVerticalBar_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.StackedVerticalBar_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.StackedVerticalBar_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.StackedVerticalBar_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip related properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.StackedVerticalBar_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.StackedVerticalBar_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.StackedVerticalBar_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.StackedVerticalBar_tooltip(); };


// ---- sap.viz.ui5.types.Title --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Title
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: false)</li>
 * <li>{@link #getText text} : string</li>
 * <li>{@link #getAlignment alignment} : sap.viz.ui5.types.Title_alignment (default: center)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getLayout layout} : sap.viz.ui5.types.Title_layout</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Title
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Title = function(sId,mSettings) {};
/**
 * Destroys the layout in the aggregation {@link #getLayout layout}.
 * @returns {sap.viz.ui5.types.Title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.destroyLayout = function() { return new sap.viz.ui5.types.Title(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Title with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Title.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getAlignment alignment}.
 * 
 * Set the alignment of the main title
 * 
 * Default value is <code>center</code>.
 * @returns {sap.viz.ui5.types.Title_alignment} Value of property <code>alignment</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.getAlignment = function() { return new sap.viz.ui5.types.Title_alignment(); };

/**
 * Gets content of aggregation {@link #getLayout layout}.
 * 
 * Settings for layout of title
 * 
 * @returns {sap.viz.ui5.types.Title_layout}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.getLayout = function() { return new sap.viz.ui5.types.Title_layout(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Title.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Title.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getText text}.
 * 
 * Set the text of the main title
 * 
 * @returns {string} Value of property <code>text</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.getText = function() { return ""; };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the main title
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getAlignment alignment}.
 * 
 * Set the alignment of the main title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>center</code>.
 * @param {sap.viz.ui5.types.Title_alignment} sAlignment New value for property <code>alignment</code>
 * @returns {sap.viz.ui5.types.Title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.setAlignment = function(sAlignment) { return new sap.viz.ui5.types.Title(); };

/**
 * Sets the aggregated {@link #getLayout layout}.
 * @param {sap.viz.ui5.types.Title_layout} oLayout The layout to set
 * @returns {sap.viz.ui5.types.Title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.setLayout = function(oLayout) { return new sap.viz.ui5.types.Title(); };

/**
 * Sets a new value for property {@link #getText text}.
 * 
 * Set the text of the main title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sText New value for property <code>text</code>
 * @returns {sap.viz.ui5.types.Title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.setText = function(sText) { return new sap.viz.ui5.types.Title(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the main title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Title} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Title(); };


// ---- sap.viz.ui5.types.Title_alignment --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Title_alignment.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Title_layout --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Title_layout
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getPosition position} : string (default: right)</li>
 * <li>{@link #getPriority priority} : int (default: 0)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for layout of title
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Title_layout = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Title_layout with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Title_layout.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Title_layout.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Title_layout.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPosition position}.
 * 
 * Set the position of the title
 * 
 * Default value is <code>right</code>.
 * @returns {string} Value of property <code>position</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title_layout.prototype.getPosition = function() { return ""; };

/**
 * Gets current value of property {@link #getPriority priority}.
 * 
 * Set the priority of the position for the title
 * 
 * Default value is <code>0</code>.
 * @returns {int} Value of property <code>priority</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title_layout.prototype.getPriority = function() { return 0; };

/**
 * Sets a new value for property {@link #getPosition position}.
 * 
 * Set the position of the title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>right</code>.
 * @param {string} sPosition New value for property <code>position</code>
 * @returns {sap.viz.ui5.types.Title_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title_layout.prototype.setPosition = function(sPosition) { return new sap.viz.ui5.types.Title_layout(); };

/**
 * Sets a new value for property {@link #getPriority priority}.
 * 
 * Set the priority of the position for the title
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {int} iPriority New value for property <code>priority</code>
 * @returns {sap.viz.ui5.types.Title_layout} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Title_layout.prototype.setPriority = function(iPriority) { return new sap.viz.ui5.types.Title_layout(); };


// ---- sap.viz.ui5.types.Tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getPreRender preRender} : any</li>
 * <li>{@link #getPostRender postRender} : any</li>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.Tooltip_drawingEffect (default: normal)</li>
 * <li>{@link #getFormatString formatString} : any[]</li>
 * <li>{@link #getLayinChart layinChart} : boolean (default: true)</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getBackground background} : sap.viz.ui5.types.Tooltip_background</li>
 * <li>{@link #getFooterLabel footerLabel} : sap.viz.ui5.types.Tooltip_footerLabel</li>
 * <li>{@link #getSeparationLine separationLine} : sap.viz.ui5.types.Tooltip_separationLine</li>
 * <li>{@link #getBodyDimensionLabel bodyDimensionLabel} : sap.viz.ui5.types.Tooltip_bodyDimensionLabel</li>
 * <li>{@link #getBodyDimensionValue bodyDimensionValue} : sap.viz.ui5.types.Tooltip_bodyDimensionValue</li>
 * <li>{@link #getBodyMeasureLabel bodyMeasureLabel} : sap.viz.ui5.types.Tooltip_bodyMeasureLabel</li>
 * <li>{@link #getBodyMeasureValue bodyMeasureValue} : sap.viz.ui5.types.Tooltip_bodyMeasureValue</li>
 * <li>{@link #getCloseButton closeButton} : sap.viz.ui5.types.Tooltip_closeButton</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Tooltip
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip = function(sId,mSettings) {};
/**
 * Destroys the background in the aggregation {@link #getBackground background}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyBackground = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the bodyDimensionLabel in the aggregation {@link #getBodyDimensionLabel bodyDimensionLabel}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyBodyDimensionLabel = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the bodyDimensionValue in the aggregation {@link #getBodyDimensionValue bodyDimensionValue}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyBodyDimensionValue = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the bodyMeasureLabel in the aggregation {@link #getBodyMeasureLabel bodyMeasureLabel}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyBodyMeasureLabel = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the bodyMeasureValue in the aggregation {@link #getBodyMeasureValue bodyMeasureValue}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyBodyMeasureValue = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the closeButton in the aggregation {@link #getCloseButton closeButton}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyCloseButton = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the footerLabel in the aggregation {@link #getFooterLabel footerLabel}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroyFooterLabel = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Destroys the separationLine in the aggregation {@link #getSeparationLine separationLine}.
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.destroySeparationLine = function() { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getBackground background}.
 * 
 * Define the background style of the tooltip.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_background}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getBackground = function() { return new sap.viz.ui5.types.Tooltip_background(); };

/**
 * Gets content of aggregation {@link #getBodyDimensionLabel bodyDimensionLabel}.
 * 
 * Define the color of the dimension name of the tooltip body.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_bodyDimensionLabel}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getBodyDimensionLabel = function() { return new sap.viz.ui5.types.Tooltip_bodyDimensionLabel(); };

/**
 * Gets content of aggregation {@link #getBodyDimensionValue bodyDimensionValue}.
 * 
 * Define the color of the dimension value of the tooltip body.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_bodyDimensionValue}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getBodyDimensionValue = function() { return new sap.viz.ui5.types.Tooltip_bodyDimensionValue(); };

/**
 * Gets content of aggregation {@link #getBodyMeasureLabel bodyMeasureLabel}.
 * 
 * Define the color of the measure name of the tooltip body.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_bodyMeasureLabel}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getBodyMeasureLabel = function() { return new sap.viz.ui5.types.Tooltip_bodyMeasureLabel(); };

/**
 * Gets content of aggregation {@link #getBodyMeasureValue bodyMeasureValue}.
 * 
 * Define the color of the measure value of the tooltip body.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_bodyMeasureValue}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getBodyMeasureValue = function() { return new sap.viz.ui5.types.Tooltip_bodyMeasureValue(); };

/**
 * Gets content of aggregation {@link #getCloseButton closeButton}.
 * 
 * Define the background and border color of tooltip close button.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_closeButton}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getCloseButton = function() { return new sap.viz.ui5.types.Tooltip_closeButton(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the tooltip
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.Tooltip_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.Tooltip_drawingEffect(); };

/**
 * Gets content of aggregation {@link #getFooterLabel footerLabel}.
 * 
 * Define the style of the label of the tooltip footer.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_footerLabel}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getFooterLabel = function() { return new sap.viz.ui5.types.Tooltip_footerLabel(); };

/**
 * Gets current value of property {@link #getFormatString formatString}.
 * 
 * Set the format strings for text in the tooltip. For dual axis charts, the first array is applied to the primary axis and the second array is applied to the second axis. If you enter fewer format strings into an array than there are measures in the respective axis, then the last format string is applied to all remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.The following is an example of an array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
 * 
 * @returns {any[]} Value of property <code>formatString</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getFormatString = function() { return new Array(); };

/**
 * Gets current value of property {@link #getLayinChart layinChart}.
 * 
 * Set whether the tooltip appears in the chart area
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>layinChart</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getLayinChart = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getPostRender postRender}.
 * 
 * A callback function can be specified as a parameter and passed to chart options when the user calls the createViz function. This callback function is called after the tooltip is rendered. The user can select and change dom elements' properties under the tooltip element.
 * 
 * @returns {any} Value of property <code>postRender</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getPostRender = function() { return null; };

/**
 * Gets current value of property {@link #getPreRender preRender}.
 * 
 * A callback function can be specified as a parameter and passed to chart options when the user calls the createViz function. This callback function is called before the tooltip is rendered. The input parameter is a dom element, which is at the bottom of the tooltip. Any dom element such as a button can be appended to this parent node. It can only be called when the tooltip is in actionMode.
 * 
 * @returns {any} Value of property <code>preRender</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getPreRender = function() { return null; };

/**
 * Gets content of aggregation {@link #getSeparationLine separationLine}.
 * 
 * Define the color of the value of the tooltip separation line.
 * 
 * @returns {sap.viz.ui5.types.Tooltip_separationLine}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getSeparationLine = function() { return new sap.viz.ui5.types.Tooltip_separationLine(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the tooltip
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.getVisible = function() { return false; };

/**
 * Sets the aggregated {@link #getBackground background}.
 * @param {sap.viz.ui5.types.Tooltip_background} oBackground The background to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setBackground = function(oBackground) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getBodyDimensionLabel bodyDimensionLabel}.
 * @param {sap.viz.ui5.types.Tooltip_bodyDimensionLabel} oBodyDimensionLabel The bodyDimensionLabel to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setBodyDimensionLabel = function(oBodyDimensionLabel) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getBodyDimensionValue bodyDimensionValue}.
 * @param {sap.viz.ui5.types.Tooltip_bodyDimensionValue} oBodyDimensionValue The bodyDimensionValue to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setBodyDimensionValue = function(oBodyDimensionValue) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getBodyMeasureLabel bodyMeasureLabel}.
 * @param {sap.viz.ui5.types.Tooltip_bodyMeasureLabel} oBodyMeasureLabel The bodyMeasureLabel to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setBodyMeasureLabel = function(oBodyMeasureLabel) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getBodyMeasureValue bodyMeasureValue}.
 * @param {sap.viz.ui5.types.Tooltip_bodyMeasureValue} oBodyMeasureValue The bodyMeasureValue to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setBodyMeasureValue = function(oBodyMeasureValue) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getCloseButton closeButton}.
 * @param {sap.viz.ui5.types.Tooltip_closeButton} oCloseButton The closeButton to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setCloseButton = function(oCloseButton) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the tooltip
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.Tooltip_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getFooterLabel footerLabel}.
 * @param {sap.viz.ui5.types.Tooltip_footerLabel} oFooterLabel The footerLabel to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setFooterLabel = function(oFooterLabel) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets a new value for property {@link #getFormatString formatString}.
 * 
 * Set the format strings for text in the tooltip. For dual axis charts, the first array is applied to the primary axis and the second array is applied to the second axis. If you enter fewer format strings into an array than there are measures in the respective axis, then the last format string is applied to all remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.The following is an example of an array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any[]} sFormatString New value for property <code>formatString</code>
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setFormatString = function(sFormatString) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets a new value for property {@link #getLayinChart layinChart}.
 * 
 * Set whether the tooltip appears in the chart area
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bLayinChart New value for property <code>layinChart</code>
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setLayinChart = function(bLayinChart) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets a new value for property {@link #getPostRender postRender}.
 * 
 * A callback function can be specified as a parameter and passed to chart options when the user calls the createViz function. This callback function is called after the tooltip is rendered. The user can select and change dom elements' properties under the tooltip element.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oPostRender New value for property <code>postRender</code>
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setPostRender = function(oPostRender) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets a new value for property {@link #getPreRender preRender}.
 * 
 * A callback function can be specified as a parameter and passed to chart options when the user calls the createViz function. This callback function is called before the tooltip is rendered. The input parameter is a dom element, which is at the bottom of the tooltip. Any dom element such as a button can be appended to this parent node. It can only be called when the tooltip is in actionMode.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {any} oPreRender New value for property <code>preRender</code>
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setPreRender = function(oPreRender) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets the aggregated {@link #getSeparationLine separationLine}.
 * @param {sap.viz.ui5.types.Tooltip_separationLine} oSeparationLine The separationLine to set
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setSeparationLine = function(oSeparationLine) { return new sap.viz.ui5.types.Tooltip(); };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the tooltip
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Tooltip(); };


// ---- sap.viz.ui5.types.Tooltip_background --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_background
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColor color} : string (default: #ffffff)</li>
 * <li>{@link #getBorderColor borderColor} : string (default: #cccccc)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the background style of the tooltip.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_background = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_background with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_background.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getBorderColor borderColor}.
 * 
 * Define the background border color of the tooltip.
 * 
 * Default value is <code>#cccccc</code>.
 * @returns {string} Value of property <code>borderColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_background.prototype.getBorderColor = function() { return ""; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Define the background color of the tooltip.
 * 
 * Default value is <code>#ffffff</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_background.prototype.getColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_background.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_background.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getBorderColor borderColor}.
 * 
 * Define the background border color of the tooltip.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#cccccc</code>.
 * @param {string} sBorderColor New value for property <code>borderColor</code>
 * @returns {sap.viz.ui5.types.Tooltip_background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_background.prototype.setBorderColor = function(sBorderColor) { return new sap.viz.ui5.types.Tooltip_background(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Define the background color of the tooltip.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#ffffff</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Tooltip_background} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_background.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Tooltip_background(); };


// ---- sap.viz.ui5.types.Tooltip_bodyDimensionLabel --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyDimensionLabel
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColor color} : string (default: #666666)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the color of the dimension name of the tooltip body.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionLabel = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyDimensionLabel with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionLabel.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Property color
 * 
 * Default value is <code>#666666</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionLabel.prototype.getColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyDimensionLabel.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionLabel.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Property color
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#666666</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Tooltip_bodyDimensionLabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionLabel.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Tooltip_bodyDimensionLabel(); };


// ---- sap.viz.ui5.types.Tooltip_bodyDimensionValue --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyDimensionValue
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColor color} : string (default: #666666)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the color of the dimension value of the tooltip body.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionValue = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyDimensionValue with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionValue.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Property color
 * 
 * Default value is <code>#666666</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionValue.prototype.getColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyDimensionValue.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionValue.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Property color
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#666666</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Tooltip_bodyDimensionValue} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyDimensionValue.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Tooltip_bodyDimensionValue(); };


// ---- sap.viz.ui5.types.Tooltip_bodyMeasureLabel --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyMeasureLabel
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColor color} : string (default: #666666)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the color of the measure name of the tooltip body.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureLabel = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyMeasureLabel with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureLabel.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Property color
 * 
 * Default value is <code>#666666</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureLabel.prototype.getColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyMeasureLabel.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureLabel.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Property color
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#666666</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Tooltip_bodyMeasureLabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureLabel.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Tooltip_bodyMeasureLabel(); };


// ---- sap.viz.ui5.types.Tooltip_bodyMeasureValue --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyMeasureValue
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColor color} : string (default: #000000)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the color of the measure value of the tooltip body.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureValue = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyMeasureValue with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureValue.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Property color
 * 
 * Default value is <code>#000000</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureValue.prototype.getColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyMeasureValue.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureValue.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Property color
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#000000</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Tooltip_bodyMeasureValue} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_bodyMeasureValue.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Tooltip_bodyMeasureValue(); };


// ---- sap.viz.ui5.types.Tooltip_closeButton --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_closeButton
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getBackgroundColor backgroundColor} : string (default: #ffffff)</li>
 * <li>{@link #getBorderColor borderColor} : string (default: #cccccc)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the background and border color of tooltip close button.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_closeButton with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getBackgroundColor backgroundColor}.
 * 
 * Property backgroundColor
 * 
 * Default value is <code>#ffffff</code>.
 * @returns {string} Value of property <code>backgroundColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton.prototype.getBackgroundColor = function() { return ""; };

/**
 * Gets current value of property {@link #getBorderColor borderColor}.
 * 
 * Property borderColor
 * 
 * Default value is <code>#cccccc</code>.
 * @returns {string} Value of property <code>borderColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton.prototype.getBorderColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_closeButton.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getBackgroundColor backgroundColor}.
 * 
 * Property backgroundColor
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#ffffff</code>.
 * @param {string} sBackgroundColor New value for property <code>backgroundColor</code>
 * @returns {sap.viz.ui5.types.Tooltip_closeButton} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton.prototype.setBackgroundColor = function(sBackgroundColor) { return new sap.viz.ui5.types.Tooltip_closeButton(); };

/**
 * Sets a new value for property {@link #getBorderColor borderColor}.
 * 
 * Property borderColor
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#cccccc</code>.
 * @param {string} sBorderColor New value for property <code>borderColor</code>
 * @returns {sap.viz.ui5.types.Tooltip_closeButton} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_closeButton.prototype.setBorderColor = function(sBorderColor) { return new sap.viz.ui5.types.Tooltip_closeButton(); };


// ---- sap.viz.ui5.types.Tooltip_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.Tooltip_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.Tooltip_footerLabel --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_footerLabel
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getColor color} : string (default: #000000)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the style of the label of the tooltip footer.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_footerLabel = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_footerLabel with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_footerLabel.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getColor color}.
 * 
 * Define the color of the label of the tooltip footer.
 * 
 * Default value is <code>#000000</code>.
 * @returns {string} Value of property <code>color</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_footerLabel.prototype.getColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_footerLabel.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_footerLabel.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getColor color}.
 * 
 * Define the color of the label of the tooltip footer.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#000000</code>.
 * @param {string} sColor New value for property <code>color</code>
 * @returns {sap.viz.ui5.types.Tooltip_footerLabel} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_footerLabel.prototype.setColor = function(sColor) { return new sap.viz.ui5.types.Tooltip_footerLabel(); };


// ---- sap.viz.ui5.types.Tooltip_separationLine --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Tooltip_separationLine
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getBorderBottomColor borderBottomColor} : string (default: #a7a9ac)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Define the color of the value of the tooltip separation line.
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Tooltip_separationLine = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Tooltip_separationLine with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_separationLine.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getBorderBottomColor borderBottomColor}.
 * 
 * Property borderBottomColor
 * 
 * Default value is <code>#a7a9ac</code>.
 * @returns {string} Value of property <code>borderBottomColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_separationLine.prototype.getBorderBottomColor = function() { return ""; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Tooltip_separationLine.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Tooltip_separationLine.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getBorderBottomColor borderBottomColor}.
 * 
 * Property borderBottomColor
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#a7a9ac</code>.
 * @param {string} sBorderBottomColor New value for property <code>borderBottomColor</code>
 * @returns {sap.viz.ui5.types.Tooltip_separationLine} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_separationLine.prototype.setBorderBottomColor = function(sBorderBottomColor) { return new sap.viz.ui5.types.Tooltip_separationLine(); };


// ---- sap.viz.ui5.types.Treemap --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Treemap
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getStartColor startColor} : string (default: #C2E3A9)</li>
 * <li>{@link #getEndColor endColor} : string (default: #73C03C)</li>
 * <li>{@link #getColorPalette colorPalette} : string[]</li>
 * <li>{@link #getLegendValues legendValues} : int[]</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getBorder border} : sap.viz.ui5.types.Treemap_border</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.Treemap_animation</li>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.Treemap_tooltip</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.Treemap
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Treemap = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.Treemap(); };

/**
 * Destroys the border in the aggregation {@link #getBorder border}.
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.destroyBorder = function() { return new sap.viz.ui5.types.Treemap(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.Treemap(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.Treemap with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.Treemap_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getAnimation = function() { return new sap.viz.ui5.types.Treemap_animation(); };

/**
 * Gets content of aggregation {@link #getBorder border}.
 * 
 * Settings for the border
 * 
 * @returns {sap.viz.ui5.types.Treemap_border}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getBorder = function() { return new sap.viz.ui5.types.Treemap_border(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79", "#D16A7C"].
 * 
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getEndColor endColor}.
 * 
 * Set the end color of the tree map
 * 
 * Default value is <code>#73C03C</code>.
 * @returns {string} Value of property <code>endColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getEndColor = function() { return ""; };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets current value of property {@link #getLegendValues legendValues}.
 * 
 * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend automatically calculates the values according to the data. If the number of values in the legendValues array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
 * 
 * @returns {int[]} Value of property <code>legendValues</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getLegendValues = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Treemap.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getStartColor startColor}.
 * 
 * Set the starting color of the tree map
 * 
 * Default value is <code>#C2E3A9</code>.
 * @returns {string} Value of property <code>startColor</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getStartColor = function() { return ""; };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip
 * 
 * @returns {sap.viz.ui5.types.Treemap_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.getToolTip = function() { return new sap.viz.ui5.types.Treemap_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.Treemap_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets the aggregated {@link #getBorder border}.
 * @param {sap.viz.ui5.types.Treemap_border} oBorder The border to set
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setBorder = function(oBorder) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79", "#D16A7C"].
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets a new value for property {@link #getEndColor endColor}.
 * 
 * Set the end color of the tree map
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#73C03C</code>.
 * @param {string} sEndColor New value for property <code>endColor</code>
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setEndColor = function(sEndColor) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets a new value for property {@link #getLegendValues legendValues}.
 * 
 * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend automatically calculates the values according to the data. If the number of values in the legendValues array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {int[]} sLegendValues New value for property <code>legendValues</code>
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setLegendValues = function(sLegendValues) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets a new value for property {@link #getStartColor startColor}.
 * 
 * Set the starting color of the tree map
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>#C2E3A9</code>.
 * @param {string} sStartColor New value for property <code>startColor</code>
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setStartColor = function(sStartColor) { return new sap.viz.ui5.types.Treemap(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.Treemap_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.Treemap} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.Treemap(); };


// ---- sap.viz.ui5.types.Treemap_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Treemap_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Treemap_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Treemap_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Treemap_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.Treemap_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.Treemap_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.Treemap_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.Treemap_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.Treemap_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.Treemap_animation(); };


// ---- sap.viz.ui5.types.Treemap_border --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Treemap_border
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVisible visible} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for the border
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Treemap_border = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Treemap_border with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap_border.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Treemap_border.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap_border.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVisible visible}.
 * 
 * Set the visibility of the zone edge
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>visible</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_border.prototype.getVisible = function() { return false; };

/**
 * Sets a new value for property {@link #getVisible visible}.
 * 
 * Set the visibility of the zone edge
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bVisible New value for property <code>visible</code>
 * @returns {sap.viz.ui5.types.Treemap_border} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_border.prototype.setVisible = function(bVisible) { return new sap.viz.ui5.types.Treemap_border(); };


// ---- sap.viz.ui5.types.Treemap_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.Treemap_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.Treemap_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.Treemap_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.Treemap_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.Treemap_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.Treemap_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.Treemap_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.Treemap_tooltip(); };


// ---- sap.viz.ui5.types.VerticalBar --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.VerticalBar
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getOrientation orientation} : sap.viz.ui5.types.VerticalBar_orientation (default: vertical)</li>
 * <li>{@link #getColorPalette colorPalette} : string[] (default: ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4'])</li>
 * <li>{@link #getPrimaryValuesColorPalette primaryValuesColorPalette} : string[] (default: ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'])</li>
 * <li>{@link #getSecondaryValuesColorPalette secondaryValuesColorPalette} : string[] (default: ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'])</li>
 * <li>{@link #getDrawingEffect drawingEffect} : sap.viz.ui5.types.VerticalBar_drawingEffect (default: normal)</li>
 * <li>{@link #getIsRoundCorner isRoundCorner} : boolean (default: false)</li>
 * <li>{@link #getFormatRules formatRules} : object[]</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getToolTip toolTip} : sap.viz.ui5.types.VerticalBar_tooltip</li>
 * <li>{@link #getAnimation animation} : sap.viz.ui5.types.VerticalBar_animation</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.VerticalBar
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.VerticalBar = function(sId,mSettings) {};
/**
 * Destroys the animation in the aggregation {@link #getAnimation animation}.
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.destroyAnimation = function() { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.destroyToolTip = function() { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Creates a new subclass of class sap.viz.ui5.types.VerticalBar with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.VerticalBar.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets content of aggregation {@link #getAnimation animation}.
 * 
 * Settings for animations in the plot area
 * 
 * @returns {sap.viz.ui5.types.VerticalBar_animation}
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getAnimation = function() { return new sap.viz.ui5.types.VerticalBar_animation(); };

/**
 * Gets current value of property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @returns {string[]} Value of property <code>colorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * Default value is <code>normal</code>.
 * @returns {sap.viz.ui5.types.VerticalBar_drawingEffect} Value of property <code>drawingEffect</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getDrawingEffect = function() { return new sap.viz.ui5.types.VerticalBar_drawingEffect(); };

/**
 * Gets current value of property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * @returns {object[]} Value of property <code>formatRules</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getFormatRules = function() { return new Array(); };

/**
 * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * Default value is <code>false</code>.
 * @returns {boolean} Value of property <code>isRoundCorner</code>
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getIsRoundCorner = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.VerticalBar.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.VerticalBar.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * Default value is <code>vertical</code>.
 * @returns {sap.viz.ui5.types.VerticalBar_orientation} Value of property <code>orientation</code>
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getOrientation = function() { return new sap.viz.ui5.types.VerticalBar_orientation(); };

/**
 * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @returns {string[]} Value of property <code>primaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getPrimaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @returns {string[]} Value of property <code>secondaryValuesColorPalette</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getSecondaryValuesColorPalette = function() { return new Array(); };

/**
 * Gets content of aggregation {@link #getToolTip toolTip}.
 * 
 * Settings for tooltip related properties
 * 
 * @returns {sap.viz.ui5.types.VerticalBar_tooltip}
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.getToolTip = function() { return new sap.viz.ui5.types.VerticalBar_tooltip(); };

/**
 * Sets the aggregated {@link #getAnimation animation}.
 * @param {sap.viz.ui5.types.VerticalBar_animation} oAnimation The animation to set
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setAnimation = function(oAnimation) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getColorPalette colorPalette}.
 * 
 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']</code>.
 * @param {string[]} sColorPalette New value for property <code>colorPalette</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setColorPalette = function(sColorPalette) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
 * 
 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>normal</code>.
 * @param {sap.viz.ui5.types.VerticalBar_drawingEffect} sDrawingEffect New value for property <code>drawingEffect</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setDrawingEffect = function(sDrawingEffect) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getFormatRules formatRules}.
 * 
 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {object[]} sFormatRules New value for property <code>formatRules</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setFormatRules = function(sFormatRules) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
 * 
 * Set whether bars have rounded corners
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>false</code>.
 * @param {boolean} bIsRoundCorner New value for property <code>isRoundCorner</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.19. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setIsRoundCorner = function(bIsRoundCorner) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getOrientation orientation}.
 * 
 * Set the orientation of the plot area.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>vertical</code>.
 * @param {sap.viz.ui5.types.VerticalBar_orientation} sOrientation New value for property <code>orientation</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setOrientation = function(sOrientation) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
 * 
 * Set the color palette for axis 1 in dual charts.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']</code>.
 * @param {string[]} sPrimaryValuesColorPalette New value for property <code>primaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setPrimaryValuesColorPalette = function(sPrimaryValuesColorPalette) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
 * 
 * Set the color palette for axis 2 in dual chart.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']</code>.
 * @param {string[]} sSecondaryValuesColorPalette New value for property <code>secondaryValuesColorPalette</code>
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setSecondaryValuesColorPalette = function(sSecondaryValuesColorPalette) { return new sap.viz.ui5.types.VerticalBar(); };

/**
 * Sets the aggregated {@link #getToolTip toolTip}.
 * @param {sap.viz.ui5.types.VerticalBar_tooltip} oToolTip The toolTip to set
 * @returns {sap.viz.ui5.types.VerticalBar} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar.prototype.setToolTip = function(oToolTip) { return new sap.viz.ui5.types.VerticalBar(); };


// ---- sap.viz.ui5.types.VerticalBar_animation --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.VerticalBar_animation
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getDataLoading dataLoading} : boolean (default: true)</li>
 * <li>{@link #getDataUpdating dataUpdating} : boolean (default: true)</li>
 * <li>{@link #getResizing resizing} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for animations in the plot area
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.VerticalBar_animation = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.VerticalBar_animation with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataLoading</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.prototype.getDataLoading = function() { return false; };

/**
 * Gets current value of property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>dataUpdating</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.prototype.getDataUpdating = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.VerticalBar_animation.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>resizing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.prototype.getResizing = function() { return false; };

/**
 * Sets a new value for property {@link #getDataLoading dataLoading}.
 * 
 * Set whether the data loading animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataLoading New value for property <code>dataLoading</code>
 * @returns {sap.viz.ui5.types.VerticalBar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.prototype.setDataLoading = function(bDataLoading) { return new sap.viz.ui5.types.VerticalBar_animation(); };

/**
 * Sets a new value for property {@link #getDataUpdating dataUpdating}.
 * 
 * Set whether the data updating animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bDataUpdating New value for property <code>dataUpdating</code>
 * @returns {sap.viz.ui5.types.VerticalBar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.prototype.setDataUpdating = function(bDataUpdating) { return new sap.viz.ui5.types.VerticalBar_animation(); };

/**
 * Sets a new value for property {@link #getResizing resizing}.
 * 
 * Set whether the resizing animation is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bResizing New value for property <code>resizing</code>
 * @returns {sap.viz.ui5.types.VerticalBar_animation} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_animation.prototype.setResizing = function(bResizing) { return new sap.viz.ui5.types.VerticalBar_animation(); };


// ---- sap.viz.ui5.types.VerticalBar_drawingEffect --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.VerticalBar_drawingEffect.toString = function() { return ""; };

// ---- sap.viz.ui5.types.VerticalBar_orientation --------------------------------------------------------------------------

// dummy function to make Eclipse aware of namespace
sap.viz.ui5.types.VerticalBar_orientation.toString = function() { return ""; };

// ---- sap.viz.ui5.types.VerticalBar_tooltip --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.VerticalBar_tooltip
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getEnabled enabled} : boolean (default: true)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Settings for tooltip related properties
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.12. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.VerticalBar_tooltip = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.VerticalBar_tooltip with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.VerticalBar_tooltip.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Gets current value of property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * Default value is <code>true</code>.
 * @returns {boolean} Value of property <code>enabled</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_tooltip.prototype.getEnabled = function() { return false; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.VerticalBar_tooltip.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.VerticalBar_tooltip.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Sets a new value for property {@link #getEnabled enabled}.
 * 
 * Set whether the tooltip is enabled
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>true</code>.
 * @param {boolean} bEnabled New value for property <code>enabled</code>
 * @returns {sap.viz.ui5.types.VerticalBar_tooltip} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_tooltip.prototype.setEnabled = function(bEnabled) { return new sap.viz.ui5.types.VerticalBar_tooltip(); };


// ---- sap.viz.ui5.types.XYContainer --------------------------------------------------------------------------

/**
 * Constructor for a new sap.viz.ui5.types.XYContainer
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getYAngle yAngle} : float (default: 0)</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.core.BaseStructuredType#constructor sap.viz.ui5.core.BaseStructuredType}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @classdesc Module sap.viz.ui5.types.XYContainer
 * @extends sap.viz.ui5.core.BaseStructuredType
 * 
 * @constructor
 * @public
 * @since 1.7.2
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.7.2. 
 * Charting API is not finished yet and might change completely.
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.types.XYContainer = function(sId,mSettings) {};
/**
 * Creates a new subclass of class sap.viz.ui5.types.XYContainer with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.XYContainer.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Returns a metadata object for class sap.viz.ui5.types.XYContainer.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.types.XYContainer.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getYAngle yAngle}.
 * 
 * Set the angle for the pie chart. This value should be between '-180' and '180'.
 * 
 * Default value is <code>0</code>.
 * @returns {float} Value of property <code>yAngle</code>
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.XYContainer.prototype.getYAngle = function() { return 0.0; };

/**
 * Sets a new value for property {@link #getYAngle yAngle}.
 * 
 * Set the angle for the pie chart. This value should be between '-180' and '180'.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * Default value is <code>0</code>.
 * @param {float} fYAngle New value for property <code>yAngle</code>
 * @returns {sap.viz.ui5.types.XYContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @deprecated Since version 1.20. 
 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
 * 
 * @public
 * 
 */
sap.viz.ui5.types.XYContainer.prototype.setYAngle = function(fYAngle) { return new sap.viz.ui5.types.XYContainer(); };


// ---- sap.viz.ui5.VizContainer --------------------------------------------------------------------------

/**
 * Constructor for a new ui5/VizContainer.
 * 
 * 
 * Accepts an object literal <code>mSettings</code> that defines initial
 * property values, aggregated and associated objects as well as event handlers.
 * See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.
 * 
 * @ui5-settings
 * The supported settings are:
 * <ul>
 * <li>Properties
 * <ul>
 * <li>{@link #getVizType vizType} : string</li>
 * <li>{@link #getVizCss vizCss} : string</li>
 * <li>{@link #getVizProperties vizProperties} : object</li>
 * <li>{@link #getEnableMorphing enableMorphing} : boolean</li>
 * </ul>
 * </li>
 * <li>Aggregations
 * <ul>
 * <li>{@link #getVizData vizData} : sap.viz.ui5.data.Dataset</li>
 * <li>{@link #getAnalysisObjectsForPicker analysisObjectsForPicker} : sap.viz.ui5.controls.common.feeds.AnalysisObject[]</li>
 * <li>{@link #getFeeds feeds} : sap.viz.ui5.controls.common.feeds.FeedItem[]</li>
 * </ul>
 * </li>
 * <li>Events
 * <ul>
 * <li>{@link #event:feedsChanged feedsChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:vizTypeChanged vizTypeChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:vizDefinitionChanged vizDefinitionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:showTooltip showTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:hideTooltip hideTooltip} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * <li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>
 * </ul>
 * </li>
 * </ul>
 * 
 * In addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}
 * can be used as well.
 * 
 * @param {string} [sId] id for the new control, generated automatically if no id is given 
 * @param {object} [mSettings] initial settings for the new control
 * 
 * @class
 * Controls ui5/VizContainer
 * @extends sap.viz.ui5.controls.common.BaseControl
 * 
 * @constructor
 * @public
 * @since 1.19.0
 * @deprecated Since version 1.32.0. 
 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
 * SAPUI5 distribution for backward compatibility. 
 * 
 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
 * control to benefit from new charting enhancements and timely support. </b>
 * 
 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
 * @experimental Since version 1.19.0 
 * API is not finished yet and might change completely
 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
 * 
 */
sap.viz.ui5.VizContainer = function(sId,mSettings) {};
/**
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.deselectData = function(oControlEvent) {  };

/**
 * Dispatches "feedsChanged" event when the feeding changes due to add/remove/change feeding items on feeding panel, drag and drop object onto VizFrame, or switch chart type by UI operation.
 * Application should listen to "feedsChanged" event to get the corresponding data and set it back to VizFrame to to update the visualization with the new data.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem[]} oControlEvent.getParameters.feeds An array of changed feeds.
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.feedsChanged = function(oControlEvent) {  };

/**
 * Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.hideTooltip = function(oControlEvent) {  };

/**
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.initialized = function(oControlEvent) {  };

/**
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.selectData = function(oControlEvent) {  };

/**
 * Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //data of one group
 * name:"...",val:[{
 * //data of one row
 * color:"...",label:"...",shape:"...",value:"..."},"..."]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."}}}
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.showTooltip = function(oControlEvent) {  };

/**
 * Dispatches "vizDefinitionChanged" event when viz definition was changed.
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.vizDefinitionChanged = function(oControlEvent) {  };

/**
 * Dispatches "vizTypeChanged" event when viz type was changed
 * @event
 * 
 * @param {sap.ui.base.Event} oControlEvent
 * @param {sap.ui.base.EventProvider} oControlEvent.getSource
 * @param {object} oControlEvent.getParameters
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.vizTypeChanged = function(oControlEvent) {  };

/**
 * Adds some analysisObjectsForPicker to the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * @param {sap.viz.ui5.controls.common.feeds.AnalysisObject}
 *            oAnalysisObjectsForPicker the analysisObjectsForPicker to add; if empty, nothing is inserted
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.addAnalysisObjectsForPicker = function(oAnalysisObjectsForPicker) { return new sap.viz.ui5.VizContainer(); };

/**
 * Adds some feed to the aggregation {@link #getFeeds feeds}.
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem}
 *            oFeed the feed to add; if empty, nothing is inserted
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.addFeed = function(oFeed) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachDeselectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:feedsChanged feedsChanged} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Dispatches "feedsChanged" event when the feeding changes due to add/remove/change feeding items on feeding panel, drag and drop object onto VizFrame, or switch chart type by UI operation.
 * Application should listen to "feedsChanged" event to get the corresponding data and set it back to VizFrame to to update the visualization with the new data.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachFeedsChanged = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Event fires when the mouse hover out of the specific part of chart, no data is passed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachHideTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachInitialized = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
 * //selected element's detail
 * target:"Dom Element",//an object pointed to corresponding dom element
 * data:[{val: "...",//value of this element
 * ctx:{type:"Dimension"||"Measure"||"MND",
 * //for Dimension
 * path:{aa:"...",di:"...",dii:"..."},
 * //for Measure
 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
 * //for MND
 * path:{mg:"...",mi:"..."}
 * //path: analysis path
 * //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2
 * //di: dimension index //zero based
 * //dii: dimension item index //zero based
 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
 * //mi: measure index // measure index in measure group zero based
 * //dii_a1: each dii of di in analysis axis 1 index
 * //dii_a2: each dii of di in analysis axis 2 index
 * }},{
 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
 * var:"...",ctx:"..."}]},{
 * //if under multi selection, there will be more than one selected elements
 * target:"...",data:["..."]}]}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachSelectData = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
 * //data of one group
 * name:"...",val:[{
 * //data of one row
 * color:"...",label:"...",shape:"...",value:"..."},"..."]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
 * //this object specifies the plot area of the chart
 * height:"...",width:"...",x:"...",y:"..."},point:{
 * //this object specifies a point which affects the position of tooltip
 * x:"...",y:"..."}}}
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachShowTooltip = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:vizDefinitionChanged vizDefinitionChanged} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Dispatches "vizDefinitionChanged" event when viz definition was changed.
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachVizDefinitionChanged = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Attaches event handler <code>fnFunction</code> to the {@link #event:vizTypeChanged vizTypeChanged} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, 
 * otherwise it will be bound to this <code>sap.viz.ui5.VizContainer</code> itself.
 * 
 * Dispatches "vizTypeChanged" event when viz type was changed
 * 
 * @param {object}
 *            [oData] An application-specific payload object that will be passed to the event handler along with the event object when firing the event
 * @param {function}
 *            fnFunction The function to be called when the event occurs
 * @param {object}
 *            [oListener] Context object to call the event handler with. Defaults to this <code>sap.viz.ui5.VizContainer</code> itself
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.attachVizTypeChanged = function(oData,fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Destroys all the analysisObjectsForPicker in the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.destroyAnalysisObjectsForPicker = function() { return new sap.viz.ui5.VizContainer(); };

/**
 * Destroys all the feeds in the aggregation {@link #getFeeds feeds}.
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.destroyFeeds = function() { return new sap.viz.ui5.VizContainer(); };

/**
 * Destroys the vizData in the aggregation {@link #getVizData vizData}.
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.destroyVizData = function() { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:deselectData deselectData} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachDeselectData = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:feedsChanged feedsChanged} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachFeedsChanged = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:hideTooltip hideTooltip} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachHideTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachInitialized = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:selectData selectData} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachSelectData = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:showTooltip showTooltip} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachShowTooltip = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:vizDefinitionChanged vizDefinitionChanged} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachVizDefinitionChanged = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Detaches event handler <code>fnFunction</code> from the {@link #event:vizTypeChanged vizTypeChanged} event of this <code>sap.viz.ui5.VizContainer</code>.
 * 
 * The passed function and listener object must match the ones used for event registration.
 * 
 * @param {function}
 *            fnFunction The function to be called, when the event occurs
 * @param {object}
 *            oListener Context object on which the given function had to be called
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.detachVizTypeChanged = function(fnFunction,oListener) { return new sap.viz.ui5.VizContainer(); };

/**
 * Creates a new subclass of class sap.viz.ui5.VizContainer with name <code>sClassName</code>
 * and enriches it with the information contained in <code>oClassInfo</code>.
 * 
 * <code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
 * 
 * @param {string} sClassName Name of the class being created
 * @param {object} [oClassInfo] Object literal with information about the class
 * @param {function} [FNMetaImpl] Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>
 * @returns {function} Created class / constructor function
 * @public
 * @static
 * 
 */
sap.viz.ui5.VizContainer.extend = function(sClassName,oClassInfo,FNMetaImpl) { return function() {}; };

/**
 * Fires event {@link #event:deselectData deselectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireDeselectData = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:feedsChanged feedsChanged} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem[]} [mParameters.feeds] An array of changed feeds.
 * 
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireFeedsChanged = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireHideTooltip = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:initialized initialized} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireInitialized = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:selectData selectData} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireSelectData = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireShowTooltip = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:vizDefinitionChanged vizDefinitionChanged} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireVizDefinitionChanged = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Fires event {@link #event:vizTypeChanged vizTypeChanged} to attached listeners.
 * 
 * @param {object} [mParameters] Parameters to pass along with the event
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * @protected
 * 
 */
sap.viz.ui5.VizContainer.prototype.fireVizTypeChanged = function(mParameters) { return new sap.viz.ui5.VizContainer(); };

/**
 * Gets content of aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * 
 * Available sap.viz.ui5.controls.common.feeds.AnalysisObject for object picker popup UI
 * 
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject[]}
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getAnalysisObjectsForPicker = function() { return new Array(); };

/**
 * Gets current value of property {@link #getEnableMorphing enableMorphing}.
 * 
 * Enable morphing for visualization.
 * 
 * @returns {boolean} Value of property <code>enableMorphing</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getEnableMorphing = function() { return false; };

/**
 * Gets content of aggregation {@link #getFeeds feeds}.
 * 
 * All feeds for chart.
 * 
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem[]}
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getFeeds = function() { return new Array(); };

/**
 * Returns a metadata object for class sap.viz.ui5.VizContainer.
 * 
 * @returns {sap.ui.base.Metadata} Metadata object describing this class
 * @public
 * @static
 * 
 */
sap.viz.ui5.VizContainer.getMetadata = function() { return new sap.ui.base.Metadata(); };

/**
 * Gets current value of property {@link #getVizCss vizCss}.
 * 
 * Css for visualization.
 * 
 * @returns {string} Value of property <code>vizCss</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getVizCss = function() { return ""; };

/**
 * Gets content of aggregation {@link #getVizData vizData}.
 * 
 * Dataset for chart.
 * 
 * @returns {sap.viz.ui5.data.Dataset}
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getVizData = function() { return new sap.viz.ui5.data.Dataset(); };

/**
 * Gets current value of property {@link #getVizProperties vizProperties}.
 * 
 * Properties for visualization.
 * 
 * @returns {object} Value of property <code>vizProperties</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getVizProperties = function() { return new Object(); };

/**
 * Gets current value of property {@link #getVizType vizType}.
 * 
 * Type for visualization.
 * 
 * @returns {string} Value of property <code>vizType</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.getVizType = function() { return ""; };

/**
 * Checks for the provided <code>sap.viz.ui5.controls.common.feeds.AnalysisObject</code> in the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * and returns its index if found or -1 otherwise.
 * @param {sap.viz.ui5.controls.common.feeds.AnalysisObject}
 *           oAnalysisObjectsForPicker The analysisObjectsForPicker whose index is looked for
 * @returns {int} The index of the provided control in the aggregation if found, or -1 otherwise
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.indexOfAnalysisObjectsForPicker = function(oAnalysisObjectsForPicker) { return 0; };

/**
 * Checks for the provided <code>sap.viz.ui5.controls.common.feeds.FeedItem</code> in the aggregation {@link #getFeeds feeds}.
 * and returns its index if found or -1 otherwise.
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem}
 *           oFeed The feed whose index is looked for
 * @returns {int} The index of the provided control in the aggregation if found, or -1 otherwise
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.indexOfFeed = function(oFeed) { return 0; };

/**
 * Inserts a analysisObjectsForPicker into the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * 
 * @param {sap.viz.ui5.controls.common.feeds.AnalysisObject}
 *            oAnalysisObjectsForPicker the analysisObjectsForPicker to insert; if empty, nothing is inserted
 * @param {int}
 *              iIndex the <code>0</code>-based index the analysisObjectsForPicker should be inserted at; for
 *              a negative value of <code>iIndex</code>, the analysisObjectsForPicker is inserted at position 0; for a value
 *              greater than the current size of the aggregation, the analysisObjectsForPicker is inserted at
 *              the last position
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.insertAnalysisObjectsForPicker = function(oAnalysisObjectsForPicker,iIndex) { return new sap.viz.ui5.VizContainer(); };

/**
 * Inserts a feed into the aggregation {@link #getFeeds feeds}.
 * 
 * @param {sap.viz.ui5.controls.common.feeds.FeedItem}
 *            oFeed the feed to insert; if empty, nothing is inserted
 * @param {int}
 *              iIndex the <code>0</code>-based index the feed should be inserted at; for
 *              a negative value of <code>iIndex</code>, the feed is inserted at position 0; for a value
 *              greater than the current size of the aggregation, the feed is inserted at
 *              the last position
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.insertFeed = function(oFeed,iIndex) { return new sap.viz.ui5.VizContainer(); };

/**
 * Removes all the controls from the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * 
 * Additionally, it unregisters them from the hosting UIArea.
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject[]} An array of the removed elements (might be empty)
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.removeAllAnalysisObjectsForPicker = function() { return new Array(); };

/**
 * Removes all the controls from the aggregation {@link #getFeeds feeds}.
 * 
 * Additionally, it unregisters them from the hosting UIArea.
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem[]} An array of the removed elements (might be empty)
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.removeAllFeeds = function() { return new Array(); };

/**
 * Removes a analysisObjectsForPicker from the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
 * 
 * @param {int | string | sap.viz.ui5.controls.common.feeds.AnalysisObject} vAnalysisObjectsForPicker The analysisObjectsForPicker to remove or its index or id
 * @returns {sap.viz.ui5.controls.common.feeds.AnalysisObject} The removed analysisObjectsForPicker or <code>null</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.removeAnalysisObjectsForPicker = function(vAnalysisObjectsForPicker) { return new sap.viz.ui5.controls.common.feeds.AnalysisObject(); };

/**
 * Removes a feed from the aggregation {@link #getFeeds feeds}.
 * 
 * @param {int | string | sap.viz.ui5.controls.common.feeds.FeedItem} vFeed The feed to remove or its index or id
 * @returns {sap.viz.ui5.controls.common.feeds.FeedItem} The removed feed or <code>null</code>
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.removeFeed = function(vFeed) { return new sap.viz.ui5.controls.common.feeds.FeedItem(); };

/**
 * Setter for property enableMorphing. If set true, a tween animation will play
 * when chart changed.
 * 
 * @param {boolean}
 *            bEnableMorphing
 * @returns {sap.viz.ui5.VizContainer}
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.setEnableMorphing = function(bEnableMorphing) { return new sap.viz.ui5.VizContainer(); };

/**
 * Sets a new value for property {@link #getVizCss vizCss}.
 * 
 * Css for visualization.
 * 
 * When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.
 * 
 * @param {string} sVizCss New value for property <code>vizCss</code>
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.setVizCss = function(sVizCss) { return new sap.viz.ui5.VizContainer(); };

/**
 * Sets the aggregated {@link #getVizData vizData}.
 * @param {sap.viz.ui5.data.Dataset} oVizData The vizData to set
 * @returns {sap.viz.ui5.VizContainer} Reference to <code>this</code> in order to allow method chaining
 * 
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.setVizData = function(oVizData) { return new sap.viz.ui5.VizContainer(); };

/**
 * Properties for visualization. Example:
 * 
 * <pre>
 *  var vizContainer = new sap.viz.ui5.VizContainer(...);
 *  var properties = {
 *      'dataLabel' : {'visible' : true },
 *      'legend' : { &quot;visible&quot; : true },
 *      'direction' : 'horizontal',
 *      'stacking' : 'normal'
 * };
 * vizContainer.setVizProperties(properties);
 * </pre>
 * 
 * @param {object}
 *            oVizProperties
 * @returns {sap.viz.ui5.VizContainer}
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.setVizProperties = function(oVizProperties) { return new sap.viz.ui5.VizContainer(); };

/**
 * Setter for property vizType. A string of supported viz type: viz/column,
 * viz/stacked_column, viz/dual_column, viz/line, viz/area, viz/combination,
 * viz/dual_line, viz/dual_combination, viz/pie, viz/donut, viz/scatter,
 * viz/bubble, viz/heatmap, viz/treemap.
 * 
 * @param {string}
 *            sVizType
 * @returns {sap.viz.ui5.VizContainer}
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.setVizType = function(sVizType) { return new sap.viz.ui5.VizContainer(); };

/**
 * Selections for visualization. Example:
 * 
 * <pre>
 *  var vizContainer = new sap.viz.ui5.VizContainer(...);
 *  var points = [{
 *      data : {
 *      	&quot;Country&quot; : &quot;China&quot;,
 *          &quot;Year&quot; : &quot;2001&quot;,
 *          &quot;Product&quot; : &quot;Car&quot;,
 *          &quot;Profit&quot; : 25
 *      }}, {
 *      data : {
 *      	&quot;Country&quot; : &quot;China&quot;,
 *          &quot;Year&quot; : &quot;2001&quot;,
 *          &quot;Product&quot; : &quot;Trunk&quot;,
 *          &quot;Profit&quot; : 34
 *      }}];
 *  var action = {
 *  	clearSelection : true
 *  };
 * vizContainer.vizSelection(points, action);
 * </pre>
 * 
 * @param {object[]}
 *            aPoints some data points of the chart
 * @param {object}
 *            oAction whether to clear previous selection, by default the
 *            selection will be incremental selection
 * @returns {sap.viz.ui5.VizContainer}
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.vizSelection = function(aPoints,oAction) { return new sap.viz.ui5.VizContainer(); };

/**
 * Update VizContainer according to a JSON object, it can update css,
 * properties, feeds and data model. Example:
 * 
 * <pre>
 * var vizContainer = new sap.viz.ui5.VizContainer(...);
 * var vizData = new sap.viz.ui5.data.FlattenedDataset({
 *     'dimensions' : [{
 *         axis: 1,
 *         name: &quot;Country&quot;,
 *         value: &quot;{Country}&quot;
 *         },{
 *         axis: 2,
 *         name: &quot;City&quot;
 *         value: &quot;{City}&quot;  
 *      }],
 *      'measures' : [{
 *          group: 1,
 *          name: &quot;Quantity sold&quot;,
 *          value: &quot;{Quantity sold}&quot;
 *       }],
 *       'data' : {
 *           'path' : &quot;/rawData&quot;
 *       }
 * });
 * var cssString = 'position:absolute;left:0px;top:0px;';
 * var properties = {
 *     'dataLabel' : {'visible' : true },
 *     'legend' : {&quot;visible&quot; : true},
 *     'direction' : 'horizontal',
 *     'stacking' : 'normal'
 * };
 * var FeedItem = sap.viz.ui5.controls.common.feeds.FeedItem;
 * var feeds = [
 *     new FeedItem({'uid' : 'primaryValues', 
 *                   'type' : 'Measure',
 *                   'values' []}),
 *     new FeedItem({'uid' : 'regionColor', 
 *                   'type' : 'Dimension',
 *                   'values' []})];  
 * vizContainer.vizUpdate({
 *               'data' : vizData,
 *               'css' : cssString,
 *               'properties' : properties, 
 *               'feeds' : feeds
 *           });
 * </pre>
 * 
 * @param {object}
 *            oOptions a JSON object contains combination of css, properties,
 *            feeds and data model.
 * @returns {sap.viz.ui5.VizContainer}
 * @public
 * 
 */
sap.viz.ui5.VizContainer.prototype.vizUpdate = function(oOptions) { return new sap.viz.ui5.VizContainer(); };

// ---- static fields of namespaces ---------------------------------------------------------------------

// ---- sap.viz.ui5.format.ChartFormatter.DefaultPattern --------------------------------------------------------------------------

/**
 * Binary file size
 * 
 * e.g. 1 Kibibyte = 1024 Byte
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.BINARYFILESIZE = "";

/**
 * type: Currency
 * 
 * style: "standard"
 * 
 * e.g. 234234.234 is formatted as 234,234.23
 * @public
 * @deprecated Since version 1.48.0.
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.CURRENCY = "";

/**
 * Decimal file size
 * 
 * e.g. 1 Kilobyte = 1000 Byte
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.DECIMALFILESIZE = "";

/**
 * type: Float
 * 
 * style: "long"
 * 
 * e.g. 2.3 million
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.LONGFLOAT = "";

/**
 * Medium day
 * 
 * e.g. 01
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMDAY = "";

/**
 * Medium hour
 * 
 * e.g. 18
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMHOUR = "";

/**
 * Medium minute
 * 
 * e.g. 18
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMMINUTE = "";

/**
 * Medium month
 * 
 * e.g. Aug
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMMONTH = "";

/**
 * Medium quarter
 * 
 * e.g. Q3
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMQUARTER = "";

/**
 * Medium second
 * 
 * e.g. 59
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMSECOND = "";

/**
 * Medium week
 * 
 * e.g. CW35
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMWEEK = "";

/**
 * Medium year
 * 
 * e.g. 2015
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMYEAR = "";

/**
 * Medium format pattern for combination of year, month, and day
 * 
 * e.g. Aug 28, 2015
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.MEDIUMYEARMONTHDAY = "";

/**
 * type: Percentage
 * 
 * style: "standard"
 * 
 * e.g. 0.0234 is formatted as 2.34%
 * @public
 * @deprecated Since version 1.48.0.
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.PERCENT = "";

/**
 * Quarter
 * 
 * e.g. Q3
 * @public
 * @deprecated Since version 1.48.0.
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.QUARTER = "";

/**
 * 
 * type: Float
 * 
 * style: "short"
 * 
 * e.g. 2.3M
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.SHORTFLOAT = "";

/**
 * type: Float
 * 
 * style: "short"
 * 
 * maxFractionDigits: 2
 * 
 * e.g. 2.34234234 is formatted as 2.34
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.SHORTFLOAT_MFD2 = "";

/**
 * 
 * type: Integer
 * 
 * style: "short"
 * 
 * e.g. 234M
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.SHORTINTEGER = "";

/**
 * type: Currency
 * 
 * style: "standard"
 * 
 * e.g. 234234.234 is formatted as 234,234.23
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.STANDARDCURRENCY = "";

/**
 * 
 * type: Float
 * 
 * style: "standard"
 * 
 * e.g. 234,234.234
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.STANDARDFLOAT = "";

/**
 * 
 * type: Integer
 * 
 * style: "standard"
 * 
 * e.g. 234234234
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.STANDARDINTEGER = "";

/**
 * type: Percentage
 * 
 * style: "standard"
 * 
 * e.g. 0.0234234 is formatted as 2.34234%
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.STANDARDPERCENT = "";

/**
 * type: Percentage
 * 
 * style: "standard"
 * 
 * maxFractionDigits: 2
 * 
 * e.g. 0.0234234 is formatted as 2.34%
 * @public
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.STANDARDPERCENT_MFD2 = "";

/**
 * Week
 * 
 * e.g. CW35
 * @public
 * @deprecated Since version 1.48.0.
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.WEEK = "";

/**
 * Format pattern for combination of year, month, and day
 * 
 * e.g. Aug 28, 2015
 * @public
 * @deprecated Since version 1.48.0.
 * 
 */
sap.viz.ui5.format.ChartFormatter.DefaultPattern.YEARMONTHDAY = "";


// ---- sap.viz.ui5.types.Area_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Area_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Area_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Area_marker_shape --------------------------------------------------------------------------

/**
 * Value circle
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.circle = "";

/**
 * Value cross
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.cross = "";

/**
 * Value diamond
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.diamond = "";

/**
 * Value intersection
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.intersection = "";

/**
 * Value triangleDown
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.triangleDown = "";

/**
 * Value triangleLeft
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.triangleLeft = "";

/**
 * Value triangleRight
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.triangleRight = "";

/**
 * Value triangleUp
 * @public
 * 
 */
sap.viz.ui5.types.Area_marker_shape.triangleUp = "";


// ---- sap.viz.ui5.types.Area_mode --------------------------------------------------------------------------

/**
 * Value comparison
 * @public
 * 
 */
sap.viz.ui5.types.Area_mode.comparison = "";

/**
 * Value percentage
 * @public
 * 
 */
sap.viz.ui5.types.Area_mode.percentage = "";


// ---- sap.viz.ui5.types.Area_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Area_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Area_orientation.vertical = "";


// ---- sap.viz.ui5.types.Axis_gridline_type --------------------------------------------------------------------------

/**
 * Value dotted
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline_type.dotted = "";

/**
 * Value incised
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline_type.incised = "";

/**
 * Value line
 * @public
 * 
 */
sap.viz.ui5.types.Axis_gridline_type.line = "";


// ---- sap.viz.ui5.types.Axis_label_unitFormatType --------------------------------------------------------------------------

/**
 * Value FinancialUnits
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label_unitFormatType.FinancialUnits = "";

/**
 * Value MetricUnits
 * @public
 * 
 */
sap.viz.ui5.types.Axis_label_unitFormatType.MetricUnits = "";


// ---- sap.viz.ui5.types.Axis_position --------------------------------------------------------------------------

/**
 * Value bottom
 * @public
 * 
 */
sap.viz.ui5.types.Axis_position.bottom = "";

/**
 * Value left
 * @public
 * 
 */
sap.viz.ui5.types.Axis_position.left = "";

/**
 * Value right
 * @public
 * 
 */
sap.viz.ui5.types.Axis_position.right = "";

/**
 * Value top
 * @public
 * 
 */
sap.viz.ui5.types.Axis_position.top = "";


// ---- sap.viz.ui5.types.Axis_type --------------------------------------------------------------------------

/**
 * Value category
 * @public
 * 
 */
sap.viz.ui5.types.Axis_type.category = "";

/**
 * Value timeValue
 * @public
 * 
 */
sap.viz.ui5.types.Axis_type.timeValue = "";

/**
 * Value value
 * @public
 * 
 */
sap.viz.ui5.types.Axis_type.value = "";


// ---- sap.viz.ui5.types.Background_direction --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Background_direction.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Background_direction.vertical = "";


// ---- sap.viz.ui5.types.Background_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Background_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Background_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Bar_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Bar_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Bar_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Bar_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Bar_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Bar_orientation.vertical = "";


// ---- sap.viz.ui5.types.Bubble_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Bubble_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Bullet_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Bullet_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Bullet_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Bullet_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Bullet_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Bullet_orientation.vertical = "";


// ---- sap.viz.ui5.types.Combination_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Combination_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Combination_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Combination_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Combination_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Combination_orientation.vertical = "";


// ---- sap.viz.ui5.types.controller.Interaction_pan_orientation --------------------------------------------------------------------------

/**
 * Value both
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan_orientation.both = "";

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_pan_orientation.vertical = "";


// ---- sap.viz.ui5.types.controller.Interaction_selectability_mode --------------------------------------------------------------------------

/**
 * Value exclusive
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability_mode.exclusive = "";

/**
 * Value inclusive
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability_mode.inclusive = "";

/**
 * Value multiple
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability_mode.multiple = "";

/**
 * Value none
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability_mode.none = "";

/**
 * Value single
 * @public
 * 
 */
sap.viz.ui5.types.controller.Interaction_selectability_mode.single = "";


// ---- sap.viz.ui5.types.Datalabel_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_orientation.vertical = "";


// ---- sap.viz.ui5.types.Datalabel_outsidePosition --------------------------------------------------------------------------

/**
 * Value down
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_outsidePosition.down = "";

/**
 * Value left
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_outsidePosition.left = "";

/**
 * Value right
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_outsidePosition.right = "";

/**
 * Value up
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_outsidePosition.up = "";


// ---- sap.viz.ui5.types.Datalabel_paintingMode --------------------------------------------------------------------------

/**
 * Value polarCoordinate
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_paintingMode.polarCoordinate = "";

/**
 * Value rectCoordinate
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_paintingMode.rectCoordinate = "";


// ---- sap.viz.ui5.types.Datalabel_position --------------------------------------------------------------------------

/**
 * Value inside
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_position.inside = "";

/**
 * Value outside
 * @public
 * 
 */
sap.viz.ui5.types.Datalabel_position.outside = "";


// ---- sap.viz.ui5.types.legend.Common_alignment --------------------------------------------------------------------------

/**
 * Value end
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_alignment.end = "";

/**
 * Value middle
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_alignment.middle = "";

/**
 * Value start
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_alignment.start = "";


// ---- sap.viz.ui5.types.legend.Common_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.legend.Common_position --------------------------------------------------------------------------

/**
 * Value bottom
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_position.bottom = "";

/**
 * Value left
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_position.left = "";

/**
 * Value right
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_position.right = "";

/**
 * Value top
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_position.top = "";


// ---- sap.viz.ui5.types.legend.Common_type --------------------------------------------------------------------------

/**
 * Value BubbleColorLegend
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_type.BubbleColorLegend = "";

/**
 * Value ColorLegend
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_type.ColorLegend = "";

/**
 * Value MeasureBasedColoringLegend
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_type.MeasureBasedColoringLegend = "";

/**
 * Value SizeLegend
 * @public
 * 
 */
sap.viz.ui5.types.legend.Common_type.SizeLegend = "";


// ---- sap.viz.ui5.types.Legend_layout_position --------------------------------------------------------------------------

/**
 * Value bottom
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout_position.bottom = "";

/**
 * Value left
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout_position.left = "";

/**
 * Value right
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout_position.right = "";

/**
 * Value top
 * @public
 * 
 */
sap.viz.ui5.types.Legend_layout_position.top = "";


// ---- sap.viz.ui5.types.Line_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Line_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Line_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Line_marker_shape --------------------------------------------------------------------------

/**
 * Value circle
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.circle = "";

/**
 * Value cross
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.cross = "";

/**
 * Value diamond
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.diamond = "";

/**
 * Value intersection
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.intersection = "";

/**
 * Value triangleDown
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.triangleDown = "";

/**
 * Value triangleLeft
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.triangleLeft = "";

/**
 * Value triangleRight
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.triangleRight = "";

/**
 * Value triangleUp
 * @public
 * 
 */
sap.viz.ui5.types.Line_marker_shape.triangleUp = "";


// ---- sap.viz.ui5.types.Line_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.Line_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.Line_orientation.vertical = "";


// ---- sap.viz.ui5.types.Pie_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Pie_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Pie_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.Pie_valign --------------------------------------------------------------------------

/**
 * Value center
 * @public
 * 
 */
sap.viz.ui5.types.Pie_valign.center = "";

/**
 * Value top
 * @public
 * 
 */
sap.viz.ui5.types.Pie_valign.top = "";


// ---- sap.viz.ui5.types.Scatter_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Scatter_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.StackedVerticalBar_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.StackedVerticalBar_mode --------------------------------------------------------------------------

/**
 * Value comparison
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_mode.comparison = "";

/**
 * Value percentage
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_mode.percentage = "";


// ---- sap.viz.ui5.types.StackedVerticalBar_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.StackedVerticalBar_orientation.vertical = "";


// ---- sap.viz.ui5.types.Title_alignment --------------------------------------------------------------------------

/**
 * Value center
 * @public
 * 
 */
sap.viz.ui5.types.Title_alignment.center = "";

/**
 * Value left
 * @public
 * 
 */
sap.viz.ui5.types.Title_alignment.left = "";

/**
 * Value right
 * @public
 * 
 */
sap.viz.ui5.types.Title_alignment.right = "";


// ---- sap.viz.ui5.types.Tooltip_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.Tooltip_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.VerticalBar_drawingEffect --------------------------------------------------------------------------

/**
 * Value glossy
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_drawingEffect.glossy = "";

/**
 * Value normal
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_drawingEffect.normal = "";


// ---- sap.viz.ui5.types.VerticalBar_orientation --------------------------------------------------------------------------

/**
 * Value horizontal
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_orientation.horizontal = "";

/**
 * Value vertical
 * @public
 * 
 */
sap.viz.ui5.types.VerticalBar_orientation.vertical = "";

